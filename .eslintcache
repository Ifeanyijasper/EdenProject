[{"/home/jb-inc/Desktop/ReactJs/EdenProject/src/index.js":"1","/home/jb-inc/Desktop/ReactJs/EdenProject/src/App.js":"2","/home/jb-inc/Desktop/ReactJs/EdenProject/src/reportWebVitals.js":"3","/home/jb-inc/Desktop/ReactJs/EdenProject/src/Navigation/navigation.js":"4","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/index.js":"5","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Welcome.reducer.js":"6","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Points.reducers.js":"7","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Auth.reducer.js":"8","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Refresh.reducer.js":"9","/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/index.js":"10","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Purchase.reducer.js":"11","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Data.reducer.js":"12","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/types.js":"13","/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Client/Client.page.js":"14","/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Dashboard/Dashboard.page.js":"15","/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Home/Home.page.js":"16","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/index.js":"17","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/SideNav/SideNav.section.js":"18","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/Client.section.js":"19","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Nav/Nav.section.js":"20","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientSide/ClientSide.section.js":"21","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientInfo/ClientInfo.section.js":"22","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/Finance.section.js":"23","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/Service.section.js":"24","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/NewPurchase/NewPurchase.section.js":"25","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Product/Product.section.js":"26","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/Worker.section.js":"27","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/Product.section.js":"28","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/Service.section.js":"29","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/Product.section.js":"30","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditWorker/EditWorker.section.js":"31","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditService/EditService.section.js":"32","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditProduct/EditProduct.section.js":"33","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Profile/Profile.section.js":"34","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditPassword/EditPassword.section.js":"35","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Service/Service.section.js":"36","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Referal/Referal.section.js":"37","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/Finance.section.js":"38","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/Checkout.section.js":"39","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/Checkout.section.js":"40","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/AddTestimonial/AddTestimonial.section.js":"41","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/AdminCard/AdminCard.component.js":"42","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/WorkArea/WorkArea.component.js":"43","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Home/Home.section.js":"44","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ClientsCard/ClientsCard.component.js":"45","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Testimonials/Testimonials.section.js":"46","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/Button.component.js":"47","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Search/Search.component.js":"48","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/TimeLine/TimeLine.section.js":"49","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/MiniProgressBar/MiniProgessBar.component.js":"50","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/SectionsCard/SectionCard.component.js":"51","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ReferCard/ReferCard.component.js":"52","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Route/RouteIndicator.component.js":"53","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/TestimonialCard/TestimonialCard.component.js":"54","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ActivityIndicator/ActivityIndicator.component.js":"55","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ActivityIndicatorLarger/ActivityIndicator.component.js":"56","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notify/Notification.component.js":"57","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/TextArea/TextArea.component.js":"58","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/SummitTech/SummitTech.component.js":"59","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notification/Notification.component.js":"60","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/RankRate/RankRate.component.js":"61","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Testimonial/Testimonial.component.js":"62","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Input/Input.component.js":"63","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/Item.component.js":"64","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Dashboard/Dashboard.section.js":"65","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Login/Login.section.js":"66","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/extractIni.js":"67","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/Client.list.js":"68","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/search.js":"69","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Auth.actions.js":"70","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Refresh.actions.js":"71","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Data.actions.js":"72","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/CheckoutDetail/Checkout.detail.js":"73","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/CheckoutList/Checkout.list.js":"74","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Purchase.actions.js":"75","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/CheckoutDetail/Checkout.detail.js":"76","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/FinanceList/Finance.list.js":"77","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/FinanceDetail/Finance.detail.js":"78","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/CheckoutList/Checkout.list.js":"79","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Welcome.actions.js":"80","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/ProductList/ProductList.js":"81","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/ProductDetail/ProductDetail.js":"82","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/ServiceList/ServiceList.js":"83","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/ServiceDetail/ServiceDetail.js":"84","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Points.actions.js":"85","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/ProductList.js":"86","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/Worker.list.js":"87","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/ServiceList.js":"88","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceDetail/Finance.detail.js":"89","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/Finance.list.js":"90","/home/jb-inc/Desktop/ReactJs/EdenProject/src/res/images/index.js":"91","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/date.js":"92","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/searchObj.js":"93","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/gallery.section.js":"94","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/number.js":"95","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/Card.component.js":"96","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/squareButton.component.js":"97","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/CardDetail.component.js":"98","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/globalVariable.js":"99","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/index.js":"100","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/LoginButton.component.js":"101","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/admingallery.section.js":"102","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/DisplayCard.component.js":"103","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/AddProduct.section.js":"104","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/AddService.section.js":"105","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/AddWorker.section.js":"106","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/AddClient.section.js":"107","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/ClientDetail.section.js":"108","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/MiniProgressBar/Progress.component.js":"109","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/WorkerDetail.section.js":"110","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/ProductDetail.section.js":"111","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/ServiceDetail.section.js":"112","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/FinanceDetail.section.js":"113","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/EditWorker.section.js":"114","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/EditClient.section.js":"115","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notification/Confirmation.component.js":"116","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/EditProduct.section.js":"117","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/EditService.setion.js":"118","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/AddGallery.section.js":"119","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/GalleryCard.component.js":"120","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/EditGallery.section.js":"121","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/GalleryDetail.section.js":"122","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/imageVariable.js":"123","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/AddPurchase.section.js":"124"},{"size":500,"mtime":1614782862901,"results":"125","hashOfConfig":"126"},{"size":482,"mtime":1614782862897,"results":"127","hashOfConfig":"126"},{"size":362,"mtime":1614782862901,"results":"128","hashOfConfig":"126"},{"size":448,"mtime":1633613582270,"results":"129","hashOfConfig":"126"},{"size":478,"mtime":1614782862901,"results":"130","hashOfConfig":"126"},{"size":332,"mtime":1614782862901,"results":"131","hashOfConfig":"126"},{"size":503,"mtime":1614782862901,"results":"132","hashOfConfig":"126"},{"size":859,"mtime":1614944136163,"results":"133","hashOfConfig":"126"},{"size":367,"mtime":1614782862901,"results":"134","hashOfConfig":"126"},{"size":167,"mtime":1614782862901,"results":"135","hashOfConfig":"126"},{"size":1591,"mtime":1634827151196,"results":"136","hashOfConfig":"126"},{"size":10071,"mtime":1634829153458,"results":"137","hashOfConfig":"126"},{"size":2059,"mtime":1634135822979,"results":"138","hashOfConfig":"126"},{"size":309,"mtime":1614782862901,"results":"139","hashOfConfig":"126"},{"size":1592,"mtime":1633813307666,"results":"140","hashOfConfig":"126"},{"size":1561,"mtime":1633613392135,"results":"141","hashOfConfig":"126"},{"size":2330,"mtime":1634311001786,"results":"142","hashOfConfig":"126"},{"size":19154,"mtime":1634109558421,"results":"143","hashOfConfig":"126"},{"size":358,"mtime":1634249843227,"results":"144","hashOfConfig":"126"},{"size":5664,"mtime":1633612776056,"results":"145","hashOfConfig":"126"},{"size":2612,"mtime":1615211011349,"results":"146","hashOfConfig":"126"},{"size":3602,"mtime":1615898773544,"results":"147","hashOfConfig":"126"},{"size":238,"mtime":1634590968307,"results":"148","hashOfConfig":"126"},{"size":236,"mtime":1633833393214,"results":"149","hashOfConfig":"126"},{"size":10708,"mtime":1634797821159,"results":"150","hashOfConfig":"126"},{"size":3034,"mtime":1634822749522,"results":"151","hashOfConfig":"126"},{"size":358,"mtime":1633831925535,"results":"152","hashOfConfig":"126"},{"size":237,"mtime":1633833273127,"results":"153","hashOfConfig":"126"},{"size":602,"mtime":1633549274687,"results":"154","hashOfConfig":"126"},{"size":602,"mtime":1633549274679,"results":"155","hashOfConfig":"126"},{"size":5576,"mtime":1615667983063,"results":"156","hashOfConfig":"157"},{"size":5849,"mtime":1615729275235,"results":"158","hashOfConfig":"157"},{"size":5798,"mtime":1615729256395,"results":"159","hashOfConfig":"157"},{"size":9141,"mtime":1633827885893,"results":"160","hashOfConfig":"126"},{"size":5442,"mtime":1615667844469,"results":"161","hashOfConfig":"126"},{"size":3078,"mtime":1634822844557,"results":"162","hashOfConfig":"126"},{"size":1812,"mtime":1615205681723,"results":"163","hashOfConfig":"126"},{"size":662,"mtime":1614782862913,"results":"164","hashOfConfig":"126"},{"size":674,"mtime":1615651346398,"results":"165","hashOfConfig":"126"},{"size":674,"mtime":1615894548063,"results":"166","hashOfConfig":"126"},{"size":3313,"mtime":1615899411736,"results":"167","hashOfConfig":"126"},{"size":1364,"mtime":1633834538911,"results":"168","hashOfConfig":"126"},{"size":290,"mtime":1634312447848,"results":"169","hashOfConfig":"126"},{"size":7525,"mtime":1634571260403,"results":"170","hashOfConfig":"126"},{"size":1541,"mtime":1634158902431,"results":"171","hashOfConfig":"126"},{"size":2615,"mtime":1634567971599,"results":"172","hashOfConfig":"126"},{"size":556,"mtime":1633834234072,"results":"173","hashOfConfig":"126"},{"size":3326,"mtime":1634821407182,"results":"174","hashOfConfig":"126"},{"size":1349,"mtime":1614782862945,"results":"175","hashOfConfig":"126"},{"size":626,"mtime":1633830235729,"results":"176","hashOfConfig":"126"},{"size":641,"mtime":1614782862901,"results":"177","hashOfConfig":"126"},{"size":836,"mtime":1615587665472,"results":"178","hashOfConfig":"126"},{"size":636,"mtime":1633637275674,"results":"179","hashOfConfig":"126"},{"size":720,"mtime":1615906662803,"results":"180","hashOfConfig":"126"},{"size":258,"mtime":1614782862897,"results":"181","hashOfConfig":"126"},{"size":258,"mtime":1614782862897,"results":"182","hashOfConfig":"126"},{"size":555,"mtime":1614812160110,"results":"183","hashOfConfig":"126"},{"size":1441,"mtime":1633822724758,"results":"184","hashOfConfig":"126"},{"size":247,"mtime":1633549274679,"results":"185","hashOfConfig":"126"},{"size":709,"mtime":1633824134006,"results":"186","hashOfConfig":"126"},{"size":2773,"mtime":1634828882192,"results":"187","hashOfConfig":"126"},{"size":1664,"mtime":1633625184121,"results":"188","hashOfConfig":"126"},{"size":2064,"mtime":1634568449663,"results":"189","hashOfConfig":"126"},{"size":5091,"mtime":1634797267905,"results":"190","hashOfConfig":"126"},{"size":10192,"mtime":1634829153458,"results":"191","hashOfConfig":"126"},{"size":6646,"mtime":1634567502516,"results":"192","hashOfConfig":"126"},{"size":378,"mtime":1614782862945,"results":"193","hashOfConfig":"126"},{"size":5186,"mtime":1634312014443,"results":"194","hashOfConfig":"126"},{"size":362,"mtime":1614782862945,"results":"195","hashOfConfig":"126"},{"size":608,"mtime":1614944062830,"results":"196","hashOfConfig":"126"},{"size":151,"mtime":1614782862901,"results":"197","hashOfConfig":"126"},{"size":4435,"mtime":1634826200983,"results":"198","hashOfConfig":"126"},{"size":5743,"mtime":1634829153458,"results":"199","hashOfConfig":"126"},{"size":4588,"mtime":1615895053620,"results":"200","hashOfConfig":"126"},{"size":494,"mtime":1614782862901,"results":"201","hashOfConfig":"126"},{"size":5743,"mtime":1634829153458,"results":"202","hashOfConfig":"126"},{"size":4351,"mtime":1615207608248,"results":"203","hashOfConfig":"126"},{"size":2004,"mtime":1616335335757,"results":"204","hashOfConfig":"126"},{"size":7102,"mtime":1633808530021,"results":"205","hashOfConfig":"126"},{"size":122,"mtime":1614782862901,"results":"206","hashOfConfig":"126"},{"size":3886,"mtime":1634313100986,"results":"207","hashOfConfig":"126"},{"size":1854,"mtime":1615727629546,"results":"208","hashOfConfig":"126"},{"size":3915,"mtime":1634313045550,"results":"209","hashOfConfig":"126"},{"size":1898,"mtime":1615727582338,"results":"210","hashOfConfig":"126"},{"size":273,"mtime":1614782862901,"results":"211","hashOfConfig":"126"},{"size":4117,"mtime":1634313140675,"results":"212","hashOfConfig":"126"},{"size":4160,"mtime":1634312052353,"results":"213","hashOfConfig":"126"},{"size":4045,"mtime":1634818364373,"results":"214","hashOfConfig":"126"},{"size":3199,"mtime":1616345278354,"results":"215","hashOfConfig":"157"},{"size":9175,"mtime":1634828204632,"results":"216","hashOfConfig":"126"},{"size":475,"mtime":1633563065652,"results":"217","hashOfConfig":"126"},{"size":601,"mtime":1633808068516,"results":"218","hashOfConfig":"126"},{"size":611,"mtime":1616344145760,"results":"219","hashOfConfig":"126"},{"size":5380,"mtime":1634569957988,"results":"220","hashOfConfig":"126"},{"size":365,"mtime":1633549457506,"results":"221","hashOfConfig":"126"},{"size":1634,"mtime":1634570311179,"results":"222","hashOfConfig":"126"},{"size":474,"mtime":1633561028072,"results":"223","hashOfConfig":"126"},{"size":6806,"mtime":1633558380024,"results":"224","hashOfConfig":"157"},{"size":157,"mtime":1633566315405,"results":"225","hashOfConfig":"126"},{"size":2039,"mtime":1634564792001,"results":"226","hashOfConfig":"126"},{"size":793,"mtime":1633549274679,"results":"227","hashOfConfig":"126"},{"size":6580,"mtime":1634589629053,"results":"228","hashOfConfig":"126"},{"size":2631,"mtime":1634314074794,"results":"229","hashOfConfig":"126"},{"size":8197,"mtime":1634564181101,"results":"230","hashOfConfig":"126"},{"size":8030,"mtime":1634141409320,"results":"231","hashOfConfig":"126"},{"size":7129,"mtime":1634829153462,"results":"232","hashOfConfig":"126"},{"size":9465,"mtime":1634159544470,"results":"233","hashOfConfig":"126"},{"size":6544,"mtime":1634162586645,"results":"234","hashOfConfig":"126"},{"size":598,"mtime":1633830980694,"results":"235","hashOfConfig":"126"},{"size":6815,"mtime":1634591240502,"results":"236","hashOfConfig":"126"},{"size":5026,"mtime":1634162554471,"results":"237","hashOfConfig":"126"},{"size":5058,"mtime":1634162532423,"results":"238","hashOfConfig":"126"},{"size":5463,"mtime":1634826649218,"results":"239","hashOfConfig":"126"},{"size":7416,"mtime":1634829153462,"results":"240","hashOfConfig":"126"},{"size":7253,"mtime":1634576746193,"results":"241","hashOfConfig":"126"},{"size":1884,"mtime":1634591644289,"results":"242","hashOfConfig":"126"},{"size":8474,"mtime":1634576223746,"results":"243","hashOfConfig":"126"},{"size":8274,"mtime":1634576297903,"results":"244","hashOfConfig":"126"},{"size":6825,"mtime":1634829153462,"results":"245","hashOfConfig":"126"},{"size":1646,"mtime":1634572885310,"results":"246","hashOfConfig":"126"},{"size":6807,"mtime":1634829153462,"results":"247","hashOfConfig":"126"},{"size":4617,"mtime":1634589035056,"results":"248","hashOfConfig":"126"},{"size":27,"mtime":1634571766715,"results":"249","hashOfConfig":"126"},{"size":13969,"mtime":1634829153458,"results":"250","hashOfConfig":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},"jolr4g",{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"253"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"253"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"253"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"253"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"253"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"320"},"hgwtkd",{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"320"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"320"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"253"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"253"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"253"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"253"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"253"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"253"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"253"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"253"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"253"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"253"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"253"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"253"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"253"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"253"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"253"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"253"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"253"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"253"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"253"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"253"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"253"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"253"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"253"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"253"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"253"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"253"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"253"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"253"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"253"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"468"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"253"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"253"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"253"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"490"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"253"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"253"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"253"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"253"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"253"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"253"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"253"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"253"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"253"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"253"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"253"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554"},"/home/jb-inc/Desktop/ReactJs/EdenProject/src/index.js",[],["555","556"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/App.js",["557"],"import { BrowserRouter, Route } from 'react-router-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport './App.css';\nimport  './styles/mainStyles.css'\nimport Navigation from './Navigation/navigation';\nimport reducer from './redux/Reducers';\n\nconst store = createStore(reducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Navigation />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/reportWebVitals.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/Navigation/navigation.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/index.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Welcome.reducer.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Points.reducers.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Auth.reducer.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Refresh.reducer.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/index.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Purchase.reducer.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Reducers/Data.reducer.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/types.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Client/Client.page.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Dashboard/Dashboard.page.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/pages/Home/Home.page.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/index.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/SideNav/SideNav.section.js",["558"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { \n    IoGrid, \n    IoPeople, \n    IoWallet, \n    IoLogOut, \n    IoWalk, \n    IoHandLeft,\n    IoCreate,\n    IoCash,\n    IoMenu,\n    IoLeaf,\n    IoImages,\n} from \"react-icons/io5\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport styles from './SideNav.module.css';\nimport { logo } from '../../res/images';\nimport {resetUser} from '../../redux/Actions/Auth.actions';\n\nconst SideNav = (props) => {\n    const { user } = props;\n\n    const [profile, setProfile] = useState(false);\n\n    return (\n        <div className={`w-full md:w-17/100 flex md:flex-col justify-between items-center p-2 md:py-5 lg:px-3 bg-sec ${styles.nav}`}>\n            <img src={logo} className={'w-10 h-10 md:w-20 md:h-20 bg-center bg-cover ml-2.5 md:mr-0'} alt=\"Logo\" />\n            {user.is_superuser && (\n                <>\n                    <div className={`hidden md:flex flex-col mt-4 w-full h-80 overflow-y-scroll overflowY`}>\n                        <h4 className={'mt-4 mb-2 mx-1.5 text-sm font-semibold text-white'}>Tools</h4>\n                        <NavLink to=\"/dashboard\" exact className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoGrid className=\"mr-2.5 font-semibold\" /> Dashboard</NavLink>\n                        <NavLink to='/dashboard/clients' exact className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoPeople className=\"mr-2.5 font-semibold\" /> Clients</NavLink>\n                        <NavLink to='/dashboard/workers' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWalk className=\"mr-2.5 font-semibold\" /> Workers</NavLink>\n                        <NavLink to='/dashboard/finances' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWallet className=\"mr-2.5 font-semibold\" /> Finances</NavLink>\n                        <NavLink to='/dashboard/checkout' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCash className=\"mr-2.5 font-semibold\" /> Checkouts</NavLink>\n                        <NavLink to='/dashboard/services' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoHandLeft className=\"mr-2.5 font-semibold\" /> Services</NavLink>\n                        <NavLink to='/dashboard/products' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLeaf className=\"mr-2.5 font-semibold\" /> Products</NavLink>\n                        <NavLink to='/dashboard/gallery' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoImages className=\"mr-2.5 font-semibold\" /> Gallery</NavLink>\n                        <NavLink to='/dashboard/profile' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCreate className=\"mr-2.5 font-semibold\" /> Profile</NavLink>\n                    </div>\n                    <div onClick={() => setProfile(!profile)} className=\"relative flex md:hidden text-white\">\n                        <IoMenu className=\"text-xl\" />\n                        <div className={`absolute z-50 h-screen -top-4 bg-sec rounded py-1 shadow-lg transition-all duration-500 ease-in-out ${profile ? 'w-56 -right-3 opacity-100 visible' : 'w-10 opacity-0 -right-20 invisible'}`}>\n                            <div onClick={() => setProfile(!profile)} className=\"py-5 px-3\">\n                                <h4 className={'mt-4 mb-2 mx-1.5 text-sm font-semibold text-white'}>Tools</h4>\n                                <NavLink to=\"/dashboard\" exact className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoGrid className=\"mr-2.5 font-semibold\" /> Dashboard</NavLink>\n                                <NavLink to='/dashboard/clients' exact className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoPeople className=\"mr-2.5 font-semibold\" /> Clients</NavLink>\n                                <NavLink to='/dashboard/workers' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWalk className=\"mr-2.5 font-semibold\" /> Workers</NavLink>\n                                <NavLink to='/dashboard/finances' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWallet className=\"mr-2.5 font-semibold\" /> Finances</NavLink>\n                                <NavLink to='/dashboard/checkout' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCash className=\"mr-2.5 font-semibold\" /> Checkouts</NavLink>\n                                <NavLink to=\"/dashboard/services\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoHandLeft className=\"mr-2.5 font-semibold\" /> Services</NavLink>\n                                <NavLink to=\"/dashboard/products\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLeaf className=\"mr-2.5 font-semibold\" /> Products</NavLink>\n                                <NavLink to=\"/dashboard/gallery\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoImages className=\"mr-2.5 font-semibold\" /> Gallery</NavLink>\n                                <NavLink to=\"/dashboard/profile\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCreate className=\"mr-2.5 font-semibold\" /> Profile</NavLink>\n                                <h4 className={'mt-5 mx-1.5 text-sm font-semibold text-white'}>Other</h4>\n                                <NavLink to=\"/\" exact onClick={() => props.resetUser()} className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLogOut className=\"mr-2.5 font-semibold\" /> Logout</NavLink>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`hidden md:flex flex-col mt-4 w-full`}>\n                    <h4 className={'mt-5 mx-1.5 text-sm font-semibold text-white'}>Other</h4>\n                        <NavLink to=\"/\" exact onClick={() => props.resetUser()} className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLogOut className=\"mr-2.5 font-semibold\" /> Logout</NavLink>\n                    </div>\n                </>\n            )}\n            {user.is_worker && (\n                <>\n                    <div className={`hidden md:flex flex-col mt-4 w-full h-80 overflow-y-scroll overflowY`}>\n                        <h4 className={'mt-4 mb-2 mx-1.5 text-sm font-semibold text-white'}>Tools</h4>\n                        <NavLink to=\"/dashboard\" exact className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoGrid className=\"mr-2.5 font-semibold\" /> Dashboard</NavLink>\n                        <NavLink to='/dashboard/clients' exact className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoPeople className=\"mr-2.5 font-semibold\" /> Clients</NavLink>\n                        <NavLink to='/dashboard/workers' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWalk className=\"mr-2.5 font-semibold\" /> Workers</NavLink>\n                        <NavLink to='/dashboard/finances' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWallet className=\"mr-2.5 font-semibold\" /> Finances</NavLink>\n                        <NavLink to='/dashboard/checkout' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCash className=\"mr-2.5 font-semibold\" /> Checkouts</NavLink>\n                        <NavLink to='/dashboard/services' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoHandLeft className=\"mr-2.5 font-semibold\" /> Services</NavLink>\n                        <NavLink to='/dashboard/products' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLeaf className=\"mr-2.5 font-semibold\" /> Products</NavLink>\n                        <NavLink to='/dashboard/gallery' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoImages className=\"mr-2.5 font-semibold\" /> Gallery</NavLink>\n                        <NavLink to='/dashboard/profile' className={`flex items-center md:p-2 lg:p-2.5 rounded text-xs text-gray-500 font-semibold mb-1 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCreate className=\"mr-2.5 font-semibold\" /> Profile</NavLink>\n                        <h4 className={'mt-5 mx-1.5 text-sm font-semibold text-white'}>Other</h4>\n                        <NavLink to=\"/\" exact onClick={() => props.resetUser()} className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLogOut className=\"mr-2.5 font-semibold\" /> Logout</NavLink>\n                    </div>\n                    <div onClick={() => setProfile(!profile)} className=\"relative flex md:hidden text-white\">\n                        <IoMenu className=\"text-xl\" />\n                        <div className={`absolute z-50 h-screen -top-4 bg-sec rounded py-1 shadow-lg transition-all duration-500 ease-in-out ${profile ? 'w-56 -right-3 opacity-100 visible' : 'w-10 opacity-0 -right-20 invisible'}`}>\n                            <div onClick={() => setProfile(!profile)} className=\"py-5 px-3\">\n                                <h4 className={'mt-4 mb-2 mx-1.5 text-sm font-semibold text-white'}>Tools</h4>\n                                <NavLink to=\"/dashboard\" exact className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoGrid className=\"mr-2.5 font-semibold\" /> Dashboard</NavLink>\n                                <NavLink to='/dashboard/clients' exact className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoPeople className=\"mr-2.5 font-semibold\" /> Clients</NavLink>\n                                <NavLink to='/dashboard/workers' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWalk className=\"mr-2.5 font-semibold\" /> Workers</NavLink>\n                                <NavLink to='/dashboard/finances' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoWallet className=\"mr-2.5 font-semibold\" /> Finances</NavLink>\n                                <NavLink to='/dashboard/checkout' className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCash className=\"mr-2.5 font-semibold\" /> Checkouts</NavLink>\n                                <NavLink to=\"/dashboard/services\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoHandLeft className=\"mr-2.5 font-semibold\" /> Services</NavLink>\n                                <NavLink to=\"/dashboard/products\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLeaf className=\"mr-2.5 font-semibold\" /> Products</NavLink>\n                                <NavLink to=\"/dashboard/gallery\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoImages className=\"mr-2.5 font-semibold\" /> Gallery</NavLink>\n                                <NavLink to=\"/dashboard/profile\" className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoCreate className=\"mr-2.5 font-semibold\" /> Profile</NavLink>\n                                <h4 className={'mt-5 mx-1.5 text-sm font-semibold text-white'}>Other</h4>\n                                <NavLink to=\"/\" exact onClick={() => props.resetUser()} className={`flex items-center p-2 rounded text-sm text-gray-500 font-semibold my-1.5 transition-all duration-500 hover:bg-green-200 hover:bg-opacity-10 hover:text-gray-300`} activeClassName={`text-green-50 ${styles.sideNavActive}`}><IoLogOut className=\"mr-2.5 font-semibold\" /> Logout</NavLink>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </>\n            )}\n            {/* <li className={styles.linksItem}><NavLink className={styles.linksLink} activeClassName={styles.linksActive} to='/language'><IoLanguage className={styles.icons} />Language</NavLink></li> */}\n            {/* <li className={styles.linksItem}><NavLink to='/support' className={styles.linksLink} activeClassName={styles.linksActive}><IoHelp className={styles.icons} />Support</NavLink></li> */}\n            <div className={`mt-auto hidden md:block text-center text-white text-xs`}>\n                <p>Copyright @ <NavLink to='/summit-tech' className={styles.footerLink}>Summit Tech</NavLink></p>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({resetUser}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNav);\n\nconst customStyles = {\n    // borderWidth: '1px', \n    // borderColor: 'red', \n    // borderStyle: 'solid',\n    // height: '200px',\n    // display: 'flex',\n    // flexDirection: 'column',\n    // marginBottom: '9px',\n}\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/Client.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Nav/Nav.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientSide/ClientSide.section.js",["559","560","561"],"import React from 'react';\nimport { IoBarChart, IoCard, IoLocation, IoLogOut, IoMail, IoPeople, IoPhonePortrait, IoPower, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport { img_4 } from '../../res/images';\nimport extractInitials from '../../utils/extractIni';\nimport styles from './ClientSide.module.css';\nimport {resetUser} from '../../redux/Actions/Auth.actions'\n\nconst ClientSide = (props) => {\n    const {user} = props;\n    return (\n        <div className={styles.clientSide}>\n            <div className={styles.imageContainer}>\n                {user.img ? \n                    <img src={img_4} alt=\"Client Name\" className={styles.userImage} />: \n                    <h2 className={styles.userIni}>{extractInitials(user.fullname || user.username || 'Eden Beauty')}</h2>\n                }\n            </div>\n            <div className={styles.clientInfoContainer}>\n                <p className={styles.clientInfoTitle}>Contact</p>\n                <h2 className={styles.clientInfoDetails}><IoCard className={styles.clientIcon} />{user.username}</h2>\n                <h2 className={styles.clientInfoDetails}><IoMail className={styles.clientIcon} />{user.email}</h2>\n                <h2 className={styles.clientInfoDetails}><IoLocation className={styles.clientIcon} />{user.location} </h2>\n                <h2 className={styles.clientInfoDetails}><IoPhonePortrait className={styles.clientIcon} />{user.phone} </h2>\n            </div>\n            <ul className={styles.linksNavSide}>\n                <li className={[styles.linksItem, styles.logOut].join(' ')} onClick={() => props.resetUser()}><NavLink to='/' exact className={styles.linksLink} activeClassName={styles.linksActive}><IoLogOut className={styles.icons} />Logout</NavLink></li>\n                <li className={styles.linkLogout} onClick={() => props.resetUser()}><NavLink to=\"/\" exact className={styles.linksLogout}><IoPower className={styles.linksIcons}/></NavLink></li>\n            </ul>\n            <div className={styles.footerContainer}>\n                <p className={styles.footerContainerText}>Copyright @ <NavLink to='/summit-tech' className={styles.footerLink}>Summit Tech</NavLink></p>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({resetUser}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientSide);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientInfo/ClientInfo.section.js",["562","563","564"],"import React,{useState} from 'react';\nimport {  IoCash, IoPeople, IoStatsChart } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { NavLink, Route } from 'react-router-dom';\n\nimport { ClientFinance, Products, Referal, Services, Profile, ClientCheckout, AddTestimonial } from '..';\nimport { RankRate } from '../../components';\nimport styles from './ClientInfo.module.css';\n\nconst ClientInfo = (props) => {\n    const {user} = props;\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Week',\n        'Months',\n        'Years',\n        'Name',\n        'Worker'\n    ])\n    const [showDets, setShowDets] = useState(false);\n    const [add, setAdd] = useState(false);\n\n    return (\n        <div className={styles.clientInfo}>\n            <div className={styles.clientContainer}>\n                <h1 className={styles.clientName}>{user.fullname || user.username}</h1>\n                <div className={styles.clientButtons}>\n                    <button className={styles.clientButton} onClick={() => setShowDets(!showDets)}>{showDets ? 'Hide Bonuses' : 'Show Bonuses'}</button>\n                    <button className={styles.clientButton} onClick={() => setAdd(!add)}>Add Testimonial</button>\n                </div>\n            </div>\n            {/* <p className={styles.lastVisit}>Last Visit: Mon, 22<sup>nd</sup> Dec, 2020</p> */}\n            {/* <p className={styles.lastVisit}>Last Visit: 22/12/2020</p> */}\n            { showDets &&\n                <>\n                    <div className={styles.clientHeader}>\n                        <h2 className={styles.clientRating}>My Bonuses</h2>\n                        <RankRate user={user} bonus={'my_bonus'} rate={user.my_bonus || 0} />\n                    </div>\n                    <div className={styles.clientHeader}>\n                        <h2 className={styles.clientRating}>Referer Bonuses</h2>\n                        <RankRate user={user} bonus={'refer_bonus'} rate={user.refer_bonus || 0} />\n                    </div>\n                </>\n            }\n            <nav className={styles.navContainer}>\n                <ul className={styles.navList}>\n                    <li className={styles.navItem}><NavLink to=\"/client\" exact className={styles.navLink} activeClassName={styles.navActive}><IoStatsChart /> TimeLine</NavLink></li>\n                    <li className={styles.navItem}><NavLink to=\"/client/referrals\" className={styles.navLink} activeClassName={styles.navActive}><IoPeople /> Referred</NavLink></li>\n                    <li className={styles.navItem}><NavLink to=\"/client/checkout\" className={styles.navLink} activeClassName={styles.navActive}><IoCash /> Checkouts</NavLink></li>\n                    <li className={styles.navItem}><NavLink to=\"/client/profile\" className={styles.navLink} activeClassName={styles.navActive}><IoPeople /> Profile</NavLink></li>\n                </ul>\n                <hr className={styles.navLine}/>\n            </nav>\n            <Route path=\"/client\" exact component={ClientFinance} />\n            <Route path=\"/client/referrals\" component={Referal} />\n            <Route path=\"/client/profile\" component={Profile} />\n            <Route path=\"/client/checkout\" component={ClientCheckout} />\n            <Route path=\"/client/services\" component={Services} />\n            <Route path=\"/client/products\" component={Products} />\n            <AddTestimonial isOpen={add} setIsOpen={setAdd} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(ClientInfo);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/Finance.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/Service.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/NewPurchase/NewPurchase.section.js",["565","566","567"],"import React, { useEffect, useState } from 'react';\nimport { IoBriefcase, IoBody } from 'react-icons/io5';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { bindActionCreators } from 'redux';\n\nimport { Product, Service } from '..';\nimport { Activity, Button, Notification } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './NewPurchase.module.css';\nimport {setClearPurchase} from '../../redux/Actions/Purchase.actions';\nimport {setPoint} from '../../redux/Actions/Points.actions';\n\nconst NewPurchase = (props) => {\n    const {\n      isOpen,\n      setIsOpen, \n      username, \n      password, \n      product, \n      total,\n      user,\n    } = props;\n    const [options, setOptions] = useState([]);\n    const [client, setClient] = useState('');\n    const [list, setList] = useState([]);\n    const [purchase, setPurchase] = useState('Products');\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    const fetchMyBonus = async (id) => {\n            try {\n                const response = await fetch(`${BASE_URL}/register/${id}/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                    },\n                });\n            const registered = await response.json();\n            const myBonus = registered.my_bonus;\n            const served = registered.served;\n            const refer_bonus = registered.refer_bonus;\n            return [myBonus, served, refer_bonus];\n            }\n            catch(err) {\n                console.log(err, 'Received error');\n            }\n            \n        }\n\n    const updateMyBonus = (id, myBonus) => {\n      const body = {\n        my_bonus: myBonus,\n      }\n      fetch(`${BASE_URL}/register/${id}/`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n        },\n        body: JSON.stringify(body),\n      })\n      .then(res => {\n        const response = res.json();\n        return response;\n      })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n\n    const updateReferBonus = (id, Bonus) => {\n      const body = {\n        refer_bonus: Bonus,\n      }\n      fetch(`${BASE_URL}/register/${id}/`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n        },\n        body: JSON.stringify(body),\n      })\n      .then(res => {\n        const response = res.json();\n        return response;\n      })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n\n    const updateServed = (id, served) => {\n       const body = {\n         served\n       }\n      fetch(`${BASE_URL}/register/${id}/`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n        },\n        body: JSON.stringify(body),\n      })\n      .then(res => {\n        const response = res.json();\n        return response;\n      })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n\n    useEffect(() => {\n      let _referals = [];\n       fetch(`${BASE_URL}/register/`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(response => {\n                const res = response.json();\n                return res;\n            })\n            .then(res => {\n              if(res.length > 1) {\n                let _res = res.filter((data) => data.is_client);\n                setList(_res);\n                if(_res.length > 0) {\n                  _res.map((re, index) => (\n                      _referals.push({value: re.id, label: re.username})\n                  ));\n                }\n                setOptions([..._referals]);\n              }\n            })\n            .catch(err => {\n              console.log(err);\n            })\n\n    }, [isOpen]);\n\n    const exit = () => {\n      setIsOpen(false);\n      props.setClearPurchase();\n    }\n\n    const purchased = () => {\n      setIsLoading(true);\n      let friend;\n      const body = {\n        client: client.label,\n        client_id: client.value,\n        worker_id: user.id,\n        worker: username,\n        item: product,\n        total: total,\n        point: total/1000,\n      }\n\n      friend = list.filter(data => data.id === client.value);\n\n      fetch(`${BASE_URL}/purchase/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n        },\n        body: JSON.stringify(body),\n      })\n      .then(res => {\n        const response = res.json();\n        return response;\n      })\n      .then(res => {\n        setIsLoading(false);\n        props.setClearPurchase();\n        props.setPoint(client.value, total/2000, friend[0].friend);\n        setNotify(true);\n        setMsg({\n            title: 'Successful Purchase',\n            message: 'Purchase completed, you served one more person.'\n          })\n        if(friend[0].served === null && friend[0].friend !== null) {\n          let friendId = friend[0].friend;\n          let data = fetchMyBonus(friendId);\n          data\n            .then(res => {\n              let myBonus = Number(res[2]) + (total * 0.15);\n              updateReferBonus(friendId, myBonus);\n            })\n            .then(res => {\n              let data = fetchMyBonus(client.value);\n                data\n                  .then(res => {\n                    let served = Number(res[1]) + 1;\n                    updateServed(client.value, served);\n                  })\n                  .then(res => {\n                    let data = fetchMyBonus(user.id);\n                    data\n                      .then(res => {\n                        let served = Number(res[1]) + 1;\n                        updateServed(user.id, served);\n                      })\n                  })\n            })\n        } else {\n          let friendId = friend[0].friend;\n          let data = fetchMyBonus(friendId);\n          data\n            .then(res => {\n              let myBonus = Number(res[2]) + (total * 0.025);\n              updateReferBonus(friendId, myBonus);\n            })\n            .then(res => {\n              let data = fetchMyBonus(client.value);\n                data\n                  .then(res => {\n                    let myBonus = Number(res[0]) + (total * 0.05);\n                    let served = Number(res[1]) + 1;\n                    updateMyBonus(client.value, myBonus);\n                    updateServed(client.value, served);\n                  })\n                  .then(res => {\n                    let data = fetchMyBonus(user.id);\n                    data\n                      .then(res => {\n                        let served = Number(res[1]) + 1;\n                        updateServed(user.id, served);\n                      })\n                  })\n            })\n        }\n        return res;\n      })\n      .then(res => {\n        setTimeout(() => {  \n          setIsOpen(false);\n        }, 3000);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setNotify(true);\n        setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n      })\n    }\n\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <div className={styles.purchaseContainer}>\n              <h2 className={styles.purchaseTitle}>New Purchase</h2>\n              <Button title='Exit' onClick={() => exit()} />\n            </div>\n            <div className={styles.purchaseServer}>\n              <Select \n                options={options} \n                styles={customStyles} \n                className={styles.selector}\n                onChange={(value) => setClient(value)}\n              />\n            </div>\n            <nav className={styles.navContainer}>\n                <ul className={styles.navList}>\n                    <li className={styles.navItem} onClick={() => setPurchase('Products')}><i className={[styles.navLink, purchase === 'Products' && styles.navActive].join(' ')}><IoBriefcase/> Products</i></li>\n                    <li className={styles.navItem} onClick={() => setPurchase('Services')}><i className={[styles.navLink, purchase === 'Services' && styles.navActive].join(' ')}><IoBody /> Services</i></li>\n                </ul>\n                <hr className={styles.navLine}/>\n            </nav>\n            {purchase === \"Products\" ? (\n              <Product />\n            ) : (\n              <div>\n                <Service />\n              </div>\n            )}\n            <div className={styles.purchaseButton}>\n              {isLoading ? <Activity /> : <Button title=\"Purchase\" onClick={() => purchased()} />}\n            </div>\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />    \n        </Modal>\n    )\n}\n\nconst mapStateToProps = ({auth, purchase}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        product: purchase.product,\n        total: purchase.total,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setClearPurchase, setPoint}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPurchase);\n\nconst customStyles = {\n  option: (styles, { isFocused }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#010f24\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    backgroundColor: 'transparent',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: 0,\n    border: '1.4px solid #010f24',\n    borderRadius: '4px',\n    '&:hover': {\n       border: isFocused ? 0 : 0,\n       border: '1.4px solid #010f24',\n    }\n  })\n};\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Product/Product.section.js",["568","569"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/Worker.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/Product.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/Service.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/Product.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditWorker/EditWorker.section.js",["570","571"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, Input, Notification, SummitTech } from '../../components';\nimport styles from './EditWorker.module.css';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport {setRefresh} from '../../redux/Actions/Refresh.actions';\n\nconst EditWorker = (props) => {\n    const {\n      detail, \n      isOpen, \n      setIsOpen, \n      setIsDetail, \n      username, \n      password\n    } = props;\n    const [options] = useState([\n        {value:\"$Jume123\", label:\"$Jume123\"},\n        {value:\"Henry64$\", label:\"Henry64$\"},\n        {value:\"Dollar£\", label:\"Dollar£\"},\n        {value:\"Euro$\", label:\"Euro$\"},\n    ])\n\n\n    useEffect(()=> {\n      setName(detail.fullname);\n      setUserName(detail.username)\n      setEmail(detail.email);\n      setTel(detail.phone);\n    },[detail]);\n\n    useEffect(() => {\n      props.setRefresh(false);\n    }, [isOpen]);\n\n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    const [tel, setTel] = useState('');\n    const [email, setEmail] = useState('');\n    const [nameError, setNameError] = useState(false);\n    const [userNameError, setUserNameError] = useState(false);\n    const [telError, setTelError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const authenticate = () => {\n      let hasError;\n        setIsLoading(true);\n\n        if(name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (tel.length < 9) {\n          hasError = true;\n          setTelError(true);\n        }\n\n        if(email.length < 8) {\n          hasError = true;\n          setEmailError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const body = {\n          fullname: name,\n          username: userName,\n          phone: tel,\n          email: email,\n        }\n\n        fetch(`${BASE_URL}/register/${detail.id}/`, {\n          method: 'PATCH',\n          headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n          body: JSON.stringify(body),\n        })\n        .then(res => {\n          setIsLoading(false);\n          props.setRefresh(true);\n          setNotify(true);\n          setMsg({\n            title: 'Successful',\n            message: 'Worker information updated.'\n          })\n        })\n        .then(res => {\n          setTimeout(() => {\n            setIsDetail(false);\n            setIsOpen(false);            \n          }, 3000);\n        })\n        .catch(err => {\n          setIsLoading(false);\n          setNotify(true);\n          setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n        })\n    }\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <SummitTech title=\"Edit Worker\" />\n           <div className={styles.formContainer}>\n                <Input \n                placeholder={detail.fullname}\n                label=\"Name\"\n                secureText={false}\n                type=\"text\"\n                value={name}\n                setValue={(event) => setName(event.target.value)}\n                error={nameError}\n                setError={() => setNameError} />\n                <Input \n                  placeholder={detail.username} \n                  label=\"Username\"\n                  secureText={false}\n                  type=\"text\"\n                  value={userName}\n                  setValue={(event) => setUserName(event.target.value)}\n                  error={userNameError}\n                  setError={() => setUserNameError} />\n                <Input \n                placeholder={detail.phone} \n                label=\"Tel\"\n                secureText={false}\n                type=\"number\"\n                value={tel}\n                setValue={(event) => setTel(event.target.value)}\n                error={telError}\n                setError={() => setTelError} />\n                <Input \n                placeholder={detail.email}\n                label=\"Email\"\n                secureText={false}\n                type=\"email\"\n                value={email}\n                setValue={(event) => setEmail(event.target.value)}\n                error={emailError}\n                setError={() => setEmailError} />\n\n                <div className={styles.actionButtons}>\n                    {isLoading ? (<Activity />) :(\n                    <>\n                      <Button title=\"Edit\" onClick={() => authenticate()} />\n                      <Button title=\"Cancel\" onClick={()=> setIsOpen(!isOpen)} />\n                    </>)}\n                </div>\n            </div>\n            <SummitTech title=\"Eden Beauty\" />\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />    \n        </Modal>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWorker);\n",["572","573"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditService/EditService.section.js",["574","575"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { \n  Activity, \n  Button, \n  Input, \n  Notification, \n  SummitTech, \n  TextArea \n} from '../../components';\nimport {setRefresh} from '../../redux/Actions/Refresh.actions';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './EditService.module.css';\n\nconst EditService = (props) => {\n    const {\n      detail, \n      isOpen, \n      setIsOpen,\n      setIsDetail,\n    } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [discount, setDiscount] = useState('0');\n    const [about, setAbout] = useState('');\n    const [image, setImage] = useState(null);\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    useEffect(() => {\n      setName(detail.name)\n      setDiscount(detail.discount)\n      setPrice(detail.price);\n      setAbout(detail.description);\n      setImage(detail.img);\n    }, [detail]);\n\n    useEffect(() => {\n      props.setRefresh(false);\n    }, [isOpen]);\n\n    const authenticate = () => {\n        setIsLoading(true);\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n          formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/service/${detail.id}/`, {\n          method: 'PATCH',\n          body: formData,\n        })\n        .then(res => {\n          setIsLoading(false);\n          props.setRefresh(true);\n          setNotify(true);\n          setMsg({\n            title: 'Successful',\n            message: 'Service detail updated.'\n          })\n        })\n        .then(res => {\n          setTimeout(() => {\n            setIsOpen(false);\n            setIsDetail(false);            \n          }, 3000);\n        })\n        .catch(err => {\n          setIsLoading(true);\n          setNotify(true);\n          setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n        })\n    }\n\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <SummitTech title=\"Edit Service\" />\n            <div className={styles.formContainer}>\n                <Input \n                placeholder=\"Name\" \n                label=\"Name\"\n                secureText={false}\n                type=\"text\"\n                value={name}\n                setValue={(event) => setName(event.target.value)}\n                error={nameError}\n                setError={() => setNameError} />\n                <Input \n                placeholder=\"10\" \n                label=\"Discount\"\n                secureText={false}\n                type=\"text\"\n                value={discount}\n                setValue={(event) => setDiscount(event.target.value)}\n                error={discountError}\n                setError={() => setDiscountError} />\n                <Input \n                placeholder=\"5000\" \n                label=\"Price\"\n                secureText={false}\n                type=\"text\"\n                value={price}\n                setValue={(event) => setPrice(event.target.value)}\n                error={priceError}\n                setError={() => setPriceError} />\n                <Input \n                  label=\"Image\"\n                  secureText={false}\n                  type=\"file\"\n                  // value={image}\n                  setValue={(event) => setImage(event.target.files)}\n                  error={imageError}\n                  setError={() => setImageError} />\n                <TextArea\n                placeholder=\"Write about the product you are adding\" \n                label=\"About\"\n                value={about}\n                setValue={(event) => setAbout(event.target.value)}\n                error={aboutError}\n                setError={() => setAboutError} />\n                <div className={styles.actionButtons}>\n                    {isLoading ? (<Activity />) :(\n                    <>\n                      <Button title=\"Edit\" onClick={() => authenticate()} />\n                      <Button title=\"Cancel\" onClick={()=> setIsOpen(!isOpen)} />\n                    </>)}\n                </div>\n            </div>\n            <SummitTech title=\"Eden Beauty\" />\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />          \n        </Modal>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setRefresh}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(EditService);\n\nconst customStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#010f24\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    backgroundColor: 'transparent',\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: 0,\n    borderBottom: '1.4px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: '#010f24',\n    '&:hover': {\n       border: isFocused ? 0 : 0,\n       borderBottom: '1.4px',\n       borderBottomStyle: 'solid',\n       borderBottomColor: '#010f24',\n    }\n  })\n};\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditProduct/EditProduct.section.js",["576","577"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { \n  Activity, \n  Button, \n  Input, \n  Notification,\n  SummitTech, \n  TextArea \n} from '../../components';\nimport {setRefresh} from '../../redux/Actions/Refresh.actions';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './EditProduct.module.css';\n\nconst EditProduct = (props) => {\n    const {\n      detail, \n      isOpen, \n      setIsOpen, \n      setIsDetail,\n    } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [about, setAbout] = useState('');\n    const [image, setImage] = useState(null);\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    useEffect(() => {\n      setName(detail.name)\n      setDiscount(detail.discount)\n      setPrice(detail.price);\n      setAbout(detail.description);\n      setImage(detail.img);\n    }, [detail]);\n\n    useEffect(() => {\n      props.setRefresh(false);\n    }, [isOpen]);\n\n    const authenticate = () => {\n        setIsLoading(true);\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n          formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/product/${detail.id}/`, {\n          method: 'PATCH',\n          body: formData,\n        })\n        .then(res => {\n          setIsLoading(false);\n          props.setRefresh(true);\n          setNotify(true);\n          setMsg({\n            title: 'Successful',\n            message: 'Product details updated.'\n          })\n        })\n        .then(res => {\n          setTimeout(() => {\n            setIsOpen(false);\n            setIsDetail(false);\n          }, 3000);\n        })\n        .catch(err => {\n          setNotify(true);\n          setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n        })\n    }\n\n\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <SummitTech title=\"Edit Product\" />\n            <div className={styles.formContainer}>\n                <Input \n                placeholder=\"Name\" \n                label=\"Name\"\n                secureText={false}\n                type=\"text\"\n                value={name}\n                setValue={(event) => setName(event.target.value)}\n                error={nameError}\n                setError={() => setNameError} />\n                <Input \n                placeholder=\"10\" \n                label=\"Discount\"\n                secureText={false}\n                type=\"text\"\n                value={discount}\n                setValue={(event) => setDiscount(event.target.value)}\n                error={discountError}\n                setError={() => setDiscountError} />\n                <Input \n                placeholder=\"5000\" \n                label=\"Price\"\n                secureText={false}\n                type=\"text\"\n                value={price}\n                setValue={(event) => setPrice(event.target.value)}\n                error={priceError}\n                setError={() => setPriceError} />\n                <Input \n                  label=\"Image\"\n                  secureText={false}\n                  type=\"file\"\n                  // value={image}\n                  setValue={(event) => setImage(event.target.files)}\n                  error={imageError}\n                  setError={() => setImageError} />\n                <TextArea\n                placeholder=\"Write about the product you are adding\" \n                label=\"About\"\n                value={about}\n                setValue={(event) => setAbout(event.target.value)}\n                error={aboutError}\n                setError={() => setAboutError} />\n                <div className={styles.actionButtons}>\n                    {isLoading ? (<Activity />) :(\n                    <>\n                      <Button title=\"Edit\" onClick={() => authenticate()} />\n                      <Button title=\"Cancel\" onClick={()=> setIsOpen(!isOpen)} />\n                    </>)}\n                </div>\n            </div>\n            <SummitTech title=\"Eden Beauty\" />\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n        </Modal>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setRefresh}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(EditProduct);\n\nconst customStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#010f24\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    backgroundColor: 'transparent',\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: 0,\n    borderBottom: '1.4px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: '#010f24',\n    '&:hover': {\n       border: isFocused ? 0 : 0,\n       borderBottom: '1.4px',\n       borderBottomStyle: 'solid',\n       borderBottomColor: '#010f24',\n    }\n  })\n};\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Profile/Profile.section.js",["578"],"import React, { useEffect, useState } from 'react';\nimport { IoPencil } from 'react-icons/io5';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Activity, Button, Input, RouteIndicator } from '../../components';\nimport { EditPassword } from '..';\nimport styles from './Profile.module.css';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { setUserName } from '../../redux/Actions/Auth.actions';\nimport extractInitials from '../../utils/extractIni';\n\nconst Profile = (props) => {\n    const {user, password} = props;\n    \n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [location, setLocation] = useState('');\n    const [served, setServed] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const [userNameError, setUserNameError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [referBonus, setReferBonus] = useState(0);\n    const [locationError, setLocationError] = useState(false);\n    const [phoneError, setPhoneError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const authenticate = () => {\n        let hasError = false;\n        setIsLoading(true);\n\n        if(userName.length < 5) {\n            setUserNameError(true);\n            hasError = true;\n        }\n\n        if(phone.length < 9) {\n            setPhoneError(true);\n            hasError = true;\n        }\n\n        if(hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const body = {\n            fullname: name,\n            username: userName,\n            email: email,\n            location: location,\n            phone: phone,\n        }\n\n        fetch(`${BASE_URL}/register/${user.id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n          body: JSON.stringify(body),\n        })\n        .then(res => {\n            const response = res.json();\n            return response;\n        })\n        .then(res => {\n            props.setUserName(userName);\n            setIsLoading(false);\n        })\n        .catch(err => {\n            setIsLoading(false);\n        })\n    }\n\n    useEffect(() => {\n        fetch(`${BASE_URL}/register/${user.id}/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            }\n        })\n        .then(res => {\n            const response = res.json();\n            return response;\n        })\n        .then(res => {\n            setName(res.fullname);\n            setUserName(res.username);\n            setPhone(res.phone);\n            setEmail(res.email);\n            setLocation(res.location);\n            setServed(res.served);\n            setReferBonus(res.refer_bonus)\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n    return (\n        <div>\n            {(user.is_worker || user.is_superuser) && <RouteIndicator route=\"Dashboard\" current=\"Profile\" /> }\n            <div className={'py-8 px-10'}>\n                <div className={'flex items-center flex-col md:flex-row mt-10'}>\n                    <div className={'flex mr-10 items-baseline'}>\n                        {/* <img src={img_2} alt=\"Name\" className={'h-40 w-40 bg-center bg-cover rounded-full shadow-md'} /> */}\n                        <h2 className={'h-40 w-40 flex items-center justify-center rounded-full text-5xl tracking-wider shadow-md'}>{name ? extractInitials(name) : extractInitials(userName)}</h2>\n                        <button className={'cursor-pointer relative outline-none h-10 w-10 bg-primary text-white rounded-full flex items-center justify-center top-9 -ml-11 shadow-md'}><IoPencil className={styles.profileEditIcon} /></button>\n                    </div>\n                    <div className={'mt-5 md:mt-0'}>\n                        <h2 className={'text-xl text-gray-700'}>{name  || \"'Empty'\"} | {userName}</h2>\n                        <h4 className={'text-base tracking-wide'}>{location || \"'Null'\"}</h4>\n                        <h4 className={'text-base tracking-wide'}>Served: {served || '0'} {(user.is_worker || user.is_superuser) ? 'Clients' : 'Times'}</h4>\n                        {(user.is_worker || user.is_superuser) && <h4 className={'text-base tracking-wide'}>Refer Bonuses: {referBonus || '0'} XAF</h4>}\n                    </div>\n                </div>\n                <div className={`w-full lg:w-4/5 mx-auto my-6 ${styles.border}`}>\n                    <div className={'flex flex-wrap justify-around bg-white rounded py-8 px-4'}>\n                        <div className={'w-full md:w-1/2 px-2'}>\n                            <Input \n                                placeholder={name || \"'empty'\"}\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError} />\n                            <Input \n                                placeholder={userName} \n                                label=\"Username\"\n                                secureText={false}\n                                type=\"text\"\n                                value={userName}\n                                setValue={(event) => setUserName(event.target.value)}\n                                error={userNameError}\n                                setError={() => setUserNameError} />\n                            <Input \n                                placeholder={phone}\n                                label=\"Telephone Number\"\n                                secureText={false}\n                                type=\"text\"\n                                value={phone}\n                                setValue={(event) => setPhone(event.target.value)}\n                                error={phoneError}\n                                setError={() => setPhoneError} />\n                        </div>\n                        <div className={'w-full md:w-1/2 px-2'}>\n                            <Input \n                                placeholder={email}\n                                label=\"Email\"\n                                secureText={false}\n                                type=\"text\"\n                                value={email}\n                                setValue={(event) => setEmail(event.target.value)}\n                                error={emailError}\n                                setError={() => setEmailError} />\n                            <Input \n                                placeholder={location || \"'N/a'\"} \n                                label=\"Location\"\n                                secureText={false}\n                                type=\"text\"\n                                value={location}\n                                setValue={(event) => setLocation(event.target.value)}\n                                error={locationError}\n                                setError={() => setLocationError} />\n                            {/* <Input \n                                placeholder={phone}\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={phone}\n                                setValue={(event) => setPhone(event.target.value)}\n                                error={phoneError}\n                                setError={() => setPhoneError} /> */}\n                        </div>\n                        <div className={'w-72 mx-auto flex justify-around mt-7'}>\n                            {isLoading ? \n                            (<div className={'m-4'}>\n                                <Activity size={1.2} />\n                            </div>) : \n                            (<>\n                                <Button title=\"Save Changes\" onClick={() => authenticate()} />\n                                <Button title=\"Edit Password\" onClick={() => setIsOpen(true)} />\n                            </>)\n                        }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <EditPassword isOpen={isOpen} setIsOpen={setIsOpen} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setUserName}, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/EditPassword/EditPassword.section.js",["579","580","581","582","583","584"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, Input, Notification, Notify, SummitTech } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './EditPassword.module.css';\nimport {setPassword} from '../../redux/Actions/Auth.actions';\n\nconst EditPassword = (props) => {\n    const {isOpen, setIsOpen, user, password} = props;\n    const [oldPw, setOldPw] = useState('');\n    const [newPw, setNewPw] = useState('');\n    const [conPw, setConPw] = useState('');\n    const [oldPwError, setOldPwError] = useState(false);\n    const [newPwError, setNewPwError] = useState(false);\n    const [conPwError, setConPwError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [msg, setMsg] = useState({});\n\n    const authenticate = () => {\n      let hasError;\n      setIsLoading(true);\n\n        if(oldPw.length < 6) {\n            setOldPwError(true);\n            hasError = true;\n        }\n\n        if(newPw.length < 6 || conPw.length < 6 || conPw !== newPw) {\n            setNewPwError(true);\n            setConPwError(true);\n            hasError = true;\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const body = {\n          old_password: oldPw,\n          new_password: newPw,\n        };\n\n        fetch(`${BASE_URL}/change-password/`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n          body: JSON.stringify(body),\n        })\n        .then(res => {\n          const response = res.json();\n          return response;\n        })\n        .then(res => {\n          setIsLoading(false);\n          setNotify(true);\n          props.setPassword(newPw);\n          setMsg({\n            title: 'Successful',\n            message: res.message\n          })\n        })\n        .then(res => {\n          setTimeout(() => {\n            setIsOpen(false);\n          }, 3000);\n        })\n        .catch(err => {\n          setIsLoading(false);\n          setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n          setNotify(true);\n        })\n    }\n\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <SummitTech title=\"Edit Password\" />\n            <div className={styles.formContainer}>\n              <Input \n                  placeholder=\"*********\" \n                  label=\"Old Password\"\n                  secureText={true}\n                  type=\"text\"\n                  value={oldPw}\n                  setValue={(event) => setOldPw(event.target.value)}\n                  error={oldPwError}\n                  setError={() => setOldPwError} />\n                <Input \n                  placeholder=\"*********\" \n                  label=\"New Password\"\n                  secureText={true}\n                  type=\"text\"\n                  value={newPw}\n                  setValue={(event) => setNewPw(event.target.value)}\n                  error={newPwError}\n                  setError={() => setNewPwError} />\n                <Input \n                  placeholder=\"*********\" \n                  label=\"Confirm New Password\"\n                  secureText={true}\n                  type=\"text\"\n                  value={conPw}\n                  setValue={(event) => setConPw(event.target.value)}\n                  error={conPwError}\n                  setError={() => setConPwError} />\n                  <div className={styles.actionButtons}>\n                  {isLoading ? (<Activity />) : (\n                    <>\n                      <Button title=\"Edit\" onClick={() => authenticate()} />\n                      <Button title=\"Cancel\" onClick={()=> setIsOpen(!isOpen)} />\n                    </>  \n                  )}\n                </div>\n            </div>\n            <SummitTech title=\"Eden Beauty\" />\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n        </Modal>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    endpoints: auth.endpoints,\n    user: auth.user,\n    password: auth.password,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({setPassword}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPassword);\n\nconst customStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#010f24\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    backgroundColor: 'transparent',\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: 0,\n    borderBottom: '1.4px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: '#010f24',\n    '&:hover': {\n       border: isFocused ? 0 : 0,\n       borderBottom: '1.4px',\n       borderBottomStyle: 'solid',\n       borderBottomColor: '#010f24',\n    }\n  })\n};\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Service/Service.section.js",["585","586","587"],"import React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Search, ItemCard } from '../../components';\nimport styles from './Service.module.css';\nimport search from '../../utils/search';\nimport { setServices } from '../../redux/Actions/Data.actions';\nimport { BASE_URL } from '../../utils/globalVariable';\n\nconst Service = (props) => {\n    const { _services, onClick, loading } = props;\n    const [filter, setFilter] = useState('');\n    const [isLoading, setIsLoading] = useState()\n    const [text, setText] = useState('');\n    const [services, setServices] = useState([]);\n    const [filters] = useState([\n        'Name',\n        'Price',\n        'Discount',\n        'Likes',\n    ])\n    const active = () => {\n        return 1;\n    }\n\n    useEffect(() => {\n        if (_services?.length === 0) {\n            setIsLoading(true);\n            fetchServices();\n        }\n        setServices(_services);\n        return () => {\n            fetchServices()\n        }\n    }, [_services]);\n\n    const fetchServices = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/service/`);\n            const services = await response.json();\n            props.setServices(services);\n            setIsLoading(false);\n            return services;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false)\n        }\n    };\n\n    useEffect(() => {\n        search(text, _services, setServices, filter.toLocaleLowerCase());\n    }, [text, _services, filter])\n\n    return (\n        <div className={'w-full'}>\n            <div className=\"flex justify-between items-center bg-white bg-opacity-30 backdrop-filter backdrop-blur-md sticky -top-4 md:top-14 z-30\">\n                <h2 className={'text-gray-800 text-left text-xl lg:text-2xl'}>{services.length || 0} Service{services.length !== 1 && 's'}</h2>\n                {loading && <i className=\"text-base px-2 py-0.5 rounded animate-pulse bg-green-200 text-green-700 \">Purchasing ...</i>}\n                <Search\n                    placeholder=\"Search\"\n                    purchase={true}\n                    title={'Purchase'}\n                    filters={filters}\n                    filter={filter}\n                    setFilter={setFilter}\n                    text={text}\n                    setText={setText}\n                    onClick={() => onClick()}\n                />\n            </div>\n            <hr className={'my-4 mx-2'} />\n            <div className={'py-10 grid grid-cols-4 gap-7'}>\n                {/* <h1>kskjdklf</h1> */}\n                {services.map((service, index) => <ItemCard item={service} add={true} onClick={() => active()} key={index} />)}\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = ({data}) => {\n    return {\n        _services: data.services,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setServices }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Service);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Referal/Referal.section.js",["588","589","590"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './Referal.module.css';\nimport { Activity2, ClientCard } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { connect } from 'react-redux';\n\nconst Referal = (props) => {\n    const {user, password} = props;\n    const [loading, setLoading] = useState(false);\n    const [refered, setRefered] = useState([]);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/register/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n        })\n            .then(response => {\n                const res = response.json();\n                return res;\n            })\n            .then(res => {\n                let _refered = res.filter(data => data.friend === user.id);\n                setRefered(_refered);\n                props.setData(_refered);\n                setLoading(false);\n            })\n            .catch(err => {\n                setLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Authentication',\n                    message: 'Invalid username or password.'\n                })\n            })\n    }, []);\n\n    return (\n        <div className={styles.referedContainer}>\n            {loading ? <Activity2 /> : refered.map((worker, index) => <ClientCard client={worker} />)}\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n    }\n}\n\n\nexport default connect(mapStateToProps)(Referal);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/Finance.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/Checkout.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/Checkout.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/AddTestimonial/AddTestimonial.section.js",["591"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\n\nimport { Activity, Button, Notification, SummitTech, TextArea } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AddTestimonial.module.css';\n\nconst AddTestimonial = (props) => {\n    const {isOpen, setIsOpen, user, password} = props;\n    const [about, setAbout] = useState('');\n    const [aboutError, setAboutError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n\n    const authenticate = () => {\n      let hasError;\n        setIsLoading(true);\n\n        if(about.length < 8) {\n          hasError = true;\n          setAboutError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const body = {\n          client_name: user.fullname || user.username,\n          testimonial: about,\n        };\n\n        fetch(`${BASE_URL}/testimonial/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n          body: JSON.stringify(body),\n        })\n        .then(res => {\n          const response = res.json();\n          return response;\n        })\n        .then(res => {\n          setIsLoading(false);\n          setNotify(true);\n          setMsg({\n            title: 'Thanks for the Review',\n            message: 'We will ensure to get better for you loyalty.'\n          })\n        })\n        .then(res => {\n          setTimeout(() => {\n            setIsOpen(false); \n          }, 3000);\n          setAbout('');\n        })\n        .catch(err => {\n          setIsLoading(false);\n          setNotify(true);\n          setMsg({\n            title: 'Unexpected Error',\n            message: 'An error occured, check you internet connection'\n          })\n        })\n    }\n\n    return (\n        <Modal isOpen={isOpen} className={styles.modalContainer} overlayClassName={styles.overLay} closeTimeoutMS={400}>\n            <SummitTech title=\"Please give a great review\" />\n            <div className={styles.formContainer}>\n            <TextArea\n                placeholder=\"What should we improve on??\" \n                label=\"Testimonial\"\n                value={about}\n                setValue={(event) => setAbout(event.target.value)}\n                error={aboutError}\n                setError={() => setAboutError} />\n                <div className={styles.actionButtons}>\n                  {isLoading ? (<Activity />) : (\n                    <>\n                      <Button title=\"Add\" onClick={() => authenticate()} />\n                      <Button title=\"Cancel\" onClick={()=> setIsOpen(!isOpen)} />\n                    </>  \n                  )}\n                </div>\n            </div>\n            <SummitTech title=\"Eden Beauty\" />\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n        </Modal>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    user: auth.user,\n    password: auth.password,\n  };\n}\n\nexport default connect(mapStateToProps)(AddTestimonial);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/AdminCard/AdminCard.component.js",["592","593"],"import React from 'react';\n\nimport styles from './AdminCard.module.css';\nimport { MiniProgressBar } from '..';\nimport extractInitials from '../../utils/extractIni';\nimport { Hyphenated } from '../../utils/number';\n\nconst AdminCard = (props) => {\n    const {worker} = props;\n    return (\n        <div className={'cursor-pointer h-auto w-60 bg-primary rounded-md flex justify-between items-center py-3 px-2'}>\n            <div className={'flex justify-center flex-col items-center'}>\n                {worker.img ? (\n                     <img src={worker.img} alt=\"Admin Name\" className={'h-16 w-16 rounded-full bg-center bg-cover'} />\n                ) : (\n                    <h3 className={'h-16 w-16 rounded-full text-gray-50 text-2xl tracking-widest border-2 border-gray-200 flex justify-center items-center'}>{worker.fullname ? extractInitials(worker.fullname) : extractInitials(worker.username)}</h3>\n                )}\n               \n            </div>\n            <div className={'flex flex-col ml-3 mr-auto'}>\n                <p className={'text-gray-100 font-semibold mb-1'}>{worker.fullname || worker.username}</p>\n                <p className={'text-xs text-gray-400'}>Contact: {Hyphenated(worker.phone)}</p>\n            </div>\n           {/* <MiniProgressBar progress={worker.friend_name || 0 } /> */}\n        </div>\n    )\n}\n\nexport default AdminCard;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/WorkArea/WorkArea.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Home/Home.section.js",["594","595","596","597","598"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity2, Button, ItemCard, TestimonialCard } from '../../components';\nimport { beauty, eden, logo, service } from '../../res/images';\nimport { setWelcome } from '../../redux/Actions/Welcome.actions';\nimport { setProducts, setServices, setGallery, setTestimonials } from '../../redux/Actions/Data.actions';\nimport styles from './Home.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { IoArrowForward } from 'react-icons/io5';\nimport { BASE_URL } from '../../utils/globalVariable';\n\nconst HomeSection = (props) => {\n    const {welcome, products, services, testimonials} = props;\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if(!welcome) {\n            setTimeout(() => {\n                props.setWelcome();\n            }, 3600);\n        }\n    }, []);\n\n    const active = () => {\n        return 1;\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/product/`)\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                props.setProducts(res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            });\n    }, [])\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/testimonial/`)\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                props.setTestimonials(res)\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            })\n    }, [])\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/service/`)\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                props.setServices(res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            })\n    }, []);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/Gallery/`)\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                props.setGallery(res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            })\n    }, []);\n\n    return (\n        <div className={`flex flex-col ${styles.home}`}>\n            <div className={`py-14 px-7 flex flex-col md:flex-row justify-between items-center ${styles.homeHeader}`}>\n                <div className={`w-full md:w-3/5 lg:w-1/2 md:pr-24 flex flex-col items-center md:items-start`}>\n                    <h1 className={`text-2xl lg:text-4xl text-left text-gray-50`}>Welcome to </h1>\n                    <h1 className={`text-2xl lg:text-4xl text-left text-gray-50`}>Eden-Beauty Complex</h1>\n                    <h2 className={`text-xs lg:text-sm my-2 text-gray-400`}>Place of great service and customer care</h2>\n                    <p className={'text-center md:text-left text-sm lg:text-base text-gray-50 leading-7'}>\n                        At Eden-Beauty Complex we offer only the best of services and products because we \n                        know that trust is only built with consistency in the satisfaction of clients.\n                        We are here because of your trust.\n                    </p>\n                    <NavLink to='/gallery' className={'my-7 flex items-center text-xs lg:text-sm w-20 border-b-2 p-1'}>Explore <IoArrowForward className=\"ml-2 animate-pulse\" /></NavLink>\n                </div>\n                <div className={'w-2/5 lg:w-1/2'}>\n                    <img src={service} alt=\"Something\" className={`md:w-64 lg:h-96 min-w-full bg-cover bg-center`} />\n                </div>\n            </div>\n            <h1 className={`text-gray-800 bg-white text-center text-xl lg:text-2xl pt-7 pb-1`} id=\"services\">Services</h1>\n            <h3 className={`bg-white text-gray-500 text-xs lg:text-sm font-semibold text-center pb-6`}>At Company we offer the best of</h3>\n            <div className={'flex bg-cover bg-fixed bg-center py-10 px-4 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 justify-center'} style={{backgroundImage: \"linear-gradient(to right, #92fe9d79, #00c8ff50), url(\" + eden + \")\"}}>\n                {isLoading ? (<Activity2 />) : services.map((service, index) => ((Math.floor(Number(service.discount)) < 10 && index < 6)&&\n                <ItemCard item={service} onClick={() => active()} key={service.id} />\n                ))}\n            </div>\n            <h1 className={`text-gray-800 bg-white text-center text-xl lg:text-2xl pt-7 pb-1`} id=\"services\">Testimonials</h1>\n            <h3 className={`bg-white text-gray-500 text-xs lg:text-sm font-semibold text-center pb-6`}>What our Clients are saying...</h3>\n            <div className={styles.testiCardCon}>\n                <div className={styles.testiCard}>\n                    {isLoading ? (<Activity2 />) : testimonials.map((testimony, index) => <TestimonialCard testimony={testimony} />)}\n                </div>\n                <Button title=\"READ MORE\" onClick={() => props.history.push({pathname: '/testimonials'})} />\n            </div>\n            <h1 className={`text-gray-800 bg-white text-center text-xl lg:text-2xl pt-7 pb-1`} id=\"products\">Products</h1>\n            <h3 className={`bg-white text-gray-500 text-xs lg:text-sm font-semibold text-center pb-6`}>At Company we offer the best of</h3>\n            <div className={'flex bg-cover bg-fixed bg-center py-10 px-4 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 justify-center'} style={{backgroundImage: \"linear-gradient(to right, #00c8ff50, #92fe9d79), url(\" + beauty + \")\"}}>\n                {isLoading ? (<Activity2 />) : products.map((product, index) => ((Math.floor(Number(product.discount)) < 10 && index < 6)&&\n                <ItemCard item={product} onClick={() => active()} key={product.id} />))}\n            </div>\n            <Modal \n                isOpen={!welcome}\n                className={styles.splash}\n                overlayClassName={styles.splash}\n                closeTimeoutMS={500}\n            >\n                <div className={`w-full ${styles.Welcome}`}>\n                    <img className={`w-28 md:w-36 lg:w-44 bg-center bg-cover mx-auto ${styles.Logo}`} src={logo} alt=\"Logo\" />\n                    <h1 className={`text-lg md:text-2xl lg:text-4xl ${styles.Company}`}>Eden-Beauty Complex</h1>\n                    <h2 className={`text-xs md:text-sm lg:text-lg text-gray-300 leading-9 ${styles.Slogan}`}>With great need comes great service</h2>\n                </div>\n                \n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({welcome, data}) => {\n    return {\n        welcome: welcome.entered,\n        products: data.products,\n        services: data.services,\n        testimonials: data.testimonials,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators ({setWelcome, setProducts, setServices, setGallery, setTestimonials}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSection);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ClientsCard/ClientsCard.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Testimonials/Testimonials.section.js",["599","600"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity2, Search, Testimonial } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { setData, setTestimonials } from '../../redux/Actions/Data.actions';\nimport styles from './Testimonials.module.css';\nimport search from '../../utils/search';\n\nconst Testimonials = (props) => {\n    const { _testimonials } = props;\n\n    const [filter, setFilter] = useState('');\n    const [text, setText] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [testimonials, setTestimonials] = useState([]);\n    const [filters] = useState([\n        'Client Name',\n    ]);\n\n    useEffect(() => {\n        search(text, _testimonials, setTestimonials, 'client_name');\n    }, [text]);\n\n    useEffect(() => {\n        setTestimonials(_testimonials)\n        if (_testimonials?.length === 0) {\n            setIsLoading(true);\n            fetchTestimonials();\n        }\n        return () => {\n            fetchTestimonials()\n        }\n    }, []);\n\n    const fetchTestimonials = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/testimonial/`);\n            const testimonials = await response.json();\n            props.setTestimonials(testimonials);\n            setIsLoading(false);\n            return testimonials;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <section className={`w-full min-h-full bg-white p-4 lg:p-6`}>\n            <h1 className={`text-gray-800 text-left text-xl lg:text-2xl sticky top-3 z-30 pl-2 w-full py-1.5 rounded bg-white bg-opacity-30 backdrop-filter backdrop-blur-md`}>Testimonials</h1>\n            <div className=\"sticky top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" newButton={false} title={'Service'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            <div className={styles.testimonialContainer}>\n                {isLoading ? <Activity2 /> : testimonials.map((testimonial, index) => <Testimonial testimonial={testimonial} key={index} />)}\n            </div>\n        </section>\n    )\n};\n\nconst mapStateToProps = ({data}) => {\n    return {\n        _testimonials: data.testimonials,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setTestimonials}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Testimonials);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/Button.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Search/Search.component.js",["601","602","603","604","605"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/TimeLine/TimeLine.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/MiniProgressBar/MiniProgessBar.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/SectionsCard/SectionCard.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ReferCard/ReferCard.component.js",["606"],"import React from 'react';\nimport { IoBarChart } from 'react-icons/io5';\nimport { img_3 } from '../../res/images';\nimport extractInitials from '../../utils/extractIni';\n\nimport styles from './ReferCard.module.css';\n\nconst ReferCard = (props) => {\n    const {refer} = props;\n    return (\n        <div className={styles.referCard}>\n            <div className={styles.referDetails}>\n                { refer.img ? \n                    <img src={img_3} alt=\"Refer name\" className={styles.referImage}/>\n                    : \n                    <p className={styles.referIni}>{refer.fullname ? extractInitials(refer.fullname) : extractInitials(refer.username)}</p>\n                }\n                <h2 className={styles.referName}>{refer.fullname || refer.username}</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default ReferCard;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Route/RouteIndicator.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/TestimonialCard/TestimonialCard.component.js",["607"],"import React from 'react';\nimport { img_2 } from '../../res/images';\nimport extractInitials from '../../utils/extractIni';\n\nimport styles from './TestimonialCard.module.css';\n\nconst TestimonialCard = (props) => {\n    const {testimony} = props;\n    return (\n        <div className={styles.container}>\n            <div className={styles.userInfo}>\n                <h2 className={styles.userIni}>{extractInitials(testimony.client_name)}</h2>\n                <p className={styles.userName}>{testimony.client_name.substr(0, 10)}</p>\n            </div>\n            <p className={styles.testimony}>\n                {testimony.testimonial.substr(0, 130)}\n            </p>\n        </div>\n    )\n}\n\nexport default TestimonialCard;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ActivityIndicator/ActivityIndicator.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ActivityIndicatorLarger/ActivityIndicator.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notify/Notification.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/TextArea/TextArea.component.js",["608","609"],"import React, { useState } from 'react';\nimport { IoEye, IoEyeOff } from 'react-icons/io5';\n\nimport styles from './TextArea.module.css';\n\nconst TextArea = (props) => {\n    const {placeholder, type, label, secureText, value, setValue, error, setError} = props;\n    const [_secureText, setSecureText] = useState(secureText);\n\n    return (\n        <div className={`flex flex-col mb-4`}>\n            <label for=\"name\" className={`text-base font-semibold text-gray-800`}>{label}</label>\n            <div className={`flex items-center justify-between border-b-2 ${error ? 'border-red-600' : 'border-gray-800'}`}>\n                <textarea \n                    placeholder={secureText ? (_secureText ? placeholder : 'dix134$5ive') : placeholder} \n                    className={`outline-none pt-1 pb-0.5 bg-transparent text-base text-gray-700 w-full`}\n                    onFocus={() => setError(false)}\n                    onChange={setValue}\n                    value={value}\n                    rows={4}\n                />\n\n                {secureText && (\n                <div onClick={() => setSecureText(!_secureText)}>\n                    {_secureText ? \n                    <IoEyeOff className={`text-lg mr-3`} /> \n                    : \n                    <IoEye className={`text-lg mr-3`} />}\n                </div>\n                )}\n                \n                \n            </div>\n        </div>\n    )\n}\n\nexport default TextArea;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/SummitTech/SummitTech.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notification/Notification.component.js",["610"],"import React, {useEffect} from 'react'\n\nconst Notification = (props) => {\n    const {notify, setNotify, msg} = props;\n    useEffect(() => {\n        setTimeout(() => {\n            setNotify(false);\n        }, 8000);        \n    }, [notify]);\n    \n    return (\n        <div onClick={()=> setNotify(false)} className={`fixed top-7 bg-white shadow-xl rounded z-50 p-3 px-4 text-center border-2 border-gray-800 transition-all duration-500 ease-in-out ${notify ? 'right-7' : '-right-96 md:-right-1/2'}`}>\n            <h2 className={`text-base text-gray-700 font-semibold`}>{msg?.title}</h2>\n            <h3 className={`text-sm text-gray-500`}>{msg?.message}</h3>\n        </div>\n    )\n}\n\nexport default Notification;","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/RankRate/RankRate.component.js",["611","612"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Testimonial/Testimonial.component.js",["613"],"import React from 'react'\nimport extractInitials from '../../utils/extractIni';\n\nimport styles from './Testimonial.module.css';\n\nconst Testimonial = (props) => {\n    const {testimonial} = props;\n    return (\n        <div className={styles.container}>\n            <div className={styles.userInfo}>\n                <h2 className={styles.userIni}>{extractInitials(testimonial.client_name)}</h2>\n                <p className={styles.userName}>{testimonial.client_name}</p>\n            </div>\n            <div className={styles.testimonyContainer}>\n                <p className={styles.testimony}>\n                    {testimonial.testimonial.substr(0, 250)}\n                </p>\n                <p className={styles.testimonyDate}>{new Date(testimonial.date).toLocaleDateString()} at {new Date(testimonial.date).toLocaleTimeString('en-US')}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Testimonial;\n\n\n{/* <figure class=\"md:flex bg-gray-100 rounded-xl p-8 md:p-0\">\n  <img class=\"w-32 h-32 md:w-48 md:h-auto md:rounded-none rounded-full mx-auto\" src=\"/sarah-dayan.jpg\" alt=\"\" width=\"384\" height=\"512\">\n  <div class=\"pt-6 md:p-8 text-center md:text-left space-y-4\">\n    <blockquote>\n      <p class=\"text-lg font-semibold\">\n        “Tailwind CSS is the only framework that I've seen scale\n        on large teams. It’s easy to customize, adapts to any design,\n        and the build size is tiny.”\n      </p>\n    </blockquote>\n    <figcaption class=\"font-medium\">\n      <div class=\"text-cyan-600\">\n        Sarah Dayan\n      </div>\n      <div class=\"text-gray-500\">\n        Staff Engineer, Algolia\n      </div>\n    </figcaption>\n  </div>\n</figure> */}\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Input/Input.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/Item.component.js",["614","615","616","617","618"],"import React, { useRef} from 'react';\nimport { IoAdd, IoHeart, IoRemove } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport extractInitials from '../../utils/extractIni';\nimport styles from './ItemCard.module.css';\nimport {setAddToCart, setSubFromCart} from '../../redux/Actions/Purchase.actions';\nimport { Thousand } from '../../utils/number';\n\n\nconst ItemCard = (props) => {\n    const { item, onClick, add, product, total, points } = props;\n    const counter = useRef(0);\n    // let counter = 0;\n\n    const increment = (event, item) => {\n        event.stopPropagation();\n        counter.current++;\n        let price = 0;\n        if (Math.floor(Number(item.discount)) === 0) {\n            price = Math.floor(Number(item.price));\n        } else {\n            price = ((100 - Number(item.discount)) / 100) * Number(item.price)\n        }\n        props.setAddToCart(item.id, item.name, price, counter.current);\n    }\n\n    const decrement = (event, item) => {\n        event.stopPropagation();\n        counter.current--;\n        let price = 0;\n        if (Math.floor(Number(item.discount)) === 0) {\n            price = Math.floor(Number(item.price));\n        } else {\n            price = ((100 - Number(item.discount)) / 100) * Number(item.price)\n        }\n        props.setSubFromCart(item.id, item.name, price, counter.current);\n    }\n\n    return (\n        <div className={'cursor-pointer relative md:w-48 lg:w-80 h-auto rounded-md overflow-hidden shadow-xl bg-white'} onClick={() => onClick()}>\n            {\n                item.img ?\n                    <img src={`${item.img}`} alt={item.name} className={'w-full h-36 lg:h-56 bg-center bg-cover'} /> :\n                    <h3 className={'text-9xl text-green-700 text-center py-2 h-56 flex items-center justify-center'}>{extractInitials(item.name)}</h3>\n            }\n            <div className={`absolute w-full text-sm py-1 flex items-center justify-end text-gray-700 px-2 ${add ? 'bottom-20' : 'bottom-9'}`} style={{backgroundImage: \"linear-gradient(to right, #92fe9de6, #00c9ffcc)\"}}>\n                {/* <h2 className={'flex justify-center items-center'}>\n                    <IoHeart className={'mr-2'} /> 0\n                </h2> */}\n                <div className=\"flex items-center justify-around\">\n                    <h5 className={`text-xs font-bold mr-2 ${item.discount > 0 ? 'text-gray-50 line-through' : 'text-gray-100'}`}>{Thousand(Number(item.price).toFixed(0))} {+item.discount === 0 && 'FCFA'}</h5>\n                    {item.discount > 0 && <h5 className=\"text-xs font-bold text-gray-100\">{Thousand(((100 - item.discount) / 100) * item.price)} FCFA</h5>}\n                </div>\n            </div>\n            {Number(item.discount) !== 0 && <div className={'absolute top-2 left-2 text-xs bg-green-500 p-1 text-white rounded'}>\n                <h2>Discount: {Math.floor(Number(item.discount))}%</h2>\n            </div>}\n            <div className={'flex flex-col pb-2'}>\n                <div className=\"flex justify-between p-2\">\n                    <h2 className={'text-gray-700 text-sm font-bold'}>{item.name}</h2> \n                </div>\n                {add && (\n                    <>\n                        {counter.current > 0 && (\n                            <div className={`flex items-center font-sm transition-all delay-1000 duration-1000 ease-in-out ${counter.current > 0 ? 'justify-around' : 'justify-center' }`}>\n                                <button className={`outline-none cursor-pointer shadow-md flex items-center justify-center border-2 border-gray-700 w-8 h-8 rounded-full transition-all delay-1000 duration-1000 ease-in-out ${counter.current > 0 ? 'm-0' : 'ml-20'}`} onClick={(event) => decrement(event, item)}><IoRemove /></button>\n                                <p>{counter.current}</p>\n                                <button className={`outline-none cursor-pointer shadow-md flex items-center justify-center border-2 border-gray-700 w-8 h-8 rounded-full transition-all delay-1000 duration-1000 ease-in-out ${counter.current > 0 ? 'm-0' : 'mr-20'}`} onClick={(event) => increment(event, item)}><IoAdd /></button>\n                            </div>)}\n                        {counter.current === 0 && (\n                            <button className={`mx-auto text-center outline-none text-sm text-white bg-primary shadow-md p-1.5 md:px-4 rounded-3xl text-white transition-all delay-1000 duration-1000 ease-in-out hover:shadow-2xl ${counter.current === 0 ? 'w-44 opacity-100' : 'w-0 opacity-0'}`} onClick={(event) => increment(event, item)}>Add to purchase</button>\n                        )}\n                    </>\n                )}\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = ({purchase}) => {\n    return {\n        product: purchase.product,\n        total: purchase.total,\n        points: purchase.points,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setAddToCart, setSubFromCart}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemCard);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Dashboard/Dashboard.section.js",["619","620","621","622","623","624","625","626","627","628","629","630","631"],"import React, { useState, useEffect } from 'react';\nimport {IoPeople, IoWalk } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { setWorkers, setClients, setFinances, setCheckouts, setGallery } from '../../redux/Actions/Data.actions';\nimport { MiniProgressBar, ClientCard, RouteIndicator, Activity2 } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { ClientDetail, EditClient, EditWorker, WorkerDetail } from '..';\n\nconst Dashboard = (props) => {\n    const { username, password, _clients, _workers } = props;\n    const [worker, setWorker] = useState(false);\n    const [detail, setDetail] = useState({});\n    const [editClient, setEditClient] = useState(false);\n    const [editWorker, setEditWorker] = useState(false);\n    const [client, setClient] = useState(false);\n    const [stats, setStats] = useState({\n        client: 20,\n        worker: 20,\n    });\n    const [clients, setClients] = useState([]);\n    const [workers, setWorkers] = useState([]);\n    const [msg, setMsg] = useState({});\n    const [notify, setNotify] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Name',\n        'Invited',\n    ])\n\n    useEffect(() => {\n        setClients(_clients);\n        setWorkers(_workers);\n        return () => {\n\n        }\n    }, [])\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/register/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(response => {\n                const res = response.json();\n                return res;\n            })\n            .then(res => {\n                let _clients = res.filter(data => data.is_client);\n                let _workers = res.filter(data => data.is_worker);\n                setStats({\n                    client: _clients.length,\n                    worker: _workers.length,\n                });\n                setWorkers(_workers.sort((a,b) => { return b.served - a.served}));\n                setClients(_clients.sort((a, b) => { return b.served - a.served }));\n                props.setWorkers(_workers.sort((a,b) => { return b.served - a.served}));\n                props.setClients(_clients.sort((a,b) => { return b.served - a.served}));\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Authentication',\n                    message: 'Invalid username or password.'\n                })\n            })\n    }, [_clients, _workers]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/purchase/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                let _res = res.sort(function (a, b) {\n                    return new Date(b.date) - new Date(a.date);\n                });\n                console.log(_res);\n                let obj = {};\n                const data = (finances) => {\n                    finances.map((i) => {\n                        let _date = new Date(i.date).toLocaleDateString()\n                        if (obj[_date] === undefined) {\n                            obj[_date] = [i];\n                        } else {\n                            obj[_date].push(i);\n                        }\n                    });\n                    return obj;\n                }\n                let sortedData = data(_res);\n                console.log(sortedData)\n                props.setFinances(sortedData);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsLoading(false);\n            })\n        \n    }, []);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/Checkout/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                let _res = res.reverse();\n                props.setCheckouts(_res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsLoading(false);\n            })\n        \n    }, []);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/Gallery/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                props.setGallery(res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            })\n    }, []);\n\n    const nothing = () => {\n        return 1;\n    }\n    \n    return (\n        <section className={'styles.dashboardSection'}>\n            <RouteIndicator route=\"Dashboard\" current=\"\" />\n            {/* <Search placeholder=\"Search\" isSearch={isSearch} setIsSearch={setIsSearch} newButton={false} filters={filters} filter={filter} setFilter={setFilter} /> */}\n            <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>Section</h2>\n            <div className={'flex items-start my-1 mt-4 px-8 mb-10'}>\n                <div className={'w-56 h-auto px-1.5 py-4 rounded-md bg-primary flex justify-center items-center flex-col mr-5 shadow'}>\n                    <div className={'flex justify-start w-full items-center text-lg text-gray-300 px-2 mb-1.5'}>\n                        <IoPeople className={'mr-2'} />\n                        <p className={''}>Clients</p>\n                    </div>\n                    <p className=\"text-gray-400 text-base font-semibold mb-2\"> { clients.length } <span className=\"text-xs\">/{300}</span></p>\n                    <MiniProgressBar progress={clients ? (clients.length / 300 * 100) : 0} />\n                </div>\n\n                {/* <div className={styles.sectionCard}>\n                    <div className={styles.sectionInfo}>\n                        <IoWallet className={styles.icon} />\n                        <p className={styles.sectionText}>Finances: {stats[1].current}</p>\n                    </div>\n                    <p>Goal: {stats[1].goal}</p>\n                    <MiniProgressBar progress={100/stats[1].goal * 100} />\n                </div> */}\n\n                <div className={'w-56 h-auto px-1.5 py-4 rounded-md bg-primary flex justify-center items-center flex-col mx-1 shadow'}>\n                    <div className={'flex justify-start w-full items-center text-lg text-gray-300 px-2 mb-1.5'}>\n                        <IoWalk className={'mr-2'} />\n                        <p className={''}>Workers: {workers.length || 0}</p>\n                    </div>\n                    <p className=\"text-gray-400 text-base font-semibold mb-2\"> { workers.length } <span className=\"text-xs\">/{10}</span></p>\n                    <MiniProgressBar progress={workers ? (workers.length / 10 * 100) : 0} />\n                </div>\n            </div>\n            <div className={''}>\n                <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>Top {(workers.length * 0.2).toFixed(0)} Worker{Number((workers.length * 0.2).toFixed(0)) <= 1 ? '' : 's'}</h2>\n                {/* <h2 className={styles.tempo}>This month</h2> */}\n            </div>\n            <div className={'grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 md:gap-5 lg:gap-6 px-0 md:px-2 lg:px-8 mt-4 md:mt-6 mb-10'}>\n                {isLoading ? (<Activity2 />) : workers.map((worker, index) => ((index < Number((workers.length * 0.2).toFixed(0))) &&\n                    <ClientCard client={worker} setDetail={setDetail} setIsDetail={setWorker} key={worker.id} />\n                ))}\n            </div>\n            <div className={''}>\n                <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>Top {(clients.length * 0.2).toFixed(0)} Client{Number((clients.length * 0.2).toFixed(0)) <= 1 ? '' : 's'}</h2>\n                {/* <h2 className={styles.tempo}>This month</h2> */}\n            </div>\n            <div className={'grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 md:gap-5 lg:gap-6 px-0 md:px-2 lg:px-8 mt-4 md:mt-6'}>\n                {isLoading ? (<Activity2 />) : clients.map((client, index) => ((index < Number((clients.length * 0.2).toFixed(0))) &&\n                    <ClientCard client={client} setDetail={setDetail} setIsDetail={setClient} key={client.id} />\n                ))}\n            </div>\n            <WorkerDetail show={worker} setShow={setWorker} setEdit={setEditWorker} detail={detail} />\n            <ClientDetail show={client} setShow={setClient} setEdit={setEditClient} detail={detail} />\n            <EditClient edit={editClient} setEdit={setEditClient} detail={detail} />\n            <EditWorker edit={editWorker} setEdit={setEditWorker} detail={detail} />\n        </section>\n    )\n};\n\nconst mapStateToProps = ({ auth, data }) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        _clients: data.clients,\n        _workers: data.workers,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setClients, setWorkers, setFinances, setCheckouts, setGallery }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Login/Login.section.js",["632","633"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport {\n    Input, \n    LoginButton, \n    Notification, \n    SummitTech \n} from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport {setUser} from '../../redux/Actions/Auth.actions';\nimport styles from './Login.module.css';\n\nconst Login = (props) => {\n    const [userName, setUserName] = useState('');\n    const [userNameError, setUserNameError] = useState(false);\n    const [password, setPassword] = useState('');\n    const [passwordError, setPasswordError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [users, setUsers] = useState([]);\n    const [redirect, setRedirect] = useState({\n        path: \"/\",\n        active: false,\n    })\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (userName.length < 3) {\n            setUserNameError(true);\n            hasError = true;\n            setIsLoading(false);\n            setNotify(true);\n        }\n        if (password.length < 6) {\n            setPasswordError(true);\n            hasError = true;\n            setIsLoading(false);\n            setNotify(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            setNotify(true);\n            setMsg({\n                title: 'Wrong Credentials',\n                message: 'Please check your input fields.'\n            });\n            return false;\n        }\n\n        const body = {\n            username: userName,\n            password: password,\n        };\n        \n        let url = `${BASE_URL}`;\n\n        const fetchUsers = async () => {\n            try {\n                const response = await fetch(`${url}/register/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Basic ' + Buffer.from(userName + ':' + password).toString('base64'),\n                    },\n                });\n                const registered = await response.json();\n                setUsers(registered);\n                return registered;\n            }\n            catch (err) {\n                console.log(err, 'Received error');\n            }\n            \n        }\n\n        fetch(url + '/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(userName + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                if (res.detail) {\n                    setIsLoading(false);\n                    setNotify(true);\n                    setMsg({\n                        title: 'Unexpected Error',\n                        message: res.detail\n                    });\n                }\n\n                if (res.register) {\n                    const list = fetchUsers();\n                    list\n                        .then(users => {\n                            return [res, users];\n                        })\n                        .then(res => {\n                            let _list = res[1].filter(data => userName === data.username);\n                            setIsLoading(false);\n                            props.setUser(_list[0], userName, password);\n                            if (_list[0].is_client) {\n                                // props.history.push({ pathname: '/client' });\n                                setRedirect({\n                                    path: '/client',\n                                    active: true,\n                                })\n                            } else {\n                                // props.history.push({ pathname: '/dashboard', exact: true });\n                                setRedirect({\n                                    path: '/dashboard',\n                                    active: true,\n                                })\n                            }\n                        })\n                }\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'Please check your network connection.'\n                })\n            })\n    }\n\n    return (\n        <>\n            {redirect.active ? <Redirect to={redirect.path} exact /> :\n                <div className={`w-full flex flex-col items-center justify-center p-8 md:py-6 lg:p-8 h-screen md:min-h-full ${styles.loginContainer}`}>\n                <SummitTech title=\"WELCOME\" />\n                <div className={`rounded-lg shadow-lg ${styles.border}`}>\n                    <div className={`w-72 md:w-120 lg:w-128 m-2 py-10 px-7 md:p-10 bg-white flex rounded-lg flex-col`}>\n                        <h2 className={`text-center text-lg md:text-2xl text-gray-800 mb-8`}>Eden-Beauty Complex</h2>\n                        <Input\n                            label=\"Username\"\n                            placeholder=\"Eden-Beauty\"\n                            secureText={false}\n                            type=\"text\"\n                            value={userName}\n                            setValue={(event) => setUserName(event.target.value)}\n                            error={userNameError}\n                            setError={() => setUserNameError(false)} />\n                        <Input\n                            label=\"Password\"\n                            placeholder=\"******\"\n                            secureText={true}\n                            type=\"text\"\n                            value={password}\n                            setValue={(event) => setPassword(event.target.value)}\n                            error={passwordError}\n                            setError={() => setPasswordError(false)} />\n                        <LoginButton title=\"Login\" loading={isLoading} onClick={() => authenticate()} />\n                    </div>\n                </div>\n                <SummitTech title=\"Eden Beauty\" />\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>}\n        </>\n    )\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setUser}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/extractIni.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/Client.list.js",["634","635","636"],"/* eslint-disable no-loop-func */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { \n    Activity2, \n    ClientCard, \n    Notification, \n    RouteIndicator, \n    Search \n} from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport AddClient from './AddClient.section';\nimport ClientDetail from './ClientDetail.section';\nimport search from '../../../utils/search';\nimport {setData, setClients} from '../../../redux/Actions/Data.actions';\nimport {setPoint, clearPoint} from '../../../redux/Actions/Points.actions';\nimport EditClient from './EditClient.section';\n\n\nconst ClientList = (props) => {\n    const { \n        username, \n        password,\n        _clients,\n    } = props;\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [text, setText] = useState('');\n    const [notify, setNotify] = useState(false);\n    const [filter, setFilter] = useState('');\n    const [detail, setDetail] = useState({})\n    // const [purchases, setPurchases] = useState([])\n    const [filters] = useState([\n        'Username',\n        'Fullname'\n    ]);\n    const [clients, setClients] = useState([]);\n\n    const fetchPurchases = async () => {\n            try {\n                const response = await fetch(`${BASE_URL}/purchase/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                    },\n                });\n                const registered = await response.json();\n                // setPurchases(registered);\n                return registered;\n            }\n            catch(err) {\n                console.log(err, 'Received error');\n            }\n            \n        }\n\n    useEffect(() => {\n        search(text, _clients, setClients, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setClients(_clients)\n        if (_clients?.length === 0) {\n            setLoading(true);\n            fetchClients();\n        }\n        return () => {\n            fetchClients()\n        }\n    }, [_clients]);\n\n    const fetchClients = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/register/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                },\n            });\n            let clients = await response.json();\n            clients = clients.filter(data => data.is_client)\n            props.setClients(clients.sort((a, b) => { return b.served - a.served }));\n            setLoading(false);\n            return clients;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setLoading(false);\n            setNotify(true);\n            setMsg({\n                title: 'Authentication',\n                message: 'Invalid username or password.'\n            })\n        }\n    };\n\n\n\n    return (\n        <div className={'w-full mid-h-full'}>\n            <RouteIndicator route=\"Dashboard\" current=\"Clients\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n            <Search \n                placeholder=\"Search\" \n                isOpen={isOpenAdd} \n                setIsOpen={setIsOpenAdd} \n                newButton={true} \n                title={\"Client\"} \n                filters={filters} \n                filter={filter} \n                setFilter={setFilter}\n                text={text}\n                setText={setText} />\n            </div>\n            <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>{clients.length} Client{clients.length !== 1 &&'s'}</h2>\n            <div className={'grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 lg:gap-7 px-0 md:px-2 lg:px-8 mt-4 md:mt-6'}>\n                {loading ? (<div style={{margin: 'auto'}}><Activity2 /></div>) : (clients.map((client) => \n                    <ClientCard client={client} setDetail={setDetail} setIsDetail={setShow} key={client.id} />\n                ))}\n            </div>\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            <AddClient add={isOpenAdd} setAdd={setIsOpenAdd} />\n            <EditClient edit={edit} setEdit={setEdit} detail={detail} />\n            <ClientDetail show={show} setShow={setShow} setEdit={setEdit} detail={detail} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data, refresh}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        _clients: data.clients,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setClients, setPoint, clearPoint}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/search.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Auth.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Refresh.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Data.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/CheckoutDetail/Checkout.detail.js",["637","638"],"import React, { useState } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Button, MiniProgressBar, Notification } from \"../../../components\";\nimport { img_1, img_3 } from \"../../../res/images\";\nimport extractInitials from \"../../../utils/extractIni\";\nimport { BASE_URL } from \"../../../utils/globalVariable\";\nimport {setRefresh} from '../../../redux/Actions/Refresh.actions';\nimport styles from './CheckoutDetail.module.css';\n\nconst CheckoutDetail = (props) => {\n    const {isDetail, setIsDetail, detail, user, password} = props;\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const updateMyBonus = (id, myBonus) => {\n        const body = {\n            my_bonus: myBonus,\n        }\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n        .then(res => {\n            const response = res.json();\n            return response;\n        })\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n            setNotify(true);\n            setMsg({\n                title: 'Unexpected Error',\n                message:'Please try again later.'\n            })\n        })\n    }\n\n    const updateReferBonus = (id, Bonus) => {\n        const body = {\n            refer_bonus: Bonus,\n        }\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n        .then(res => {\n            const response = res.json();\n            return response;\n        })\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n            setNotify(true);\n            setMsg({\n                title: 'Unexpected Error',\n                message:'Please try again later.'\n            })\n        })\n    }\n\n    const Process = (detail) => {\n        const body = {\n            status: 'Processed'\n        }\n        fetch(`${BASE_URL}/Checkout/${detail.id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n        .then(res => {\n            console.log(res);\n            const response = res.json();\n            return Promise.all([response]);\n        })\n        .then(res => {\n            if(res[0].status === \"Processed\") {\n                if (detail.bonus === 'My Bonuses') {\n                    updateMyBonus(detail.client_id, 0);\n                    props.setRefresh(true);\n                    setIsDetail(false);\n                } else {\n                    updateReferBonus(detail.client_id, 0);\n                }\n            }\n            setNotify(true);\n            setMsg({\n                title: 'Success',\n                message:'Checkout processed successfully'\n            }) \n        })\n        .catch(err => {\n            console.log(err);\n            setNotify(true);\n            setMsg({\n                title: 'Unexpected Error',\n                message:'Please try again later.'\n            })\n        })\n    }\n\n    return (\n        <div className={isDetail ? styles.detailContainer : styles.detailHide}>\n            <div className={styles.imgsContainer}>\n                {detail.clientImage ? \n                    (<img src={img_1} alt={\"Client Name\"} className={styles.clientImage} />) :\n                    (<h2 className={styles.clientIni}>{extractInitials(detail.client)}</h2>)\n                }\n                {detail.workerImage ? \n                    (<img src={img_3} alt={\"Woker Name\"} className={styles.workerImage} />) : \n                    (<h2 className={styles.workerIni}>{extractInitials(detail.worker)}</h2>)\n                }\n            </div>\n            <div className={styles.infoContainer}>\n                <h3 className={styles.clientName}>Client's Name: {detail.client}</h3>\n                <h2 className={styles.clientName}>Bonus : {detail.bonus}</h2>\n                <h3 className={styles.workerName}>Sent: {new Date(detail.date).toLocaleDateString()} at {new Date(detail.date).toLocaleTimeString('en-US')}</h3>\n                {/* <div className={styles.progress}>\n                    <MiniProgressBar progress={(detail.total/1000)/10 || 0} />\n                    <p>{((detail.total/1000)).toFixed(2)} / 1000 points</p>\n                </div> */}\n                <h2 className={styles.subTitle}>Total = {detail.amount} XAF</h2>\n            </div>\n            <div>\n                {detail.status === 'Pending' && <Button title={\"Process\"} onClick={() => Process(detail)} />}\n                <Button title={\"Close\"} onClick={() => setIsDetail(false)} />\n            </div>\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        password: auth.password,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setRefresh}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutDetail);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientCheckout/CheckoutList/Checkout.list.js",["639","640","641","642"],"import React, {useEffect, useState} from \"react\";\nimport { NewPurchase } from \"../..\";\n\nimport { Activity2, RouteIndicator, Search } from \"../../../components\";\nimport styles from './CheckoutList.module.css';\nimport search from '../../../utils/search';\nimport { BASE_URL } from \"../../../utils/globalVariable\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setData } from '../../../redux/Actions/Data.actions';\n\nconst CheckoutList = (props) => {\n    const {\n        isDetail, \n        setIsDetail, \n        user, \n        password, \n        setDetail,\n        data,\n        refresh,\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const [text, setText] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [checkouts, setCheckouts] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Client',\n        'Status',\n        'Bonus',\n    ]);\n\n    useEffect(() => {\n        search(text, data, setCheckouts, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/Checkout/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                let  _res = res.reverse().filter(data => data.client_id === user.id);\n                props.setData(_res);\n                setCheckouts(_res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsLoading(false);\n            })\n        \n    }, [isOpen, refresh]);\n\n    const showDetail = (purchase) => {\n        setIsDetail(!isDetail);\n        setDetail(purchase);\n    }\n\n    return (\n        <div className={isDetail ? styles.listContainerDetail : styles.listContainer}>\n            <Search \n                placeholder=\"Search\" \n                isOpen={isOpen} \n                setIsOpen={setIsOpen} \n                newButton={false} \n                filters={filters} \n                filter={filter} \n                setFilter={setFilter}\n                text={text}\n                setText={setText} />\n            {/* <h2 className={styles.durationTitle}>Today</h2> */}\n            <div className={styles.tableContainer}>\n                <table className={styles.table}>\n                    <thead className={styles.tableHead}>\n                        <td className={styles.tableHeadData}>Client Name</td>\n                        <td className={styles.tableHeadData}>Time</td>\n                        <td className={styles.tableHeadData}>Status</td>\n                        <td className={styles.tableHeadData}>Bonus</td>\n                        <td className={styles.tableHeadData}>Total</td>\n                        <td className={styles.tableHeadData}>Details</td>\n                    </thead>\n                    {isLoading ? (<td colSpan={5} style={{margin: 'auto', paddingTop: '10px'}}><Activity2 /></td>) : checkouts.map((checkout, index) => \n                        (<tr className={styles.tableRow}>\n                            <td className={styles.tableData}>{checkout.client}</td>\n                            <td className={styles.tableData}>{new Date(checkout.date).toLocaleTimeString('en-US')}</td>\n                            <td className={styles.tableData}>{checkout.status}</td>\n                            <td className={styles.tableData}>{checkout.bonus}</td>\n                            <td className={styles.tableData}>{checkout.amount}</td>\n                            <td className={styles.tableData}><button className={styles.tableButton} onClick={() => showDetail(checkout)}>Details</button></td>\n                        </tr>)\n                    )\n                    }\n                    \n                </table>\n            </div>\n            {/* <NewPurchase isOpen={isOpen} setIsOpen={setIsOpen} /> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data, refresh}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n        data: data.data,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Purchase.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/CheckoutDetail/Checkout.detail.js",["643","644"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/FinanceList/Finance.list.js",["645","646"],"import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { NewPurchase } from \"../..\";\nimport { Activity2, Search } from \"../../../components\";\nimport styles from './FinanceList.module.css';\nimport search from '../../../utils/search';\nimport { setData } from '../../../redux/Actions/Data.actions';\nimport { BASE_URL } from \"../../../utils/globalVariable\";\n\nconst FinanceList = (props) => {\n    const {\n        isDetail, \n        setIsDetail,\n        setDetail, \n        data, \n        user, \n        password\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const [text, setText] = useState('');\n    const [filter, setFilter] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [purchases, setPurchases] = useState([]);\n    const [filters] = useState([\n        'Client',\n        'Worker',\n    ])\n\n    useEffect(() => {\n        search(text, data, setPurchases, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(`${BASE_URL}/purchase/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            },\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                let  _res = res.reverse().filter(data => data.client_id === user.id);\n                props.setData(_res);\n                setPurchases(_res);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsLoading(false);\n            })\n        \n    }, [isOpen]);\n\n    const showDetail = (purchase) => {\n        setIsDetail(!isDetail);\n        setDetail(purchase);\n    }\n\n    return (\n        <div className={isDetail ? styles.listContainerDetail : styles.listContainer}>\n            <Search \n                placeholder=\"Search\" \n                isOpen={isOpen} \n                setIsOpen={setIsOpen} \n                newButton={false} \n                title=\"Purchase\" \n                filters={filters} \n                filter={filter} \n                setFilter={setFilter}\n                text={text}\n                setText={setText} />\n            {/* <h2 className={styles.durationTitle}>Today</h2> */}\n            <div className={styles.tableContainer}>\n                <table className={styles.table}>\n                    <thead className={styles.tableHead}>\n                        <td className={styles.tableHeadData}>Client Name</td>\n                        <td className={styles.tableHeadData}>Time</td>\n                        <td className={styles.tableHeadData}>Worker</td>\n                        <td className={styles.tableHeadData}>Total</td>\n                        <td className={styles.tableHeadData}>Details</td>\n                    </thead>\n                    {isLoading ? (<td colSpan={5} style={{margin: 'auto', paddingTop: '10px'}}><Activity2 /></td>) : purchases.map((purchase, index) => \n                        (<tr className={styles.tableRow}>\n                            <td className={styles.tableData}>{purchase.client}</td>\n                            <td className={styles.tableData}>{new Date(purchase.date).toLocaleTimeString('en-US')}</td>\n                            <td className={styles.tableData}>{purchase.worker}</td>\n                            <td className={styles.tableData}>{purchase.total}</td>\n                            <td className={styles.tableData}><button className={styles.tableButton} onClick={() => showDetail(purchase)}>Details</button></td>\n                        </tr>)\n                    )\n                    }\n                    \n                </table>\n            </div>\n            <NewPurchase isOpen={isOpen} setIsOpen={setIsOpen} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n        data: data.data,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinanceList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ClientFinance/FinanceDetail/Finance.detail.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Checkout/CheckoutList/Checkout.list.js",["647","648","649","650","651"],"import React, {useEffect, useState} from \"react\";\nimport { NewPurchase } from \"../..\";\n\nimport { Activity2, RouteIndicator, Search } from \"../../../components\";\nimport styles from './CheckoutList.module.css';\nimport search from '../../../utils/search';\nimport { BASE_URL } from \"../../../utils/globalVariable\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setData, setCheckouts } from '../../../redux/Actions/Data.actions';\n\nconst CheckoutList = (props) => {\n    const {\n        isDetail, \n        setIsDetail, \n        username, \n        password, \n        setDetail,\n        _checkouts,\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const [text, setText] = useState('');\n    const [notify, setNotify] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [checkouts, setCheckouts] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Client',\n        'Status',\n        'Bonus',\n    ]);\n\n    useEffect(() => {\n        search(text, _checkouts, setCheckouts, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setCheckouts(_checkouts)\n        if (_checkouts?.length === 0) {\n            setIsLoading(true);\n            fetchCheckouts();\n        }\n        return () => {\n            fetchCheckouts()\n        }\n    }, [_checkouts]);\n\n    const fetchCheckouts = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/Checkout/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                },\n            });\n            let checkouts = await response.json();\n            checkouts = checkouts.filter(data => data.is_client)\n            props.setCheckouts(checkouts.sort((a, b) => { return b.served - a.served }));\n            setIsLoading(false);\n            return checkouts;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false);\n            setNotify(true);\n            setMsg({\n                title: 'Authentication',\n                message: 'Invalid username or password.'\n            })\n        }\n    };\n\n    const showDetail = (purchase) => {\n        setIsDetail(!isDetail);\n        setDetail(purchase);\n    }\n\n    return (\n        <div className={isDetail ? styles.listContainerDetail : styles.listContainer}>\n            <RouteIndicator route=\"Dashboard\" current=\"Checkouts\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n            <Search \n                placeholder=\"Search\" \n                isOpen={isOpen} \n                setIsOpen={setIsOpen} \n                newButton={false} \n                filters={filters} \n                filter={filter} \n                setFilter={setFilter}\n                text={text}\n                    setText={setText} />\n                </div>\n            {/* <h2 className={styles.durationTitle}>Today</h2> */}\n            <div className={styles.tableContainer}>\n                <table className={\"min-w-full rounded-xl my-3 overflow-hidden border-collapse block md:table\"}>\n                    <thead className={\"block md:table-header-group\"}>\n                        <tr className=\"md:border-none block md:table-row absolute -top-full md:top-auto -left-full md:left-auto  md:relative\">\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Client Name</td>\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Time</td>\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Status</td>\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Bonus</td>\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Total</td>\n                        <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Actions</td>\n                        </tr>\n                    </thead>\n                    <tbody className=\"block md:table-row-group\">\n                    {isLoading ? (<td colSpan={5} style={{margin: 'auto', paddingTop: '10px'}}><Activity2 /></td>) : checkouts.map((checkout, index) => \n                        (<tr className={\"bg-white py-2 px-3 md:p-3 md:border-none block md:table-row\"}>\n                            <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Client Name</span>{checkout.client}</td>\n                            <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Time</span>{new Date(checkout.date).toLocaleTimeString('en-US')}</td>\n                            <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Status</span>{checkout.status}</td>\n                            <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Bonus</span>{checkout.bonus}</td>\n                            <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Total</span>{checkout.amount}</td>\n                        <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}>\n                            <span class=\"inline-block w-1/3 md:hidden font-bold\">Actions</span>\n                            <button className={`outline-none text-sm text-primary font-semibold rounded tracking-wider cursor-pointer py-1.5 px-2.5 shadow-md`} onClick={() => showDetail(checkout)}>Details</button>\n                        </td>\n                        </tr>)\n                    )\n                    }\n                    </tbody>\n                </table>\n            </div>\n            {/* <NewPurchase isOpen={isOpen} setIsOpen={setIsOpen} /> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data, refresh}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        _checkouts: data.checkouts,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setCheckouts}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Welcome.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/ProductList/ProductList.js",["652","653","654","655"],"import React, { useEffect, useRef, useState } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { Search, ItemCard, Activity2 } from '../../../components';\nimport search from '../../../utils/search';\nimport { setData } from '../../../redux/Actions/Data.actions';\nimport { setProducts } from '../../../redux/Actions/Data.actions';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { connect } from 'react-redux';\n\nconst ProductList = (props) => {\n    const {\n        isDetail, \n        setIsDetail, \n        setDetail,\n        _products\n    } = props;\n\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [text, setText] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [products, setProducts] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Name',\n        'Price',\n        'Discount',\n    ])\n\n    const showDetails = (item) => {\n        setIsDetail(true);\n        setDetail(item)\n    }\n\n    useEffect(() => {\n        search(text, _products, setProducts, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setProducts(_products)\n        if (_products?.length === 0) {\n            setIsLoading(true);\n            fetchProducts()\n        }\n        return () => {\n            fetchProducts()\n        }\n    }, [_products]);\n\n    const fetchProducts = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/product/`);\n            const products = await response.json();\n            props.setProducts(products);\n            setIsLoading(false)\n            return products;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false)\n        }\n    };\n\n    return (\n        <div className={`w-full min-h-full relative`}>\n            <h1 className={`text-gray-800 text-left text-xl lg:text-2xl sticky top-3 z-30 pl-2 w-full py-1.5 rounded bg-white bg-opacity-30 backdrop-filter backdrop-blur-md`}>Products</h1>\n            <div className=\"sticky top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" isOpen={isOpenAdd} setIsOpen={setIsOpenAdd} newButton={false} title={'Product'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            { text.length <= 0 &&   <>\n                    <h2 className={`text-gray-600 text-left md:text-center text-lg md:text-xl lg:text-xl pb-1 font-semibold`}>Top 6 Products</h2>\n                    <hr className={`w-4/5 mx-auto`} />\n                    <div className={`py-6 mb-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                        {isLoading ? (<Activity2 />) : products.map((product, index) => ((Math.floor(Number(product.discount)) < 10 && index < 6)&&\n                        <ItemCard item={product} onClick={() => showDetails(product)} key={product.id} />))}\n                    </div>\n                </>\n            }\n            <hr className={`w-4/5 mx-auto mt-2`} />\n                <h2 className={`py-4 text-gray-600 text-left md:text-center text-lg md:text-xl lg:text-xl font-semibold`}>{products.length} Product{products.length !== 1 && 's'}</h2>\n            <hr className={`w-4/5 mx-auto mb-2`} />\n            <div className={`py-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                {isLoading ? (<Activity2 />) : products.map((product, index) => <ItemCard item={product} onClick={() => showDetails(product)} key={product.id} />)}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({data}) => {\n    return {\n        _products: data.products,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setProducts}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ProductSection/ProductDetail/ProductDetail.js",["656"],"import React from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { Button } from '../../../components';\nimport extractInitials from '../../../utils/extractIni';\nimport { IMG_URL } from '../../../utils/imageVariable';\n\nimport styles from './ProductDetail.module.css';\n\nconst ProductDetail = (props) => {\n    const {isDetail, setIsDetail, detail} = props;\n\n    return (\n         <div className={isDetail ? styles.detailContainer : styles.detailHide}>\n            <div className={styles.imgsContainer}>\n               {\n                    detail.img ?\n                    <img src={`${IMG_URL}${detail.img}`} alt=\"Name\" className={styles.clientImage} /> :\n                    <h3 className={styles.productIni}>{extractInitials(detail.name)}</h3>\n                }\n            </div>\n            <div className={styles.infoContainer}>\n                <h3 className={styles.clientName}>Service Name: {detail.name} </h3>\n                <h2 className={styles.subTitle}>Details</h2>\n                <ol className={styles.list}>\n                    <li>Likes: 34</li>\n                    <li>Discount: {Math.floor(Number(detail.discount))}%</li>\n                    <li>Original Price: {Math.floor(Number(detail.price))} XAF</li>\n                    {Number(detail.discount) !== 0 && <li>Discount Price: {((100 - Number(detail.discount))/100) * Number(detail.price)} XAF</li>}\n                </ol>\n                <h2 className={styles.subTitle}>About</h2>\n                <p className={styles.list}>{detail.description}</p>\n                <h2 className={styles.price}>Price = {Number(detail.discount) ? ((100 - Number(detail.discount))/100) * Number(detail.price) :  Number(detail.price) } XAF</h2>\n            </div>\n            <Button title={\"Close\"} onClick={() => setIsDetail(false)} />\n        </div>\n    )\n}\n\nexport default ProductDetail;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/ServiceList/ServiceList.js",["657","658","659"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { \n    Activity2, \n    ItemCard, \n    Search \n} from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport search from '../../../utils/search';\nimport { setServices } from '../../../redux/Actions/Data.actions';\nimport {setData} from '../../../redux/Actions/Data.actions';\n\nconst ServiceList = (props) => {\n    const {\n        isDetail,\n        setIsDetail,\n        setDetail,\n        _services\n    } = props;\n\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [services, setServices] = useState([]);\n    const [text, setText] = useState('');\n    const [filters] = useState([\n        'Name',\n        'Price',\n        'Discount',\n        'Likes'\n    ])\n    const [filter, setFilter] = useState(filters[0]);\n\n    const showDetails = (service) => {\n        setIsDetail(true);\n        setDetail(service);\n    }\n\n    useEffect(() => {\n        search(text, _services, setServices, filter.toLowerCase());\n    }, [text]);\n\n\n    useEffect(() => {\n        setServices(_services)\n        if (_services?.length === 0) {\n            setIsLoading(true);\n            fetchServices();\n        }\n        return () => {\n            fetchServices()\n        }\n    }, [_services]);\n\n    const fetchServices = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/service/`);\n            const services = await response.json();\n            props.setServices(services);\n            setIsLoading(false);\n            return services;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false)\n        }\n    };\n\n    return (\n        <div className={`w-full min-h-full`}>\n            <h1 className={`text-gray-800 text-left text-xl lg:text-2xl sticky top-3 z-30 pl-2 w-full py-1.5 rounded bg-white bg-opacity-30 backdrop-filter backdrop-blur-md`}>Services</h1>\n            <div className=\"sticky top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" isOpen={isOpenAdd} setIsOpen={setIsOpenAdd} newButton={false} title={'Service'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            {text.length <= 0 && <>\n                <h2 className={`text-gray-600 text-left md:text-center text-lg md:text-xl lg:text-xl pb-1 font-semibold`}>Top 6 Services</h2>\n                <hr className={`w-4/5 mx-auto`} />\n                <div className={`py-6 mb-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center flex justify-center`}>\n                    {isLoading ? (<Activity2 />) : services.map((service, index) => ((Math.floor(Number(service.discount)) < 10 && index < 6) &&\n                        <ItemCard item={service} onClick={() => showDetails(service)} key={service.id} />\n                    ))}\n                </div>\n            </>\n            }\n            <hr className={`w-4/5 mx-auto mt-2`} />\n            <h2 className={`py-4 text-gray-600 text-left md:text-center text-lg md:text-xl lg:text-xl pb-1 font-semibold`}>{services.length} Service{services.length !== 1 && 's'}</h2>\n            <hr className={`w-4/5 mx-auto mb-2`} />\n            <div className={`py-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                {isLoading ? (<Activity2 />) : services.map((service, index) => <ItemCard item={service} onClick={() => showDetails(service)} />)}\n            </div>\n        </div>\n    )\n};\n\n\nconst mapStateToProps = ({data}) => {\n    return {\n        _services: data.services\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setServices}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceList);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/ServiceSection/ServiceDetail/ServiceDetail.js",["660"],"import React from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { Button } from '../../../components';\nimport extractInitials from '../../../utils/extractIni';\nimport { IMG_URL } from '../../../utils/imageVariable';\n\nimport styles from './ServiceDetail.module.css';\n\nconst ServiceDetail = (props) => {\n    const {isDetail, setIsDetail, detail} = props;\n    return (\n        <div className={isDetail ? styles.detailContainer : styles.detailHide}>\n            <div className={styles.imgsContainer}>\n                {\n                    detail.img ?\n                    <img src={`${IMG_URL}${detail.img}`} alt=\"Name\" className={styles.clientImage} /> :\n                    <h3 className={styles.serviceIni}>{extractInitials(detail.name)}</h3>\n                }\n            </div>\n            <div className={styles.infoContainer}>\n                <h3 className={styles.clientName}>Service Name: {detail.name} </h3>\n                <h2 className={styles.subTitle}>Details</h2>\n                <ol className={styles.list}>\n                    <li>Likes: 34</li>\n                    <li>Discount: {Math.floor(Number(detail.discount))}%</li>\n                    <li>Original Price: {Math.floor(Number(detail.price))} XAF</li>\n                    {Number(detail.discount) !== 0 && <li>Discount Price: {((100 - Number(detail.discount))/100) * Number(detail.price)} XAF</li>}\n                </ol>\n                <h2 className={styles.subTitle}>About</h2>\n                <p className={styles.list}>\n                    {detail.description}   \n                    <h2 className={styles.price}>Price = {Number(detail.discount) ? ((100 - Number(detail.discount))/100) * Number(detail.price) :  Number(detail.price) } XAF</h2>\n                </p>\n            </div>\n            <Button title={\"Close\"} onClick={() => setIsDetail(false)} />\n        </div>\n    )\n}\n\nexport default ServiceDetail;\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/redux/Actions/Points.actions.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/ProductList.js",["661","662","663"],"import React, { useEffect, useState } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { \n    RouteIndicator, \n    Search, \n    ItemCard, \n    Activity2 \n} from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport styles from './ProductList.module.css';\nimport search from '../../../utils/search';\nimport {setData, setProducts} from '../../../redux/Actions/Data.actions';\nimport { connect } from 'react-redux';\nimport AddProduct from './AddProduct.section';\nimport ProductDetail from './ProductDetail.section';\nimport EditProduct from './EditProduct.section';\n\nconst ProductList = (props) => {\n    const {\n        _products,\n    } = props;\n\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [filter, setFilter] = useState('');\n    const [edit, setEdit] = useState(false);\n    const [show, setShow] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [text, setText] = useState('');\n    const [detail, setDetail] = useState({})\n    const [products, setProducts] = useState([]);\n    const [filters] = useState([\n        'Name',\n        'Price',\n        'Discount',\n    ])\n\n    const showDetails = (item) => {\n        setShow(true);\n        setDetail(item)\n    }\n\n    useEffect(() => {\n        search(text, _products, setProducts, filter.toLowerCase());\n    }, [text]);\n\n    useEffect(() => {\n        setProducts(_products)\n        if (_products?.length === 0) {\n            setIsLoading(true);\n            fetchProducts()\n        }\n        return () => {\n            fetchProducts()\n        }\n    }, [_products]);\n\n    const fetchProducts = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/product/`);\n            const products = await response.json();\n            props.setProducts(products);\n            setIsLoading(false)\n            return products;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false)\n        }\n    };\n\n    return (\n        <div className={'w-full'}>\n            <RouteIndicator route=\"Dashboard\" current=\"Products\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" isOpen={isOpenAdd} setIsOpen={setIsOpenAdd} newButton={true} title={'Product'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            {text.length <= 0 && <>\n                <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>Top 6 Products</h2>\n                <hr className={'my-4 mx-2'} />\n                <div className={`py-6 mb-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                    {isLoading ? (<Activity2 />) : products.map((product, index) => ((Math.floor(Number(product.discount)) < 10 && index < 6) &&\n                        <ItemCard item={product} onClick={() => showDetails(product)} key={product.id} />))}\n                </div>\n            </>\n            }\n            <hr className={'my-4 mx-2'} />\n            <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>{products.length || 0} Product{products.length !== 1 && 's'}</h2>\n            <hr className={'my-4 mx-2'} />\n            <div className={`py-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                {isLoading ? (<Activity2 />) : products.map((product, index) => <ItemCard item={product} onClick={() => showDetails(product)} key={product.id} />)}\n            </div>\n            <AddProduct add={isOpenAdd} setAdd={setIsOpenAdd} />\n            <EditProduct edit={edit} setEdit={setEdit} detail={detail} />\n            <ProductDetail setShow={setShow} show={show} setEdit={setEdit} detail={detail}  />\n        </div>\n    )\n};\n\n\nconst mapStateToProps = ({data, refresh}) => {\n    return {\n        _products: data.products,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setProducts}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/Worker.list.js",["664"],"import React, { useEffect, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { \n    Activity2, \n    ClientCard, \n    Notification, \n    RouteIndicator, \n    Search \n} from '../../../components';\nimport AddWorker from './AddWorker.section';\nimport EditWorker from './EditWorker.section';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport search from '../../../utils/search';\nimport WorkerDetail from './WorkerDetail.section';\nimport { setData, setWorkers } from '../../../redux/Actions/Data.actions';\n\nconst WorkerList = (props) => {\n    const {\n        username,\n        password,\n        _workers,\n    } = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [text, setText] = useState('');\n    const [detail, setDetail] = useState({})\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Username',\n        'Fullname',\n    ])\n    const [workers, setWorkers] = useState([]);\n\n    const fetchWorkers = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/register/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                },\n            });\n            let workers = await response.json();\n            workers = workers.filter(data => data.is_worker)\n            props.setWorkers(workers.sort((a, b) => { return b.served - a.served }));\n            setLoading(false);\n            return workers;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setLoading(false);\n            setNotify(true);\n            setMsg({\n                title: 'Authentication',\n                message: 'Invalid username or password.'\n            })\n        }\n    };\n\n    useEffect(() => {\n        search(text, _workers, setWorkers, filter.toLowerCase());\n    }, [text, setText, _workers, filter]);\n\n    useEffect(() => {\n        setWorkers(_workers)\n        if (_workers?.length === 0) {\n            setLoading(true);\n            fetchWorkers();\n        }\n        return () => {\n            fetchWorkers()\n        }\n    }, [_workers]);\n\n\n    return (\n        <div className={'w-full h-full'}>\n            <RouteIndicator route=\"Dashboard\" current=\"Workers\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" isOpen={isOpenAdd} setIsOpen={setIsOpenAdd} newButton={true} title={'Worker'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>{workers.length || 0} Worker{workers.length !== 1 && 's'}</h2>\n            <div className={'grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 lg:gap-7 px-0 md:px-2 lg:px-8 mt-4 md:mt-6'}>\n                {loading ? (<div style={{ margin: 'auto' }}><Activity2 /></div>) : (workers.map((worker) =>\n                    <ClientCard client={worker} detail={detail} setDetail={setDetail} setIsDetail={setShow} key={worker.id} />\n                ))}\n            </div>\n            <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            <AddWorker add={isOpenAdd} setAdd={setIsOpenAdd} />\n            <EditWorker edit={edit} setEdit={setEdit} detail={detail} />\n            <WorkerDetail show={show} setShow={setShow} setEdit={setEdit} detail={detail} />\n        </div>\n    )\n};\n\nconst mapStateToProps = ({auth, data}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        _workers: data.workers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setWorkers}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/ServiceList.js",["665","666"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport AddService from './AddService.section';\nimport { \n    Activity2, \n    ItemCard, \n    RouteIndicator, \n    Search \n} from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport search from '../../../utils/search';\nimport {setData, setServices} from '../../../redux/Actions/Data.actions';\nimport ServiceDetail from './ServiceDetail.section';\nimport EditService from './EditService.setion';\n\nconst ServiceList = (props) => {\n    const {\n        _services,\n    } = props;\n\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [filter, setFilter] = useState('');\n    const [edit, setEdit] = useState(false);\n    const [services, setServices] = useState([]);\n    const [isLoading, setIsLoading] = useState()\n    const [text, setText] = useState('');\n    const [show, setShow] = useState(false);\n    const [detail, setDetail] = useState({})\n    const [filters] = useState([\n        'Name',\n        'Price',\n        'Discount'\n    ])\n\n    const showDetails = (service) => {\n        setShow(true);\n        setDetail(service);\n    }\n\n    useEffect(() => {\n        search(text, _services, setServices, filter.toLowerCase());\n    }, [text]);\n\n\n    useEffect(() => {\n        setServices(_services)\n        if (_services?.length === 0) {\n            setIsLoading(true);\n            fetchServices();\n        }\n        return () => {\n            fetchServices()\n        }\n    }, [_services]);\n\n    const fetchServices = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/service/`);\n            const services = await response.json();\n            props.setServices(services);\n            setIsLoading(false);\n            return services;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false)\n        }\n    };\n\n    return (\n        <div className={'w-full'}>\n            <RouteIndicator route=\"Dashboard\" current=\"Services\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n                <Search placeholder=\"Search\" isOpen={isOpenAdd} setIsOpen={setIsOpenAdd} newButton={true} title={'Service'} filters={filters} filter={filter} setFilter={setFilter} text={text} setText={setText} />\n            </div>\n            {text.length <= 0 && <>\n                <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>Top 6 Services</h2>\n                <hr className={'my-4 mx-2'} />\n                <div className={`py-6 mb-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                    {isLoading ? (<Activity2 />) : services.map((service, index) => ((Math.floor(Number(service.discount)) < 10 && index < 6) &&\n                        <ItemCard item={service} onClick={() => showDetails(service)} key={service.id} />\n                    ))}\n                </div>\n            </>\n            }\n            <hr className={'my-4 mx-2'} />\n            <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>{services.length || 0} Services</h2>\n            <hr className={'my-4 mx-2'} />\n            <div className={`py-6 lg:px-12 grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-7 flex justify-center`}>\n                {isLoading ? (<Activity2 />) : services.map((service, index) => <ItemCard item={service} onClick={() => showDetails(service)} />)}\n            </div>\n            <AddService add={isOpenAdd} setAdd={setIsOpenAdd} />\n            <EditService edit={edit} setEdit={setEdit} detail={detail} />\n            <ServiceDetail show={show} setShow={setShow} setEdit={setEdit} detail={detail} />\n        </div>\n    )\n};\n\nconst mapStateToProps = ({data, refresh}) => {\n    return {\n        _services: data.services,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setServices}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceList);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceDetail/Finance.detail.js",["667"],"import React from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Button } from \"../../../components\";\nimport { img_1, img_3 } from \"../../../res/images\";\nimport extractInitials from \"../../../utils/extractIni\";\nimport { BASE_URL } from \"../../../utils/globalVariable\";\nimport {setRefresh} from '../../../redux/Actions/Refresh.actions';\nimport styles from './FinanceDetail.module.css';\nimport { DateString } from \"../../../utils/date\";\n\nconst FinanceDetail = (props) => {\n    const {isDetail, setIsDetail, detail, user, password} = props;\n\n    const authenticate = (id) => {\n        fetch(`${BASE_URL}/purchase/${id}/`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: 'Basic ' + Buffer.from(user.username + ':' + password).toString('base64'),\n            }\n        })\n        .then(res => {\n            props.setRefresh(true);\n            setIsDetail(false);\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div className={isDetail ? styles.detailContainer : styles.detailHide}>\n            <div className={styles.imgsContainer}>\n                {detail.clientImage ? \n                    (<img src={img_1} alt={\"Client Name\"} className={styles.clientImage} />) :\n                    (<h2 className={styles.clientIni}>{extractInitials(detail.client)}</h2>)\n                }\n                {detail.workerImage ? \n                    (<img src={img_3} alt={\"Woker Name\"} className={styles.workerImage} />) : \n                    (<h2 className={styles.workerIni}>{extractInitials(detail.worker)}</h2>)\n                }\n            </div>\n            <div className={styles.infoContainer}>\n                <h3 className={styles.clientName}>Client's Name: {detail.client}</h3>\n                <h3 className={styles.workerName}>Server's Name: {detail.worker}</h3>\n                <h3 className={styles.workerName}>Served: {DateString(new Date(detail.date).toLocaleDateString())} at {new Date(detail.date).toLocaleTimeString('en-US')}</h3>\n                <h2 className={styles.subTitle}>Items</h2>\n                <ol className={styles.list}>\n                {detail.item !== null && detail.item !== undefined && detail.item.map((item, index) => (\n                        <li>{item.name} &times; {item.count} = {item.price * item.count} XAF</li>\n                        ))}\n                </ol>\n                <h2 className={styles.subTitle}>Total = {detail.total} XAF</h2>\n            </div>\n            <div className={styles.detailActions}>\n                {user.is_superuser && <Button title=\"Delete\" type=\"danger\" onClick={() => authenticate(detail.id)} />}\n                <Button title={\"Close\"} onClick={() => setIsDetail(false)} />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        password: auth.password,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setRefresh}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinanceDetail);\n",["668","669"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/Finance.list.js",["670","671","672","673","674","675","676","677"],"import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport ReactHTMLToExcel from 'react-html-table-to-excel';\n\nimport { NewPurchase } from \"../..\";\nimport { Activity2, RouteIndicator, Search } from \"../../../components\";\nimport styles from './FinanceList.module.css';\nimport { BASE_URL } from \"../../../utils/globalVariable\";\nimport { setObjData, setFinances } from '../../../redux/Actions/Data.actions';\nimport { DateString } from \"../../../utils/date\";\nimport searchObj from \"../../../utils/searchObj\";\nimport FinanceDetail from \"./FinanceDetail.section\";\nimport { Thousand } from \"../../../utils/number\";\nimport AddPurchase from \"./AddPurchase.section\";\n\nconst FinanceList = (props) => {\n    const {\n        username,\n        password,\n        _finances,\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const [show, setShow] = useState(false);\n    const [add, setAdd] = useState(false);\n    const [text, setText] = useState('');\n    const [detail, setDetail] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [purchases, setPurchases] = useState({});\n    const [msg, setMsg] = useState({});\n    const [notify, setNotify] = useState(false);\n    const [filter, setFilter] = useState('');\n    const [filters] = useState([\n        'Month'\n    ]);\n\n\n     useEffect(() => {\n        setPurchases(_finances)\n        if (_finances?.length === 0) {\n            setIsLoading(true);\n            fetchPurchases();\n        }\n        return () => {\n            fetchPurchases()\n        }\n     }, [_finances]);\n\n    const fetchPurchases = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/purchase/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                },\n            });\n            let purchases = await response.json();\n            purchases = purchases.sort(function (a, b) {\n                    return new Date(b.date) - new Date(a.date);\n                });\n            let obj = {};\n            const data = (finances) => {\n                finances.map((i) => {\n                    let _date = new Date(i.date).toLocaleDateString()\n                    if (obj[_date] === undefined) {\n                        obj[_date] = [i];\n                    } else {\n                        obj[_date].push(i);\n                    }\n                });\n                return obj;\n            }\n            purchases = data(purchases);\n            props.setFinances(purchases);\n            setIsLoading(false);\n            return purchases;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false);\n            setNotify(true);\n            setMsg({\n                title: 'Authentication',\n                message: 'Invalid username or password.'\n            })\n        }\n    };\n\n    useEffect(() => {\n        searchObj(text, _finances, setPurchases, filter.toLowerCase());\n    }, [text]);\n\n    const showDetail = (purchase) => {\n        setShow(true);\n        setDetail(purchase);\n    }\n\n    return (\n        <div className={'w-full'}>\n            <RouteIndicator route=\"Dashboard\" current=\"Finances\" />\n            <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n                <Search\n                    placeholder=\"Search\"\n                    isOpen={isOpen}\n                    setIsOpen={setIsOpen}\n                    newButton={true}\n                    title=\"Purchase\"\n                    filters={filters}\n                    filter={filter}\n                    setFilter={setFilter}\n                    text={text}\n                    setText={setText} />\n            </div>\n            {isLoading ? <div className={styles.actCenter}><Activity2 /></div> : Object.values(purchases).map((finances, index) =>\n                <div key={ index }>\n                    <h2 className={'text-gray-500 text-2xl mt-3 mx-2'}>{DateString(Object.keys(purchases)[index])}</h2>\n                    <div className={styles.tableContainer}>\n                        <table className={\"min-w-full rounded-xl my-3 overflow-hidden border-collapse block md:table\"} id={DateString(Object.keys(purchases)[index])}>\n                            <thead className={\"block md:table-header-group\"}>\n                                <tr className=\"md:border-none block md:table-row absolute -top-full md:top-auto -left-full md:left-auto  md:relative\">\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Client Name</td>\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Time</td>\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Worker</td>\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Items</td>\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Total</td>\n                                    <td className={\"bg-primary text-lg p-3.5 text-gray-100 font-semibold md:border md:border-grey-500 text-left block md:table-cell\"}>Actions</td>\n                                </tr>\n                            </thead>\n                            <tbody className=\"block md:table-row-group\">\n                            {isLoading ? (<td colSpan={5} style={{ margin: 'auto', paddingTop: '10px' }}><Activity2 /></td>) : finances.map((finance, index) =>\n                            (<tr key={ index} className={\"bg-white py-2 px-3 md:p-3 md:border-none block md:table-row\"}>\n                                <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Client Name</span>{finance.client}</td>\n                                <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Time</span>{new Date(finance.date).toLocaleTimeString('en-US')}</td>\n                                <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Worker</span>{finance.worker}</td>\n                                <td className={\"py-2 px-3 md:p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Items</span>\n                                    {finance.item.map((item, index) =>\n                                        <b className={'mr-3 font-normal'}>({item.count}) {item.name} </b>\n                                    )}\n                                </td>\n                                <td className={\"p-3 md:border md:border-grey-500 text-left block md:table-cell\"}><span class=\"inline-block w-1/3 md:hidden font-bold\">Total</span>{Thousand(finance?.total)} XAF</td>\n                                <td className={\"p-3 md:border md:border-grey-500 text-left block md:table-cell\"}>\n                                    <span class=\"inline-block w-1/3 md:hidden font-bold\">Actions</span>\n                                    <button className={`outline-none text-sm text-primary font-semibold rounded tracking-wider cursor-pointer py-1.5 px-2.5 shadow-md`} onClick={() => showDetail(finance)}>Details</button>\n                                </td>\n                            </tr>)\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                    <ReactHTMLToExcel\n                        table={DateString(Object.keys(purchases)[index])}\n                        filename={`${DateString(Object.keys(purchases)[index])}finances`}\n                        sheet=\"Sheet\"\n                        className={'outline none p-2 rounded bg-primary shadow-md text-white mb-4'}\n                        buttonText={\"Export Excel\"}\n                    />\n                </div>)}\n            {/* <NewPurchase isOpen={isOpen} setIsOpen={setIsOpen} /> */}\n            <FinanceDetail show={show} setShow={setShow} detail={detail} />\n            <AddPurchase add={isOpen} setAdd={setIsOpen} />\n        </div>\n    )\n};\n\nconst mapStateToProps = ({auth, data, refresh}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        _finances: data.finances,\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setObjData, setFinances}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinanceList);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/res/images/index.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/date.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/searchObj.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/gallery.section.js",["678","679","680"],"import React, { useEffect, useState } from 'react'\nimport { IoGridOutline } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { SqrButton, Card, Search } from '../../components';\nimport { setData, setGallery } from '../../redux/Actions/Data.actions';\nimport search from '../../utils/search';\nimport { BASE_URL } from '../../utils/globalVariable';\n\nconst Gallery = (props) => {\n    const { _gallery } = props;\n\n    const [index, setIndex] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    const [grid, setGrid] = useState(2);\n    const [text, setText] = useState('');\n    const [gallery, setGallery] = useState([]);\n    const [_filter, setFilter] = useState('');\n    const [_filters] = useState([\n        'Event',\n        'Name'\n    ]);\n\n    const filters = [\n        { filter: \"All\", index: 0 },\n        { filter: \"New\", index: 1 },\n        { filter: \"Most Rated\", index: 2 },\n        { filter: \"Old\", index: 3 },\n    ];\n\n    useEffect(() => {\n        search(text, _gallery, setGallery, 'Event');\n    }, [text]);\n\n    const SetFilter = (i) => {\n        setIndex(i);\n        if (filters[i].filter !== 'All') {\n            setGallery(_gallery.filter(p => p.status === filters[i].filter.toLowerCase()))\n        }\n        if (filters[i].filter === 'All') {\n            setGallery(_gallery);\n        }\n    };\n\n    useEffect(() => {\n        setGallery(_gallery)\n        if (_gallery?.length === 0) {\n            setIsLoading(true);\n            fetchGallery();\n        }\n        return () => {\n            fetchGallery()\n        }\n    }, []);\n\n    const fetchGallery = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/Gallery/`);\n            const gallery = await response.json();\n            props.setGallery(gallery);\n            setIsLoading(false);\n            return gallery;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false);\n        }\n    };\n\n\n    return (\n        <>\n            <div className=\"relative bg-white w-full min-h-full p-4 lg:p-6\">\n                <h1 className={`text-gray-800 text-left text-xl lg:text-2xl sticky top-3 z-30 pl-2 w-full py-1.5 rounded bg-white bg-opacity-30 backdrop-filter backdrop-blur-md`}>Gallery</h1>\n                <div className=\"sticky top-3 z-40 pt-1\">\n                    <Search placeholder=\"Search\" newButton={false} title={'Service'} filters={_filters} filter={_filter} setFilter={setFilter} text={text} setText={setText} />\n                </div>\n                <div className=\"flex justify-between px-2 pr-5\">\n                    <div className=\"w-full md:w-3/5 flex justify-around\">\n                        {filters.map((filter, i) =>\n                            <div\n                                key={i}\n                                onClick={() => SetFilter(i)}\n                                className={`\n                                cursor-pointer text-sm text-green-600 border-b-2 border-transparent px-3 transition duration-500 ease-in\n                                ${index === i && 'text-green-700 border-green-700'}\n                                `}\n                            >{filter.filter}</div>\n                        )}\n                    </div>\n                    <div className=\"hidden md:flex text-sm\">\n                        <div onClick={() => setGrid(0)} className={`cursor-pointer md:flex lg:hidden items-center mr-2 transition duration-500 ease-in ${grid === 0 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>2</h3>\n                        </div>\n                        <div onClick={() => setGrid(1)} className={`cursor-pointer hidden lg:flex items-center mr-2 transition duration-500 ease-in ${grid === 1 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>3</h3>\n                        </div>\n                        <div onClick={() => setGrid(2)} className={`cursor-pointer hidden lg:flex items-center transition duration-500 ease-in ${grid === 2 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>4</h3>\n                        </div>\n                    </div>\n                </div>\n                <div className={`transition-all delay-200 duration-500 ease-in-out my-4 w-72 flex items-center justify-center mx-auto grid gap-5 ${grid === 0 ? 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto' : grid === 1 ? 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto lg:grid-cols-3 lg:gap-7 lg:container lg:px-16' : 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto lg:grid-cols-4 lg:gap-7 lg:px-2 lg:w-full' }`}>\n                    {gallery.map((gal, index) => <Card key={index} gallery={gal} grid={grid} />)}\n                </div>\n                <div className=\"text-center my-8\">\n                    <SqrButton title=\"Load More\" invert={true} />\n                </div>\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({data}) => {\n    return {\n        _gallery: data.gallery,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setData, setGallery}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/number.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/Card.component.js",["681"],"import React from 'react'\nimport { SqrButton } from '..';\n\nimport styles from './card.module.css';\n\nconst Card = (props) => {\n    const { gallery, grid, onClick } = props;\n\n\n    return (\n        <>\n            <div\n                onClick={() => onClick()}\n                style={{ backgroundImage: `url(${gallery.img})` }}\n                className={`\n                    transition-all duration-100 ease-in-out \n                    shadow-lg overflow-hidden relative bg-center bg-cover\n                    w-72 h-72  rounded-md\n                    ${grid === 2 && 'md:w-64 md:h-64 lg:w-64 lg:h-64'}\n                    ${grid === 1 && 'md:w-64 md:h-64 lg:w-72 lg:h-72'}\n                    ${grid === 0 && 'md:w-64 md:h-64'}\n                    ${styles.imageContainer}\n                `}>\n                <div className={`p-4 absolute text-gray-50 inset-0 bg-gray-800 bg-opacity-60 lg:bg-opacity-20 transition duration-500 ease-in-out hover:bg-opacity-60 flex flex-col justify-between items-start ${styles.imageOverlay}`}>\n                    <div className={`${styles.marketName} text-gray-100 text-left`}>\n                        <h4 className=\"text-xs\">{gallery.event}</h4>\n                        <h2 className=\"text-sm\">{gallery.name}</h2>\n                    </div>\n                    <div className={`${styles.marketButton}`}>\n                        <h2 className=\"text-sm p-1 bg-green-500 rounded\">Eden Beauty</h2>\n                        {/* <SqrButton title={`Book`} onClick={() => setRedirect(true)} /> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Card;","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/squareButton.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/CardDetail.component.js",[],["682","683"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/globalVariable.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/index.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Button/LoginButton.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/admingallery.section.js",["684","685","686"],"import React, { useEffect, useState } from 'react'\nimport { IoGridOutline } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { SqrButton, Card, Search, RouteIndicator } from '../../components';\nimport { setGallery } from '../../redux/Actions/Data.actions';\nimport search from '../../utils/search';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport AddGallery from './AddGallery.section';\nimport EditGallery from './EditGallery.section';\nimport GalleryDetail from './GalleryDetail.section';\n\nconst AdminGallery = (props) => {\n    const { _gallery, username, password } = props;\n\n    const [index, setIndex] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    const [grid, setGrid] = useState(2);\n    const [text, setText] = useState('');\n    const [gallery, setGallery] = useState([]);\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [show, setShow] = useState(false);\n    const [detail, setDetail] = useState({});\n    const [_filter, setFilters] = useState('');\n    const [_filters] = useState([\n        'Event',\n        'Name'\n    ]);\n\n    const filters = [\n        { filter: \"All\", index: 0 },\n        { filter: \"New\", index: 1 },\n        { filter: \"Most Rated\", index: 2 },\n        { filter: \"Old\", index: 3 },\n    ];\n\n    useEffect(() => {\n        search(text, _gallery, setGallery, _filter.toLowerCase());\n    }, [text]);\n\n    const SetFilter = (i) => {\n        setIndex(i);\n        if (filters[i].filter !== 'All') {\n            setGallery(_gallery.filter(p => p.status === filters[i].filter.toLowerCase()))\n        }\n        if (filters[i].filter === 'All') {\n            setGallery(_gallery);\n        }\n    };\n\n    useEffect(() => {\n        setGallery(_gallery)\n        if (_gallery?.length === 0) {\n            setIsLoading(true);\n            fetchGallery();\n        }\n        return () => {\n            fetchGallery()\n        }\n    }, [_gallery]);\n\n    const fetchGallery = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/Gallery/`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                }\n            });\n            const gallery = await response.json();\n            props.setGallery(gallery);\n            setIsLoading(false);\n            return gallery;\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n            setIsLoading(false);\n        }\n    };\n\n    const showDetails = (service) => {\n        setShow(true);\n        setDetail(service);\n    }\n\n\n    return (\n        <>\n            <div className=\"relative bg-white w-full min-h-full p-4 lg:p-6\">\n                <RouteIndicator route=\"Dashboard\" current=\"Gallery\" />\n                <div className=\"sticky -top-4 md:top-3 z-40 pt-1\">\n                    <Search\n                        placeholder=\"Search\"\n                        isOpen={isOpenAdd}\n                        setIsOpen={setIsOpenAdd}\n                        newButton={true}\n                        title={\"Gallery\"}\n                        filters={_filters}\n                        filter={_filter}\n                        setFilter={setFilters}\n                        text={text}\n                        setText={setText} />\n                </div>\n                <div className=\"flex justify-between px-2 pr-5\">\n                    <div className=\"w-full md:w-3/5 flex justify-around\">\n                        {filters.map((filter, i) =>\n                            <div\n                                key={i}\n                                onClick={() => SetFilter(i)}\n                                className={`\n                                cursor-pointer text-sm text-green-600 border-b-2 border-transparent px-3 transition duration-500 ease-in\n                                ${index === i && 'text-green-700 border-green-700'}\n                                `}\n                            >{filter.filter}</div>\n                        )}\n                    </div>\n                    <div className=\"hidden md:flex text-sm\">\n                        <div onClick={() => setGrid(0)} className={`cursor-pointer md:flex lg:hidden items-center mr-2 transition duration-500 ease-in ${grid === 0 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>2</h3>\n                        </div>\n                        <div onClick={() => setGrid(1)} className={`cursor-pointer hidden lg:flex items-center mr-2 transition duration-500 ease-in ${grid === 1 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>3</h3>\n                        </div>\n                        <div onClick={() => setGrid(2)} className={`cursor-pointer hidden lg:flex items-center transition duration-500 ease-in ${grid === 2 && 'text-green-700'}`}>\n                            <IoGridOutline className=\"mr-1\" />\n                            <h3>4</h3>\n                        </div>\n                    </div>\n                </div>\n                <div className={`transition-all delay-200 duration-500 ease-in-out my-4 w-72 flex items-center justify-center mx-auto grid gap-5 ${grid === 0 ? 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto' : grid === 1 ? 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto lg:grid-cols-3 lg:gap-7 lg:container lg:px-16' : 'md:grid-cols-2 md:gap-7 md:px-3 md:w-9/10 md:mx-auto lg:grid-cols-4 lg:gap-7 lg:px-2 lg:w-full'}`}>\n                    {gallery.map((gal, index) => <Card key={index} gallery={gal} grid={grid} onClick={() => showDetails(gal)} />)}\n                </div>\n                <div className=\"text-center my-8\">\n                    <SqrButton title=\"Load More\" invert={true} />\n                </div>\n            </div>\n            <AddGallery add={isOpenAdd} setAdd={setIsOpenAdd} />\n            <EditGallery edit={edit} setEdit={setEdit} detail={detail} />\n            <GalleryDetail show={show} setShow={setShow} setEdit={setEdit} detail={detail} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({data, auth}) => {\n    return {\n        _gallery: data.gallery,\n        username: auth.username,\n        password: auth.password,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setGallery }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminGallery);\n","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/DisplayCard.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/AddProduct.section.js",["687"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, DisplayCard, Input,  Notification, TextArea } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { addProduct } from '../../../redux/Actions/Data.actions';\n\nconst AddProduct = (props) => {\n    const { add, setAdd, user } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [about, setAbout] = useState('');\n    const [image, setImage] = useState(null)\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        return () => {\n            setPrice('');\n            setName('');\n            setDiscount('');\n            setAbout('');\n            setImage(null);\n        }\n    }, []);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (price.length < 3) {\n            hasError = true;\n            setPriceError(true);\n        }\n\n        if (about.length < 10) {\n            hasError = true;\n            setAboutError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n            formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/product/`, {\n            method: 'POST',\n            body: formData,\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'We have a new product for our clients.'\n                })\n                props.addProduct(res);\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setAdd(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setAdd(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${add ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY-white -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${add ? 'right-0 w-full md:w-9/10 lg:w-3/5 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-8 text-xl font-semibold text-green-700\">\n                        <h2>Add Product</h2>\n                        <button onClick={() => setAdd(!add)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full md:w-1/2 lg:w-3/5 pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Name\"\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError}\n                            />\n                            <Input\n                                placeholder=\"10\"\n                                label=\"Discount\"\n                                secureText={false}\n                                type=\"number\"\n                                value={discount}\n                                setValue={(event) => setDiscount(event.target.value)}\n                                error={discountError}\n                                setError={() => setDiscountError}\n                            />\n                            <Input\n                                placeholder=\"5000\"\n                                label=\"Price\"\n                                secureText={false}\n                                type=\"number\"\n                                value={price}\n                                setValue={(event) => setPrice(event.target.value)}\n                                error={priceError}\n                                setError={() => setPriceError}\n                            />\n                            <Input\n                                placeholder=\"5\"\n                                type=\"file\"\n                                label=\"Image\"\n                                name=\"image\"\n                                // value={image}\n                                setValue={(event) => setImage(event.target.files)}\n                                error={imageError}\n                                setError={() => setImageError}\n                            />\n                            <TextArea\n                                placeholder=\"Write about the product you are adding\"\n                                label=\"About\"\n                                value={about}\n                                setValue={(event) => setAbout(event.target.value)}\n                                error={aboutError}\n                                setError={() => setAboutError}\n                            />\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-2/5 pl-2\">\n                            <div className=\"flex justify-center mt-14\">\n                                <DisplayCard\n                                    name={name}\n                                    price={price}\n                                    discount={discount}\n                                    image={image}\n                                />\n                            </div>\n                            <div className=\"flex justify-center md:justify-end mt-20\">\n                                {isLoading ? <Activity /> : <Button title=\"Add Product\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setAdd(!add)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addProduct }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/AddService.section.js",["688","689"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, DisplayCard, Input,  Notification, TextArea } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { addService } from '../../../redux/Actions/Data.actions';\n\nconst AddService = (props) => {\n    const { add, setAdd, username, password } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [about, setAbout] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [image, setImage] = useState(null);\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        return () => {\n            setPrice('');\n            setName('');\n            setDiscount('');\n            setAbout('');\n            setImage(null);\n        }\n    }, []);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (price.length < 3) {\n            hasError = true;\n            setPriceError(true);\n        }\n\n        if (about.length < 10) {\n            hasError = true;\n            setAboutError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n            formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/service/`, {\n            method: 'POST',\n            body: formData,\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'We have a new service for our clients'\n                });\n                props.addService(res);\n            })\n            .then(err => {\n                setTimeout(() => {\n                    setAdd(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setAdd(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${add ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY-white -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${add ? 'right-0 w-full md:w-9/10 lg:w-3/5 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-8 text-xl font-semibold text-green-700\">\n                        <h2>Add Service</h2>\n                        <button onClick={() => setAdd(!add)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full md:w-1/2 lg:w-3/5 pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Name\"\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError} />\n                            <Input\n                                placeholder=\"10\"\n                                label=\"Discount\"\n                                secureText={false}\n                                type=\"number\"\n                                value={discount}\n                                setValue={(event) => setDiscount(event.target.value)}\n                                error={discountError}\n                                setError={() => setDiscountError} />\n                            <Input\n                                placeholder=\"5000\"\n                                label=\"Price\"\n                                secureText={false}\n                                type=\"number\"\n                                value={price}\n                                setValue={(event) => setPrice(event.target.value)}\n                                error={priceError}\n                                setError={() => setPriceError} />\n                            <Input\n                                label=\"Image\"\n                                secureText={false}\n                                type=\"file\"\n                                // value={image}\n                                setValue={(event) => setImage(event.target.files)}\n                                error={imageError}\n                                setError={() => setImageError} />\n                            <TextArea\n                                placeholder=\"Write about the product you are adding\"\n                                label=\"About\"\n                                value={about}\n                                setValue={(event) => setAbout(event.target.value)}\n                                error={aboutError}\n                                setError={() => setAboutError} />\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-2/5 pl-2\">\n                            <div className=\"flex justify-center mt-14\">\n                                <DisplayCard\n                                    name={name}\n                                    price={price}\n                                    discount={discount}\n                                    image={image}\n                                />\n                            </div>\n                            <div className=\"flex justify-center md:justify-end mt-20\">\n                                {isLoading ? <Activity /> : <Button title=\"Add Service\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setAdd(!add)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addService }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddService);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/AddWorker.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/AddClient.section.js",["690","691"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, Input,  Notification } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { addClient } from '../../../redux/Actions/Data.actions';\n\nconst AddClient = (props) => {\n    const { add, setAdd, username, password } = props;\n\n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    const [tel, setTel] = useState('');\n    const [refer, setRefer] = useState('');\n    const [email, setEmail] = useState('');\n    const [nameError, setNameError] = useState(false);\n    const [userNameError, setUserNameError] = useState(false);\n    const [telError, setTelError] = useState(false);\n    const [referError, setReferError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        return () => {\n            setTel('');\n            setName('');\n            setEmail('');\n            setUserName('');\n            setRefer({});\n        }\n    }, []);\n\n    useEffect(() => {\n        let _referals = [];\n        fetch(`${BASE_URL}/register/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(response => {\n                const res = response.json();\n                return res;\n            })\n            .then(res => {\n                if (res.length >= 1) {\n                    let _res = res.filter((data) => data.is_client || data.is_superuser || data.is_worker );\n                    if (_res.length > 0) {\n                        _res.map((re, index) => (\n                            _referals.push({ value: re.id, label: re.username })\n                        ));\n                    }\n                    setOptions([..._referals]);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }, []);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (userName.length < 6) {\n            setUserNameError(true);\n            hasError = true;\n        }\n\n        if (tel.length < 9) {\n            hasError = true;\n            setTelError(true);\n        }\n\n        if (refer.length < 4) {\n            hasError = true;\n            setReferError(true);\n        }\n\n        if (email.length < 8) {\n            hasError = true;\n            setEmailError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const body = {\n            fullname: name,\n            username: userName,\n            phone: tel,\n            email,\n            friend: refer.value,\n            is_client: true,\n            password: 'Eden-Beauty'\n        };\n\n        fetch(`${BASE_URL}/register/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'We have a new Client.'\n                });\n                props.addClient(res);\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setAdd(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    }\n\n    return (\n        <>\n            <div onClick={() => setAdd(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${add ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${add ? 'right-0 w-full md:w-96 lg:w-120 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-8 text-xl font-semibold text-green-700\">\n                        <h2>Add Client</h2>\n                        <button onClick={() => setAdd(!add)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Eden Beauty\"\n                                label=\"Fullname\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError} />\n                            <Input\n                                placeholder=\"eden-beauty\"\n                                label=\"Username\"\n                                secureText={false}\n                                type=\"text\"\n                                value={userName}\n                                setValue={(event) => setUserName(event.target.value)}\n                                error={userNameError}\n                                setError={() => setUserNameError} />\n                            <Input\n                                placeholder=\"6X1234567\"\n                                label=\"Telephone Number\"\n                                secureText={false}\n                                type=\"number\"\n                                value={tel}\n                                setValue={(event) => setTel(event.target.value)}\n                                error={telError}\n                                setError={() => setTelError} />\n                            <Select\n                                options={options}\n                                styles={customStyles}\n                                onChange={(value) => setRefer(value)}\n                                className={'text-base text-primary mb-5 bg-white bg-opacity-0'} />\n                            <Input\n                                placeholder=\"beautycomplex@gmail.com\"\n                                label=\"Email\"\n                                secureText={false}\n                                type=\"email\"\n                                value={email}\n                                setValue={(event) => setEmail(event.target.value)}\n                                error={emailError}\n                                setError={() => setEmailError} />\n\n                            <div className=\"flex justify-center md:justify-end mt-14\">\n                                {isLoading ? <Activity /> : <Button title=\"Add Client\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setAdd(!add)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addClient }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);\n\n\nconst customStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#010f24\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    backgroundColor: 'transparent',\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: 0,\n    borderBottom: '2px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: '#010f24',\n    '&:hover': {\n       border: isFocused ? 0 : 0,\n       borderBottom: '2px',\n       borderBottomStyle: 'solid',\n       borderBottomColor: '#010f24',\n    }\n  })\n};","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/ClientDetail.section.js",["692"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoMail } from 'react-icons/io5';\nimport { FaPhone } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Confirmation, Progress, ReferCard } from '../../../components';\nimport { img_1 } from '../../../res/images';\nimport { Hyphenated } from '../../../utils/number';\nimport extractInitials from '../../../utils/extractIni';\nimport { deleteClient } from '../../../redux/Actions/Data.actions';\nimport { BASE_URL } from '../../../utils/globalVariable';\n\nconst ClientDetail = (props) => {\n    const { show, setShow, setEdit, detail, clients, user, username, password } = props;\n\n    const [confirm, setConfirm] = useState(false);\n    const [data, setData] = useState({});\n    const [loading, setLoading] = useState(false);\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    const Confirm = (data) => {\n        setConfirm(true);\n        setData({ data, msg: 'Are you sure you want to delete: '});\n    };\n    const [referers, setReferers] = useState([]);\n\n\n    useEffect(() => {\n        let _referers = clients.filter(data => data.friend === detail.id);\n        setReferers(_referers);\n    }, [detail]);\n\n    const authenticate = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            }\n        })\n            .then(res => {\n                props.deleteClient(id);\n                setConfirm(false);\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setLoading(false)\n                    setShow(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setLoading(false)\n                console.log(err);\n            })\n    };\n\n    const Edit = () => {\n        setEdit(true);\n        setShow(!show)\n    }\n\n    return (\n        <>\n            <div onClick={() => setShow(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-40 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${show ? 'left-0 w-96 opacity-100' : '-left-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${show ? 'left-0 w-full md:w-96 opacity-100' : '-left-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end text-lg font-semibold\">\n                        <h2>Client Information</h2>\n                        <button onClick={() => setShow(!show)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"flex flex-col justify-center items-center md:mt-1.5 text-xl font-semibold\">\n                        {detail.img ? <img src={img_1} alt=\"User\" className=\"h-44 w-44 rounded-full\" /> :\n                            <h2 className={'h-44 w-44 flex items-center justify-center rounded-full text-5xl tracking-wider shadow-md'}>{detail.fullname ? extractInitials(detail.fullname) : extractInitials(detail.username)}</h2>\n                        }\n                        <h4 className=\"text-sm mt-2\">{detail.fullname} | {detail.username}</h4>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"md:mt-1.5 text-base\">\n                        <h2 className=\"text-left font-semibold\">Contact Info</h2>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-2\"><IoMail className=\"mr-3\" /> {detail.email}</h4>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-1.5\"><FaPhone className=\"mr-3\" /> {detail.phone && Hyphenated(detail?.phone)}</h4>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"md:mt-1.5 text-base mb-1\">\n                        <h2 className=\"text-left font-semibold\">My Bonuses</h2>\n                        <div className={'text-primary flex justify-center flex-col items-center text-sm my-2'}>\n                            <Progress progress={detail.my_bonus / 100 || 0} />\n                            <p className=\"mt-2 text-center\">{detail.my_bonus || 0} / 10,000 XAF</p>\n                        </div>\n                        <h2 className=\"text-left font-semibold\">Refer Bonuses</h2>\n                        <div className={'text-primary flex justify-center flex-col items-center text-sm my-2'}>\n                            <Progress progress={detail.refer_bonus / 100 || 0} />\n                            <p className=\"mt-2 text-center\">{detail.refer_bonus || 0} / 10,000 XAF</p>\n                        </div>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <h2 className=\"text-left font-semibold\">Invited</h2>\n                    <div className=\"md:mt-1.5 text-base mb-5\">\n                        <div className={'styles.referedList'}>\n                            {referers.map((referer, index) => <ReferCard refer={referer} key={referer.id} />)}\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end\">\n                        {user.is_superuser && <Button title=\"Edit\" invert={false} onClick={() => Edit()} />}\n                        <Button title=\"Delete\" invert={true} type='danger' onClick={() => Confirm(detail)} />\n                        <div className=\"mx-2\" />\n                        <Button title=\"Close\" invert={true} onClick={() => setShow(!show)} />\n                    </div>\n                </div>\n            </div>\n            <Confirmation confirm={confirm} setConfirm={setConfirm} data={data} loading={loading} onClick={id => authenticate(id)} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth, data, points}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        clients: data.clients,\n        table: points.table,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ deleteClient }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientDetail);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/MiniProgressBar/Progress.component.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/WorkerDetail.section.js",["693"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoHandRight, IoMail } from 'react-icons/io5';\nimport { FaPhone } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Confirmation, Progress, ReferCard } from '../../../components';\nimport { img_1 } from '../../../res/images';\nimport { Hyphenated } from '../../../utils/number';\nimport extractInitials from '../../../utils/extractIni';\nimport { deleteWorker } from '../../../redux/Actions/Data.actions';\nimport { BASE_URL } from '../../../utils/globalVariable';\n\nconst WorkerDetail = (props) => {\n    const { show, setShow, setEdit, detail, clients, user, username, password } = props;\n\n    const [confirm, setConfirm] = useState(false);\n    const [data, setData] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    const Confirm = (data) => {\n        setConfirm(true);\n        setData({ data, msg: 'Are you sure you want to delete: '});\n    };\n    const [referers, setReferers] = useState([]);\n\n\n    useEffect(() => {\n        let _referers = clients.filter(data => data.friend === detail.id);\n        setReferers(_referers);\n    }, [detail]);\n\n    const authenticate = (id) => {\n        setLoading(true)\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            }\n        })\n            .then(res => {\n                props.deleteWorker(id);\n                setConfirm(false);\n                setTimeout(() => {\n                    setLoading(false)\n                    setShow(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setLoading(false)\n                console.log(err);\n            })\n    };\n\n    const Edit = () => {\n        setEdit(true);\n        setShow(!show)\n    }\n\n    return (\n        <>\n            <div onClick={() => setShow(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-40 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${show ? 'left-0 w-96 opacity-100' : '-left-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${show ? 'left-0 w-full md:w-96 opacity-100' : '-left-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end text-lg font-semibold\">\n                        <h2>Worker Information</h2>\n                        <button onClick={() => setShow(!show)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"flex flex-col justify-center items-center md:mt-1.5 text-xl font-semibold\">\n                        {detail.img ? <img src={img_1} alt=\"User\" className=\"h-44 w-44 rounded-full\" /> :\n                            <h2 className={'h-44 w-44 flex items-center justify-center rounded-full text-5xl tracking-wider shadow-md'}>{detail.fullname ? extractInitials(detail.fullname) : extractInitials(detail.username)}</h2>\n                        }\n                        <h4 className=\"text-sm mt-2\">{detail.fullname} | {detail.username}</h4>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"md:mt-1.5 text-base\">\n                        <h2 className=\"text-left font-semibold\">Contact Info</h2>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-2\"><IoMail className=\"mr-3\" /> {detail.email}</h4>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-1.5\"><FaPhone className=\"mr-3\" /> {detail.phone && Hyphenated(detail?.phone)}</h4>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-1.5\"><IoHandRight className=\"mr-3\" />Served: {detail.served ?? 0}</h4>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <div className=\"md:mt-1.5 text-base mb-1\">\n                        <h2 className=\"text-left font-semibold\">My Bonuses</h2>\n                        <div className={'text-primary flex justify-center flex-col items-center text-sm my-2'}>\n                            <Progress progress={detail.my_bonus / 100 || 0} />\n                            <p className=\"mt-2 text-center\">{detail.my_bonus || 0} / 10,000 XAF</p>\n                        </div>\n                        <h2 className=\"text-left font-semibold\">Refer Bonuses</h2>\n                        <div className={'text-primary flex justify-center flex-col items-center text-sm my-2'}>\n                            <Progress progress={detail.refer_bonus / 100 || 0} />\n                            <p className=\"mt-2 text-center\">{detail.refer_bonus || 0} / 10,000 XAF</p>\n                        </div>\n                        <h4 className=\"flex items-center text-gray-600 text-sm mt-1.5\">Molyko</h4>\n                    </div>\n                    <hr className=\"my-3\" />\n                    <h2 className=\"text-left font-semibold\">Invited</h2>\n                    <div className=\"md:mt-1.5 text-base mb-5\">\n                        <div className={'styles.referedList'}>\n                            {referers.map((referer, index) => <ReferCard refer={referer} key={referer.id} />)}\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end\">\n                        {user.is_superuser && <Button title=\"Edit\" invert={false} onClick={() => Edit()} />}\n                        <div className=\"mx-2\" />\n                        <Button title=\"Close\" invert={true} onClick={() => setShow(!show)} />\n                        <div className=\"mx-2\" />\n                        <Button title=\"Delete\" invert={true} type='danger' onClick={() => Confirm(detail)} />\n                    </div>\n                </div>\n            </div>\n            <Confirmation confirm={confirm} setConfirm={setConfirm} data={data} loading={loading} onClick={id => authenticate(id)} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth, data, points}) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        clients: data.clients,\n        table: points.table,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ deleteWorker }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerDetail);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/ProductDetail.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/ServiceDetail.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/FinanceDetail.section.js",["694","695"],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Workers/WorkerList/EditWorker.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Clients/ClientList/EditClient.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/Notification/Confirmation.component.js",["696"],"import React, { useEffect } from 'react'\nimport { Thousand } from '../../utils/number';\n\nconst Confirmation = (props) => {\n    const { confirm, setConfirm, data, onClick, loading } = props;\n\n    useEffect(() => {\n        setTimeout(() => {\n            setConfirm(false)\n        }, 30000);\n    }, []);\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n\n\n    return (\n        <>\n            <div onClick={() => setConfirm(false)} className={`fixed z-50 w-full h-full bg-white bg-opacity-10 fixed z-20 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${confirm ? 'inset-0' : '-top-full left-0'}`}>\n                <div\n                    onClick={(e) => stop(e)}\n                    className={`absolute capitalize shadow-xl p-4 w-96 text-wrap text-center font-semibold rounded-md bg-green-700 bg-opacity-90 left-1/2 top-1/2 transform -translate-y-1/2 -translate-x-1/2 text-white z-40 text-sm transition-all duration-500 ease-in-out`}\n                >\n                    <h2>{data?.msg} <br /> {data?.data?.fullname ? data?.data?.fullname : data?.data?.username}{data?.data?.name} {data?.data?.client && data?.data?.worker && `Purchase by ${data?.data?.client} served by ${data?.data?.worker}.`} <br /> {data?.data?.client && data?.data?.worker && `Total: ${Thousand(data?.data?.total)} XAF`}</h2>\n                    <div className=\"flex items-center justify-end mt-3\">\n                        <button onClick={() => onClick(data?.data?.id)} className={`outline-none mx-2 px-2 py-1 rounded ${data?.suspend ? 'bg-yellow-400' : 'bg-red-500'}`}>{loading ? 'Deleting' : 'Confirm'}</button>\n                        <button onClick={() => setConfirm(false)} className=\"outline-none mx-2 px-2 py-1 rounded bg-blue-400\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Confirmation;","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Products/ProductList/EditProduct.section.js",["697","698"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, DisplayCard, Input,  Notification, TextArea } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { editProduct } from '../../../redux/Actions/Data.actions';\n\nconst EditProduct = (props) => {\n    const { edit, setEdit, detail, username, password } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [about, setAbout] = useState('');\n    const [image, setImage] = useState(null)\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        setName(detail.name)\n        setDiscount(detail.discount)\n        setPrice(detail.price);\n        setAbout(detail.description);\n        return () => {\n            setPrice('');\n            setName('');\n            setDiscount('');\n            setAbout('');\n            setImage(null);\n        }\n    }, [detail]);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (price.length < 3) {\n            hasError = true;\n            setPriceError(true);\n        }\n\n        if (about.length < 10) {\n            hasError = true;\n            setAboutError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n            formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/product/${detail.id}/`, {\n            method: 'PATCH',\n            body: formData,\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'Product information updated.'\n                })\n                props.editProduct(res);\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setEdit(false);\n                }, 3000);\n            })\n            .catch(err => {\n                console.log(err)\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setEdit(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${edit ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY-white -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${edit ? 'right-0 w-full md:w-9/10 lg:w-3/5 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-8 text-xl font-semibold text-green-700\">\n                        <h2>Edit Product</h2>\n                        <button onClick={() => setEdit(!edit)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full md:w-1/2 lg:w-3/5 pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Name\"\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError}\n                            />\n                            <Input\n                                placeholder=\"10\"\n                                label=\"Discount\"\n                                secureText={false}\n                                type=\"number\"\n                                value={discount}\n                                setValue={(event) => setDiscount(event.target.value)}\n                                error={discountError}\n                                setError={() => setDiscountError}\n                            />\n                            <Input\n                                placeholder=\"5000\"\n                                label=\"Price\"\n                                secureText={false}\n                                type=\"number\"\n                                value={price}\n                                setValue={(event) => setPrice(event.target.value)}\n                                error={priceError}\n                                setError={() => setPriceError}\n                            />\n                            <Input\n                                placeholder=\"5\"\n                                type=\"file\"\n                                label=\"Image\"\n                                name=\"image\"\n                                // value={image}\n                                setValue={(event) => setImage(event.target.files)}\n                                error={imageError}\n                                setError={() => setImageError}\n                            />\n                            <TextArea\n                                placeholder=\"Write about the product you are adding\"\n                                label=\"About\"\n                                value={about}\n                                setValue={(event) => setAbout(event.target.value)}\n                                error={aboutError}\n                                setError={() => setAboutError}\n                            />\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-2/5 pl-2\">\n                            <div className=\"flex justify-center mt-14\">\n                                <DisplayCard\n                                    name={name}\n                                    price={price}\n                                    discount={discount}\n                                    image={image}\n                                    urlImage={detail.img}\n                                />\n                            </div>\n                            <div className=\"flex justify-center md:justify-end mt-20\">\n                                {isLoading ? <Activity /> : <Button title=\"Edit Product\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setEdit(!edit)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ editProduct }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Services/ServiceList/EditService.setion.js",["699","700"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, DisplayCard, Input,  Notification, TextArea } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { editService } from '../../../redux/Actions/Data.actions';\n\nconst EditService = (props) => {\n    const { edit, setEdit, username, password, detail } = props;\n\n    const [price, setPrice] = useState('');\n    const [name, setName] = useState('');\n    const [about, setAbout] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [image, setImage] = useState(null);\n    const [priceError, setPriceError] = useState(false);\n    const [nameError, setNameError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        setName(detail.name)\n        setDiscount(detail.discount)\n        setPrice(detail.price);\n        setAbout(detail.description);\n        return () => {\n            setPrice('');\n            setName('');\n            setDiscount('');\n            setAbout('');\n            setImage(null);\n        }\n    }, [detail]);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (price.length < 3) {\n            hasError = true;\n            setPriceError(true);\n        }\n\n        if (about.length < 10) {\n            hasError = true;\n            setAboutError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('discount', discount || 0);\n        formData.append('description', about);\n        if (image) {\n            formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/service/${detail.id}/`, {\n            method: 'PATCH',\n            body: formData,\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'Service information updated'\n                });\n                props.editService(res);\n            })\n            .then(err => {\n                setTimeout(() => {\n                    setEdit(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setEdit(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${edit ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY-white -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${edit ? 'right-0 w-full md:w-9/10 lg:w-3/5 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-8 text-xl font-semibold text-green-700\">\n                        <h2>Edit Service</h2>\n                        <button onClick={() => setEdit(!edit)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full md:w-1/2 lg:w-3/5 pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Name\"\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError} />\n                            <Input\n                                placeholder=\"10\"\n                                label=\"Discount\"\n                                secureText={false}\n                                type=\"number\"\n                                value={discount}\n                                setValue={(event) => setDiscount(event.target.value)}\n                                error={discountError}\n                                setError={() => setDiscountError} />\n                            <Input\n                                placeholder=\"5000\"\n                                label=\"Price\"\n                                secureText={false}\n                                type=\"number\"\n                                value={price}\n                                setValue={(event) => setPrice(event.target.value)}\n                                error={priceError}\n                                setError={() => setPriceError} />\n                            <Input\n                                label=\"Image\"\n                                secureText={false}\n                                type=\"file\"\n                                // value={image}\n                                setValue={(event) => setImage(event.target.files)}\n                                error={imageError}\n                                setError={() => setImageError} />\n                            <TextArea\n                                placeholder=\"Write about the product you are adding\"\n                                label=\"About\"\n                                value={about}\n                                setValue={(event) => setAbout(event.target.value)}\n                                error={aboutError}\n                                setError={() => setAboutError} />\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-2/5 pl-2\">\n                            <div className=\"flex justify-center mt-14\">\n                                <DisplayCard\n                                    name={name}\n                                    price={price}\n                                    discount={discount}\n                                    image={image}\n                                    urlImage={detail.img}\n                                />\n                            </div>\n                            <div className=\"flex justify-center md:justify-end mt-20\">\n                                {isLoading ? <Activity /> : <Button title=\"Edit Service\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setEdit(!edit)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({ auth }) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ editService }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditService);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/AddGallery.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/components/ItemCard/GalleryCard.component.js",["701"],"import React from 'react'\nimport { SqrButton } from '..';\n\nimport styles from './card.module.css';\n\nconst GalleryCard = (props) => {\n    const { image, event, name, urlImage } = props;\n\n\n    return (\n        <>\n            <div\n                style={{ backgroundImage: `url(${(image && image.length >= 1) ? URL.createObjectURL(image[0]) : urlImage})` }}\n                className={`\n                    transition-all duration-100 ease-in-out \n                    shadow-lg overflow-hidden relative bg-center bg-cover\n                    w-72 h-72  rounded-md\n                    ${styles.imageContainer}\n                `}>\n                <div className={`p-4 absolute text-gray-50 inset-0 bg-gray-800 bg-opacity-60 lg:bg-opacity-20 transition duration-500 ease-in-out hover:bg-opacity-60 flex flex-col justify-between items-start ${styles.imageOverlay}`}>\n                    <div className={`${styles.marketName} text-gray-100 text-left`}>\n                        <h4 className=\"text-xs\">{event}</h4>\n                        <h2 className=\"text-sm\">{name}</h2>\n                    </div>\n                    <div className={`${styles.marketButton}`}>\n                        <h2 className=\"text-sm p-1 bg-green-500 rounded\">Eden Beauty</h2>\n                        {/* <SqrButton title={`Book`} onClick={() => setRedirect(true)} /> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default GalleryCard;\n\n// ${grid === 2 && 'md:w-64 md:h-64 lg:w-64 lg:h-64'}\n                    // ${grid === 1 && 'md:w-64 md:h-64 lg:w-72 lg:h-72'}\n                    // ${grid === 0 && 'md:w-64 md:h-64'}","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/EditGallery.section.js",["702","703"],"import React, { useEffect, useState } from 'react'\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, Input,  Notification, GalleryCard } from '../../components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { editGallery } from '../../redux/Actions/Data.actions';\n\nconst EditGallery = (props) => {\n    const { edit, setEdit, detail, username, password } = props;\n\n    const [name, setName] = useState('');\n    const [event, setEvent] = useState('');\n    const [image, setImage] = useState('');\n    const [nameError, setNameError] = useState(false);\n    const [eventError, setEventError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    useEffect(() => {\n        setName(detail.name);\n        setEvent(detail.event)\n        return () => {\n            setImage('');\n            setName('');\n            setEvent('');\n        }\n    }, [detail]);\n\n    const authenticate = () => {\n        let hasError;\n        setIsLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (image && image[0].length < 6) {\n            setImageError(true);\n            hasError = true;\n        }\n\n        if (event.length < 9) {\n            hasError = true;\n            setEventError(true);\n        }\n\n        if (hasError) {\n            setIsLoading(false);\n            console.log('Have error');\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('event', event);\n        if (image) {\n            formData.append('img', image[0]);\n        }\n\n        fetch(`${BASE_URL}/Gallery/${detail.id}/`, {\n            method: 'PATCH',\n            body: formData,\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful',\n                    message: 'Memory updated.'\n                })\n                props.editGallery(res);\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setEdit(false);\n                }, 3000);\n            })\n            .catch(err => {\n                console.log(err)\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setEdit(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${edit ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY -top-0 z-30 bg-white text-gray-700 p-8 transition-all delay-100 ease-in-out ${edit ? 'right-0 w-full md:w-96 lg:w-120 opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-end md:mt-6 text-xl font-semibold text-green-700\">\n                        <h2>Edit Gallery</h2>\n                        <button onClick={() => setEdit(!edit)} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-2 mb-12\" />\n                    <div className=\"flex py-2 flex-col md:flex-row\">\n                        <div className=\"w-full pr-2 lg:pr-6\">\n                            <Input\n                                placeholder=\"Event\"\n                                label=\"Event\"\n                                secureText={false}\n                                type=\"text\"\n                                value={event}\n                                setValue={(event) => setEvent(event.target.value)}\n                                error={eventError}\n                                setError={() => setEventError} />\n                            <Input\n                                placeholder=\"Shalot Price\"\n                                label=\"Name\"\n                                secureText={false}\n                                type=\"text\"\n                                value={name}\n                                setValue={(event) => setName(event.target.value)}\n                                error={nameError}\n                                setError={() => setNameError} />\n                            <Input\n                                placeholder=\"\"\n                                type=\"file\"\n                                label=\"Image\"\n                                name=\"image\"\n                                // value={image}\n                                setValue={(event) => setImage(event.target.files)}\n                                error={imageError}\n                                setError={() => setImageError}\n                            />\n                            <div className=\"flex justify-center\">\n                                <GalleryCard\n                                    image={image}\n                                    event={event}\n                                    name={name}\n                                    urlImage={detail.img}\n                                />\n                            </div>\n\n                            <div className=\"flex justify-center md:justify-end mt-14\">\n                                {isLoading ? <Activity /> : <Button title=\"Edit Gallery\" invert={false} onClick={() => authenticate()} />}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" invert={true} onClick={() => setEdit(!edit)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({auth}) => {\n  return {\n    username: auth.username,\n    password: auth.password,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ editGallery }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGallery);","/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Gallery/GalleryDetail.section.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/utils/imageVariable.js",[],"/home/jb-inc/Desktop/ReactJs/EdenProject/src/sections/Finance/FinanceList/AddPurchase.section.js",["704","705","706","707","708","709","710"],"import React, { useEffect, useState } from 'react'\nimport { IoAddCircleOutline, IoBody, IoBriefcase, IoClose, IoHandLeft, IoLeaf } from 'react-icons/io5';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Activity, Button, Notification } from '../../../components';\nimport { BASE_URL } from '../../../utils/globalVariable';\nimport { addFinance } from '../../../redux/Actions/Data.actions';\nimport { setClearPurchase } from '../../../redux/Actions/Purchase.actions';\nimport { setPoint } from '../../../redux/Actions/Points.actions';\nimport { Product, Service } from '../..';\n\nconst AddPurchase = (props) => {\n    const { add, setAdd, username, password, user, product, total, _services, _products } = props;\n\n    const [options, setOptions] = useState([]);\n    const [client, setClient] = useState('');\n    const [list, setList] = useState([]);\n    const [purchase, setPurchase] = useState('Products');\n    const [notify, setNotify] = useState(false);\n    const [msg, setMsg] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    const stop = (e) => {\n        e.stopPropagation()\n    }\n\n    const fetchMyBonus = async (id) => {\n        try {\n            const response = await fetch(`${BASE_URL}/register/${id}/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n                },\n            });\n            const registered = await response.json();\n            const myBonus = registered.my_bonus;\n            const served = registered.served;\n            const refer_bonus = registered.refer_bonus;\n            return [myBonus, served, refer_bonus];\n        }\n        catch (err) {\n            console.log(err, 'Received error');\n        }\n            \n    }\n\n    const updateMyBonus = (id, myBonus) => {\n        const body = {\n            my_bonus: myBonus,\n        }\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                // console.log(res);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    const updateReferBonus = (id, Bonus) => {\n        const body = {\n            refer_bonus: Bonus,\n        }\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                // console.log(res);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    const updateServed = (id, served) => {\n        const body = {\n            served\n        }\n        fetch(`${BASE_URL}/register/${id}/`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                // console.log(res);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    useEffect(() => {\n        let _referals = [];\n        fetch(`${BASE_URL}/register/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n        })\n            .then(response => {\n                const res = response.json();\n                return res;\n            })\n            .then(res => {\n                if (res.length > 1) {\n                    let _res = res.filter((data) => data.is_client || data.is_worker);\n                    setList(_res);\n                    if (_res.length > 0) {\n                        _res.map((re, index) => (\n                            _referals.push({ value: re.id, label: re.username })\n                        ));\n                    }\n                    setOptions([..._referals]);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }, [add]);\n\n    const exit = () => {\n        setAdd(false);\n        props.setClearPurchase();\n    }\n\n    const purchased = () => {\n        setIsLoading(true);\n        let friend;\n        const body = {\n            client: client.label,\n            client_id: client.value,\n            worker_id: user.id,\n            worker: username,\n            item: product,\n            total: total,\n            point: total / 1000,\n        }\n\n        friend = list.filter(data => data.id === client.value);\n\n        fetch(`${BASE_URL}/purchase/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const response = res.json();\n                return response;\n            })\n            .then(res => {\n                setIsLoading(false);\n                props.setClearPurchase();\n                props.addFinance(res)\n                props.setPoint(client.value, total / 2000, friend[0].friend);\n                setNotify(true);\n                setMsg({\n                    title: 'Successful Purchase',\n                    message: 'Purchase completed, you served one more person.'\n                })\n                if (friend[0].served === null && friend[0].friend !== null) {\n                    let friendId = friend[0].friend;\n                    let data = fetchMyBonus(friendId);\n                    data\n                        .then(res => {\n                            let myBonus = Number(res[2]) + (total * 0.15);\n                            updateReferBonus(friendId, myBonus);\n                        })\n                        .then(res => {\n                            let data = fetchMyBonus(client.value);\n                            data\n                                .then(res => {\n                                    let served = Number(res[1]) + 1;\n                                    updateServed(client.value, served);\n                                })\n                                .then(res => {\n                                    let data = fetchMyBonus(user.id);\n                                    data\n                                        .then(res => {\n                                            let served = Number(res[1]) + 1;\n                                            updateServed(user.id, served);\n                                        })\n                                })\n                        })\n                } else {\n                    let friendId = friend[0].friend;\n                    let data = fetchMyBonus(friendId);\n                    data\n                        .then(res => {\n                            let myBonus = Number(res[2]) + (total * 0.025);\n                            updateReferBonus(friendId, myBonus);\n                        })\n                        .then(res => {\n                            let data = fetchMyBonus(client.value);\n                            data\n                                .then(res => {\n                                    let myBonus = Number(res[0]) + (total * 0.05);\n                                    let served = Number(res[1]) + 1;\n                                    updateMyBonus(client.value, myBonus);\n                                    updateServed(client.value, served);\n                                })\n                                .then(res => {\n                                    let data = fetchMyBonus(user.id);\n                                    data\n                                        .then(res => {\n                                            let served = Number(res[1]) + 1;\n                                            updateServed(user.id, served);\n                                        })\n                                })\n                        })\n                }\n                return res;\n            })\n            .then(res => {\n                setTimeout(() => {\n                    setAdd(false);\n                }, 3000);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setNotify(true);\n                setMsg({\n                    title: 'Unexpected Error',\n                    message: 'An error occured, check you internet connection'\n                })\n            })\n    };\n\n    return (\n        <>\n            <div onClick={() => setAdd(false)} className={`h-full bg-gray-50 bg-opacity-10 fixed z-50 top-0 backdrop-filter backdrop-blur-sm transition-all duration-500 ease-in-out ${add ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'} `}>\n                <div onClick={(e) => stop(e)} className={`fixed shadow-xl h-screen overflow-y-auto overflowY -top-0 z-30 bg-white text-gray-700 p-5 transition-all delay-100 ease-in-out ${add ? 'right-0 w-full opacity-100' : '-right-16 opacity-0 w-0'}`}>\n                    <div className=\"flex justify-between items-center md:mt-2 text-xl font-semibold text-green-700 bg-white bg-opacity-30 backdrop-filter backdrop-blur-md sticky -top-4 md:top-0 z-40 pt-1\">\n                        <h2>New Purchase</h2>\n                        <Select\n                            options={options}\n                            styles={customStyles}\n                            className={'ml-auto mr-7 w-60 text-sm p-0 mb-2 border-b-2 border-gray-700 cursor-pointer'}\n                            onChange={(value) => setClient(value)}\n                        />\n                        <button onClick={() => exit()} className=\"flex items-center rounded-full outline-none text-base py-1 px-2 text-gray-900 bg-white shadow-md mx-1.5 transition duration-500 ease-in-out hover:shadow-xl\"><IoClose /></button>\n                    </div>\n                    <hr className=\"my-5\" />\n                    <nav className={''}>\n                        <ul className={'flex justify-start items-center'}>\n                            <li className={'cursor-pointer'} onClick={() => setPurchase('Products')}><i className={['text-sm my-0.5 mr-3 p-1 px-2 flex items-center text-green-700 bg-white border-b-2 border-white', purchase === 'Products' && 'border-green-700'].join(' ')}><IoLeaf className=\"mr-1.5\" /> Products</i></li>\n                            <li className={'cursor-pointer'} onClick={() => setPurchase('Services')}><i className={['text-sm my-0.5 ml-3 p-1 px-2 flex items-center text-green-700 bg-white border-b-2 border-white', purchase === 'Services' && 'border-green-700'].join(' ')}><IoHandLeft className=\"mr-1.5\" /> Services</i></li>\n                        </ul>\n                        <hr className={'my-4 mx-2'} />\n                    </nav>\n                    <div className=\"mb-10\">\n                        {purchase === \"Products\" ? (\n                            <Product onClick={() => purchased()} loading={isLoading} />\n                        ) : (\n                            <div>\n                                    <Service onClick={() => purchased()} loading={isLoading} />\n                            </div>\n                        )}\n                        <div className=\"w-full\">\n                            <div className=\"fixed bottom-9 right-9 justify-center md:justify-end mt-20\">\n                                {/* {isLoading ? <Activity /> : <Button title=\"Add Product\" invert={false} onClick={() => authenticate()} />} */}\n                                <div className=\"mx-2\" />\n                                <Button title=\"Close\" onClick={() => exit()} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Notification notify={notify} setNotify={setNotify} msg={msg} />\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = ({ auth, purchase, data }) => {\n    return {\n        username: auth.username,\n        password: auth.password,\n        user: auth.user,\n        product: purchase.product,\n        _products: data.products,\n        _services: data.services,\n        total: purchase.total,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addFinance, setClearPurchase, setPoint }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPurchase);\n\nconst customStyles = {\n    option: (styles, { isFocused }) => {\n        return {\n            ...styles,\n            backgroundColor: isFocused ? \"#010f24\" : null,\n            color: isFocused ? \"white\" : '#999',\n        };\n    },\n    control: (base, { isFocused }) => ({\n        ...base,\n        backgroundColor: 'transparent',\n        // This line disable the blue border\n        boxShadow: 'none',\n        border: 'none',\n        padding: '0px',\n        margin: '0px',\n        '&:hover': {\n            border: 'none',\n        }\n    })\n};\n",{"ruleId":"711","replacedBy":"712"},{"ruleId":"713","replacedBy":"714"},{"ruleId":"715","severity":1,"message":"716","line":1,"column":25,"nodeType":"717","messageId":"718","endLine":1,"endColumn":30},{"ruleId":"715","severity":1,"message":"719","line":129,"column":7,"nodeType":"717","messageId":"718","endLine":129,"endColumn":19},{"ruleId":"715","severity":1,"message":"720","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":20},{"ruleId":"715","severity":1,"message":"721","line":2,"column":60,"nodeType":"717","messageId":"718","endLine":2,"endColumn":68},{"ruleId":"715","severity":1,"message":"722","line":2,"column":96,"nodeType":"717","messageId":"718","endLine":2,"endColumn":104},{"ruleId":"715","severity":1,"message":"723","line":12,"column":12,"nodeType":"717","messageId":"718","endLine":12,"endColumn":18},{"ruleId":"715","severity":1,"message":"724","line":12,"column":20,"nodeType":"717","messageId":"718","endLine":12,"endColumn":29},{"ruleId":"715","severity":1,"message":"725","line":13,"column":12,"nodeType":"717","messageId":"718","endLine":13,"endColumn":19},{"ruleId":"726","severity":1,"message":"727","line":155,"column":8,"nodeType":"728","endLine":155,"endColumn":16,"suggestions":"729"},{"ruleId":"730","severity":1,"message":"731","line":333,"column":5,"nodeType":"732","messageId":"733","endLine":333,"endColumn":17},{"ruleId":"730","severity":1,"message":"734","line":336,"column":8,"nodeType":"732","messageId":"733","endLine":336,"endColumn":14},{"ruleId":"715","severity":1,"message":"735","line":16,"column":12,"nodeType":"717","messageId":"718","endLine":16,"endColumn":21},{"ruleId":"726","severity":1,"message":"736","line":38,"column":8,"nodeType":"728","endLine":38,"endColumn":19,"suggestions":"737"},{"ruleId":"715","severity":1,"message":"738","line":20,"column":12,"nodeType":"717","messageId":"718","endLine":20,"endColumn":19},{"ruleId":"726","severity":1,"message":"739","line":37,"column":8,"nodeType":"728","endLine":37,"endColumn":16,"suggestions":"740"},{"ruleId":"711","replacedBy":"741"},{"ruleId":"713","replacedBy":"742"},{"ruleId":"726","severity":1,"message":"739","line":50,"column":8,"nodeType":"728","endLine":50,"endColumn":16,"suggestions":"743"},{"ruleId":"715","severity":1,"message":"719","line":159,"column":7,"nodeType":"717","messageId":"718","endLine":159,"endColumn":19},{"ruleId":"726","severity":1,"message":"739","line":50,"column":8,"nodeType":"728","endLine":50,"endColumn":16,"suggestions":"744"},{"ruleId":"715","severity":1,"message":"719","line":159,"column":7,"nodeType":"717","messageId":"718","endLine":159,"endColumn":19},{"ruleId":"726","severity":1,"message":"745","line":103,"column":8,"nodeType":"728","endLine":103,"endColumn":10,"suggestions":"746"},{"ruleId":"715","severity":1,"message":"747","line":1,"column":17,"nodeType":"717","messageId":"718","endLine":1,"endColumn":26},{"ruleId":"715","severity":1,"message":"748","line":4,"column":8,"nodeType":"717","messageId":"718","endLine":4,"endColumn":14},{"ruleId":"715","severity":1,"message":"749","line":7,"column":49,"nodeType":"717","messageId":"718","endLine":7,"endColumn":55},{"ruleId":"715","severity":1,"message":"738","line":22,"column":12,"nodeType":"717","messageId":"718","endLine":22,"endColumn":19},{"ruleId":"715","severity":1,"message":"750","line":22,"column":21,"nodeType":"717","messageId":"718","endLine":22,"endColumn":31},{"ruleId":"715","severity":1,"message":"719","line":146,"column":7,"nodeType":"717","messageId":"718","endLine":146,"endColumn":19},{"ruleId":"715","severity":1,"message":"751","line":6,"column":8,"nodeType":"717","messageId":"718","endLine":6,"endColumn":14},{"ruleId":"715","severity":1,"message":"735","line":14,"column":12,"nodeType":"717","messageId":"718","endLine":14,"endColumn":21},{"ruleId":"726","severity":1,"message":"752","line":36,"column":8,"nodeType":"728","endLine":36,"endColumn":19,"suggestions":"753"},{"ruleId":"715","severity":1,"message":"754","line":12,"column":12,"nodeType":"717","messageId":"718","endLine":12,"endColumn":18},{"ruleId":"715","severity":1,"message":"755","line":13,"column":12,"nodeType":"717","messageId":"718","endLine":13,"endColumn":15},{"ruleId":"726","severity":1,"message":"756","line":42,"column":8,"nodeType":"728","endLine":42,"endColumn":10,"suggestions":"757"},{"ruleId":"715","severity":1,"message":"747","line":1,"column":17,"nodeType":"717","messageId":"718","endLine":1,"endColumn":26},{"ruleId":"715","severity":1,"message":"751","line":3,"column":8,"nodeType":"717","messageId":"718","endLine":3,"endColumn":14},{"ruleId":"715","severity":1,"message":"758","line":4,"column":10,"nodeType":"717","messageId":"718","endLine":4,"endColumn":25},{"ruleId":"726","severity":1,"message":"759","line":25,"column":8,"nodeType":"728","endLine":25,"endColumn":10,"suggestions":"760"},{"ruleId":"726","severity":1,"message":"739","line":45,"column":8,"nodeType":"728","endLine":45,"endColumn":10,"suggestions":"761"},{"ruleId":"726","severity":1,"message":"739","line":61,"column":8,"nodeType":"728","endLine":61,"endColumn":10,"suggestions":"762"},{"ruleId":"726","severity":1,"message":"739","line":77,"column":8,"nodeType":"728","endLine":77,"endColumn":10,"suggestions":"763"},{"ruleId":"726","severity":1,"message":"739","line":93,"column":8,"nodeType":"728","endLine":93,"endColumn":10,"suggestions":"764"},{"ruleId":"726","severity":1,"message":"765","line":24,"column":8,"nodeType":"728","endLine":24,"endColumn":14,"suggestions":"766"},{"ruleId":"726","severity":1,"message":"767","line":35,"column":8,"nodeType":"728","endLine":35,"endColumn":10,"suggestions":"768"},{"ruleId":"715","severity":1,"message":"769","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":15},{"ruleId":"715","severity":1,"message":"770","line":2,"column":17,"nodeType":"717","messageId":"718","endLine":2,"endColumn":28},{"ruleId":"715","severity":1,"message":"771","line":3,"column":10,"nodeType":"717","messageId":"718","endLine":3,"endColumn":18},{"ruleId":"715","severity":1,"message":"751","line":5,"column":8,"nodeType":"717","messageId":"718","endLine":5,"endColumn":14},{"ruleId":"726","severity":1,"message":"772","line":25,"column":8,"nodeType":"728","endLine":25,"endColumn":10,"suggestions":"773"},{"ruleId":"715","severity":1,"message":"720","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":20},{"ruleId":"715","severity":1,"message":"774","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":15},{"ruleId":"715","severity":1,"message":"751","line":4,"column":8,"nodeType":"717","messageId":"718","endLine":4,"endColumn":14},{"ruleId":"715","severity":1,"message":"775","line":7,"column":25,"nodeType":"717","messageId":"718","endLine":7,"endColumn":29},{"ruleId":"726","severity":1,"message":"776","line":9,"column":8,"nodeType":"728","endLine":9,"endColumn":16,"suggestions":"777"},{"ruleId":"715","severity":1,"message":"778","line":5,"column":10,"nodeType":"717","messageId":"718","endLine":5,"endColumn":16},{"ruleId":"715","severity":1,"message":"779","line":6,"column":10,"nodeType":"717","messageId":"718","endLine":6,"endColumn":18},{"ruleId":"780","severity":1,"message":"781","line":27,"column":1,"nodeType":"782","messageId":"783","endLine":46,"endColumn":14},{"ruleId":"715","severity":1,"message":"784","line":2,"column":17,"nodeType":"717","messageId":"718","endLine":2,"endColumn":24},{"ruleId":"715","severity":1,"message":"751","line":7,"column":8,"nodeType":"717","messageId":"718","endLine":7,"endColumn":14},{"ruleId":"715","severity":1,"message":"785","line":13,"column":33,"nodeType":"717","messageId":"718","endLine":13,"endColumn":40},{"ruleId":"715","severity":1,"message":"786","line":13,"column":42,"nodeType":"717","messageId":"718","endLine":13,"endColumn":47},{"ruleId":"715","severity":1,"message":"787","line":13,"column":49,"nodeType":"717","messageId":"718","endLine":13,"endColumn":55},{"ruleId":"715","severity":1,"message":"788","line":18,"column":12,"nodeType":"717","messageId":"718","endLine":18,"endColumn":17},{"ruleId":"715","severity":1,"message":"755","line":24,"column":12,"nodeType":"717","messageId":"718","endLine":24,"endColumn":15},{"ruleId":"715","severity":1,"message":"754","line":25,"column":12,"nodeType":"717","messageId":"718","endLine":25,"endColumn":18},{"ruleId":"715","severity":1,"message":"723","line":27,"column":12,"nodeType":"717","messageId":"718","endLine":27,"endColumn":18},{"ruleId":"715","severity":1,"message":"724","line":27,"column":20,"nodeType":"717","messageId":"718","endLine":27,"endColumn":29},{"ruleId":"715","severity":1,"message":"725","line":28,"column":12,"nodeType":"717","messageId":"718","endLine":28,"endColumn":19},{"ruleId":"726","severity":1,"message":"789","line":39,"column":8,"nodeType":"728","endLine":39,"endColumn":10,"suggestions":"790"},{"ruleId":"726","severity":1,"message":"791","line":75,"column":8,"nodeType":"728","endLine":75,"endColumn":28,"suggestions":"792"},{"ruleId":"793","severity":1,"message":"794","line":97,"column":38,"nodeType":"795","messageId":"796","endLine":97,"endColumn":40},{"ruleId":"726","severity":1,"message":"791","line":117,"column":8,"nodeType":"728","endLine":117,"endColumn":10,"suggestions":"797"},{"ruleId":"726","severity":1,"message":"791","line":142,"column":8,"nodeType":"728","endLine":142,"endColumn":10,"suggestions":"798"},{"ruleId":"726","severity":1,"message":"791","line":164,"column":8,"nodeType":"728","endLine":164,"endColumn":10,"suggestions":"799"},{"ruleId":"715","severity":1,"message":"800","line":166,"column":11,"nodeType":"717","messageId":"718","endLine":166,"endColumn":18},{"ruleId":"715","severity":1,"message":"801","line":24,"column":12,"nodeType":"717","messageId":"718","endLine":24,"endColumn":17},{"ruleId":"715","severity":1,"message":"802","line":57,"column":15,"nodeType":"717","messageId":"718","endLine":57,"endColumn":19},{"ruleId":"715","severity":1,"message":"803","line":44,"column":11,"nodeType":"717","messageId":"718","endLine":44,"endColumn":25},{"ruleId":"726","severity":1,"message":"804","line":65,"column":8,"nodeType":"728","endLine":65,"endColumn":14,"suggestions":"805"},{"ruleId":"726","severity":1,"message":"806","line":76,"column":8,"nodeType":"728","endLine":76,"endColumn":18,"suggestions":"807"},{"ruleId":"715","severity":1,"message":"808","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":17},{"ruleId":"715","severity":1,"message":"758","line":6,"column":18,"nodeType":"717","messageId":"718","endLine":6,"endColumn":33},{"ruleId":"715","severity":1,"message":"809","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":21},{"ruleId":"715","severity":1,"message":"810","line":4,"column":21,"nodeType":"717","messageId":"718","endLine":4,"endColumn":35},{"ruleId":"726","severity":1,"message":"811","line":35,"column":8,"nodeType":"728","endLine":35,"endColumn":14,"suggestions":"812"},{"ruleId":"726","severity":1,"message":"756","line":61,"column":8,"nodeType":"728","endLine":61,"endColumn":25,"suggestions":"813"},{"ruleId":"715","severity":1,"message":"808","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":17},{"ruleId":"715","severity":1,"message":"758","line":6,"column":18,"nodeType":"717","messageId":"718","endLine":6,"endColumn":33},{"ruleId":"726","severity":1,"message":"811","line":33,"column":8,"nodeType":"728","endLine":33,"endColumn":14,"suggestions":"814"},{"ruleId":"726","severity":1,"message":"756","line":59,"column":8,"nodeType":"728","endLine":59,"endColumn":16,"suggestions":"815"},{"ruleId":"715","severity":1,"message":"809","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":21},{"ruleId":"715","severity":1,"message":"754","line":23,"column":12,"nodeType":"717","messageId":"718","endLine":23,"endColumn":18},{"ruleId":"715","severity":1,"message":"755","line":25,"column":12,"nodeType":"717","messageId":"718","endLine":25,"endColumn":15},{"ruleId":"726","severity":1,"message":"816","line":36,"column":8,"nodeType":"728","endLine":36,"endColumn":14,"suggestions":"817"},{"ruleId":"726","severity":1,"message":"818","line":47,"column":8,"nodeType":"728","endLine":47,"endColumn":20,"suggestions":"819"},{"ruleId":"715","severity":1,"message":"820","line":1,"column":28,"nodeType":"717","messageId":"718","endLine":1,"endColumn":34},{"ruleId":"715","severity":1,"message":"821","line":13,"column":9,"nodeType":"717","messageId":"718","endLine":13,"endColumn":17},{"ruleId":"726","severity":1,"message":"822","line":37,"column":8,"nodeType":"728","endLine":37,"endColumn":14,"suggestions":"823"},{"ruleId":"726","severity":1,"message":"736","line":48,"column":8,"nodeType":"728","endLine":48,"endColumn":19,"suggestions":"824"},{"ruleId":"715","severity":1,"message":"808","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":17},{"ruleId":"715","severity":1,"message":"821","line":17,"column":9,"nodeType":"717","messageId":"718","endLine":17,"endColumn":17},{"ruleId":"726","severity":1,"message":"825","line":42,"column":8,"nodeType":"728","endLine":42,"endColumn":14,"suggestions":"826"},{"ruleId":"726","severity":1,"message":"752","line":54,"column":8,"nodeType":"728","endLine":54,"endColumn":19,"suggestions":"827"},{"ruleId":"715","severity":1,"message":"808","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":17},{"ruleId":"715","severity":1,"message":"751","line":11,"column":8,"nodeType":"717","messageId":"718","endLine":11,"endColumn":14},{"ruleId":"726","severity":1,"message":"822","line":45,"column":8,"nodeType":"728","endLine":45,"endColumn":14,"suggestions":"828"},{"ruleId":"726","severity":1,"message":"736","line":56,"column":8,"nodeType":"728","endLine":56,"endColumn":19,"suggestions":"829"},{"ruleId":"726","severity":1,"message":"830","line":79,"column":8,"nodeType":"728","endLine":79,"endColumn":18,"suggestions":"831"},{"ruleId":"726","severity":1,"message":"825","line":44,"column":8,"nodeType":"728","endLine":44,"endColumn":14,"suggestions":"832"},{"ruleId":"726","severity":1,"message":"752","line":56,"column":8,"nodeType":"728","endLine":56,"endColumn":19,"suggestions":"833"},{"ruleId":"715","severity":1,"message":"808","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":17},{"ruleId":"711","replacedBy":"834"},{"ruleId":"713","replacedBy":"835"},{"ruleId":"715","severity":1,"message":"809","line":6,"column":10,"nodeType":"717","messageId":"718","endLine":6,"endColumn":21},{"ruleId":"715","severity":1,"message":"836","line":25,"column":12,"nodeType":"717","messageId":"718","endLine":25,"endColumn":15},{"ruleId":"715","severity":1,"message":"837","line":25,"column":17,"nodeType":"717","messageId":"718","endLine":25,"endColumn":23},{"ruleId":"715","severity":1,"message":"755","line":30,"column":12,"nodeType":"717","messageId":"718","endLine":30,"endColumn":15},{"ruleId":"715","severity":1,"message":"754","line":31,"column":12,"nodeType":"717","messageId":"718","endLine":31,"endColumn":18},{"ruleId":"726","severity":1,"message":"838","line":47,"column":9,"nodeType":"728","endLine":47,"endColumn":20,"suggestions":"839"},{"ruleId":"793","severity":1,"message":"794","line":64,"column":34,"nodeType":"795","messageId":"796","endLine":64,"endColumn":36},{"ruleId":"726","severity":1,"message":"840","line":92,"column":8,"nodeType":"728","endLine":92,"endColumn":14,"suggestions":"841"},{"ruleId":"715","severity":1,"message":"735","line":15,"column":12,"nodeType":"717","messageId":"718","endLine":15,"endColumn":21},{"ruleId":"726","severity":1,"message":"842","line":34,"column":8,"nodeType":"728","endLine":34,"endColumn":14,"suggestions":"843"},{"ruleId":"726","severity":1,"message":"844","line":55,"column":8,"nodeType":"728","endLine":55,"endColumn":10,"suggestions":"845"},{"ruleId":"715","severity":1,"message":"846","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"711","replacedBy":"847"},{"ruleId":"713","replacedBy":"848"},{"ruleId":"715","severity":1,"message":"735","line":18,"column":12,"nodeType":"717","messageId":"718","endLine":18,"endColumn":21},{"ruleId":"726","severity":1,"message":"849","line":41,"column":8,"nodeType":"728","endLine":41,"endColumn":14,"suggestions":"850"},{"ruleId":"726","severity":1,"message":"851","line":62,"column":8,"nodeType":"728","endLine":62,"endColumn":18,"suggestions":"852"},{"ruleId":"715","severity":1,"message":"853","line":11,"column":26,"nodeType":"717","messageId":"718","endLine":11,"endColumn":30},{"ruleId":"715","severity":1,"message":"854","line":11,"column":26,"nodeType":"717","messageId":"718","endLine":11,"endColumn":34},{"ruleId":"715","severity":1,"message":"855","line":11,"column":36,"nodeType":"717","messageId":"718","endLine":11,"endColumn":44},{"ruleId":"715","severity":1,"message":"856","line":22,"column":12,"nodeType":"717","messageId":"718","endLine":22,"endColumn":22},{"ruleId":"726","severity":1,"message":"727","line":71,"column":8,"nodeType":"728","endLine":71,"endColumn":10,"suggestions":"857"},{"ruleId":"726","severity":1,"message":"858","line":35,"column":8,"nodeType":"728","endLine":35,"endColumn":16,"suggestions":"859"},{"ruleId":"726","severity":1,"message":"858","line":35,"column":8,"nodeType":"728","endLine":35,"endColumn":16,"suggestions":"860"},{"ruleId":"715","severity":1,"message":"861","line":18,"column":12,"nodeType":"717","messageId":"718","endLine":18,"endColumn":20},{"ruleId":"726","severity":1,"message":"858","line":51,"column":8,"nodeType":"728","endLine":51,"endColumn":16,"suggestions":"862"},{"ruleId":"726","severity":1,"message":"863","line":11,"column":8,"nodeType":"728","endLine":11,"endColumn":10,"suggestions":"864"},{"ruleId":"715","severity":1,"message":"854","line":11,"column":36,"nodeType":"717","messageId":"718","endLine":11,"endColumn":44},{"ruleId":"715","severity":1,"message":"855","line":11,"column":46,"nodeType":"717","messageId":"718","endLine":11,"endColumn":54},{"ruleId":"715","severity":1,"message":"854","line":11,"column":28,"nodeType":"717","messageId":"718","endLine":11,"endColumn":36},{"ruleId":"715","severity":1,"message":"855","line":11,"column":38,"nodeType":"717","messageId":"718","endLine":11,"endColumn":46},{"ruleId":"715","severity":1,"message":"846","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":19},{"ruleId":"715","severity":1,"message":"854","line":11,"column":36,"nodeType":"717","messageId":"718","endLine":11,"endColumn":44},{"ruleId":"715","severity":1,"message":"855","line":11,"column":46,"nodeType":"717","messageId":"718","endLine":11,"endColumn":54},{"ruleId":"715","severity":1,"message":"865","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":28},{"ruleId":"715","severity":1,"message":"866","line":2,"column":30,"nodeType":"717","messageId":"718","endLine":2,"endColumn":36},{"ruleId":"715","severity":1,"message":"867","line":2,"column":38,"nodeType":"717","messageId":"718","endLine":2,"endColumn":49},{"ruleId":"715","severity":1,"message":"771","line":7,"column":10,"nodeType":"717","messageId":"718","endLine":7,"endColumn":18},{"ruleId":"715","severity":1,"message":"868","line":15,"column":68,"nodeType":"717","messageId":"718","endLine":15,"endColumn":77},{"ruleId":"715","severity":1,"message":"869","line":15,"column":79,"nodeType":"717","messageId":"718","endLine":15,"endColumn":88},{"ruleId":"726","severity":1,"message":"727","line":151,"column":8,"nodeType":"728","endLine":151,"endColumn":13,"suggestions":"870"},"no-native-reassign",["871"],"no-negated-in-lhs",["872"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'customStyles' is assigned a value but never used.","'IoBarChart' is defined but never used.","'IoPeople' is defined but never used.","'IoWallet' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'filters' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'password' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["873"],"no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","unexpected","Duplicate key 'border'.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["874"],"'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["875"],["871"],["872"],["876"],["877"],"React Hook useEffect has missing dependencies: 'password', 'user.id', and 'user.username'. Either include them or remove the dependency array.",["878"],"'useEffect' is defined but never used.","'Select' is defined but never used.","'Notify' is defined but never used.","'setOptions' is assigned a value but never used.","'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.",["879"],"'notify' is assigned a value but never used.","'msg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'password', 'props', 'user.id', and 'user.username'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["880"],"'MiniProgressBar' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'welcome'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["881"],["882"],["883"],["884"],["885"],"React Hook useEffect has a missing dependency: '_testimonials'. Either include it or remove the dependency array.",["886"],"React Hook useEffect has missing dependencies: '_testimonials' and 'fetchTestimonials'. Either include them or remove the dependency array.",["887"],"'IoAdd' is defined but never used.","'IoAddCircle' is defined but never used.","'Activity' is defined but never used.","React Hook useEffect has missing dependencies: 'filters' and 'setFilter'. Either include them or remove the dependency array.",["888"],"'img_2' is defined but never used.","'type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNotify'. Either include it or remove the dependency array.",["889"],"'Button' is defined but never used.","'Checkout' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'IoHeart' is defined but never used.","'product' is assigned a value but never used.","'total' is assigned a value but never used.","'points' is assigned a value but never used.","'stats' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_clients' and '_workers'. Either include them or remove the dependency array.",["890"],"React Hook useEffect has missing dependencies: 'password', 'props', and 'username'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["891"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["892"],["893"],["894"],"'nothing' is assigned a value but never used.","'users' is assigned a value but never used.","'body' is assigned a value but never used.","'fetchPurchases' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_clients' and 'filter'. Either include them or remove the dependency array.",["895"],"React Hook useEffect has a missing dependency: 'fetchClients'. Either include it or remove the dependency array.",["896"],"'IoClose' is defined but never used.","'NewPurchase' is defined but never used.","'RouteIndicator' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'filter'. Either include them or remove the dependency array.",["897"],["898"],["899"],["900"],"React Hook useEffect has missing dependencies: '_checkouts' and 'filter'. Either include them or remove the dependency array.",["901"],"React Hook useEffect has a missing dependency: 'fetchCheckouts'. Either include it or remove the dependency array.",["902"],"'useRef' is defined but never used.","'isDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_products' and 'filter'. Either include them or remove the dependency array.",["903"],["904"],"React Hook useEffect has missing dependencies: '_services' and 'filter'. Either include them or remove the dependency array.",["905"],["906"],["907"],["908"],"React Hook useEffect has a missing dependency: 'fetchWorkers'. Either include it or remove the dependency array.",["909"],["910"],["911"],["871"],["872"],"'add' is assigned a value but never used.","'setAdd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPurchases'. Either include it or remove the dependency array.",["912"],"React Hook useEffect has missing dependencies: '_finances' and 'filter'. Either include them or remove the dependency array.",["913"],"React Hook useEffect has a missing dependency: '_gallery'. Either include it or remove the dependency array.",["914"],"React Hook useEffect has missing dependencies: '_gallery' and 'fetchGallery'. Either include them or remove the dependency array.",["915"],"'SqrButton' is defined but never used.",["871"],["872"],"React Hook useEffect has missing dependencies: '_filter' and '_gallery'. Either include them or remove the dependency array.",["916"],"React Hook useEffect has a missing dependency: 'fetchGallery'. Either include it or remove the dependency array.",["917"],"'user' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'referError' is assigned a value but never used.",["918"],"React Hook useEffect has a missing dependency: 'clients'. Either include it or remove the dependency array.",["919"],["920"],"'referers' is assigned a value but never used.",["921"],"React Hook useEffect has a missing dependency: 'setConfirm'. Either include it or remove the dependency array.",["922"],"'IoAddCircleOutline' is defined but never used.","'IoBody' is defined but never used.","'IoBriefcase' is defined but never used.","'_services' is assigned a value but never used.","'_products' is assigned a value but never used.",["923"],"no-global-assign","no-unsafe-negation",{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"928","fix":"930"},{"desc":"928","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"940","fix":"942"},{"desc":"940","fix":"943"},{"desc":"940","fix":"944"},{"desc":"945","fix":"946"},{"desc":"947","fix":"948"},{"desc":"949","fix":"950"},{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"957","fix":"959"},{"desc":"957","fix":"960"},{"desc":"961","fix":"962"},{"desc":"963","fix":"964"},{"desc":"965","fix":"966"},{"desc":"967","fix":"968"},{"desc":"965","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"926","fix":"978"},{"desc":"979","fix":"980"},{"desc":"934","fix":"981"},{"desc":"976","fix":"982"},{"desc":"926","fix":"983"},{"desc":"984","fix":"985"},{"desc":"979","fix":"986"},{"desc":"934","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"994","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1001","fix":"1003"},{"desc":"1001","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},"Update the dependencies array to be: [isOpen, password, username]",{"range":"1009","text":"1010"},"Update the dependencies array to be: [_products, fetchProducts]",{"range":"1011","text":"1012"},"Update the dependencies array to be: [isOpen, props]",{"range":"1013","text":"1014"},{"range":"1015","text":"1014"},{"range":"1016","text":"1014"},"Update the dependencies array to be: [password, user.id, user.username]",{"range":"1017","text":"1018"},"Update the dependencies array to be: [_services, fetchServices]",{"range":"1019","text":"1020"},"Update the dependencies array to be: [password, props, user.id, user.username]",{"range":"1021","text":"1022"},"Update the dependencies array to be: [props, welcome]",{"range":"1023","text":"1024"},"Update the dependencies array to be: [props]",{"range":"1025","text":"1026"},{"range":"1027","text":"1026"},{"range":"1028","text":"1026"},{"range":"1029","text":"1026"},"Update the dependencies array to be: [_testimonials, text]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [_testimonials, fetchTestimonials]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [filters, setFilter]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [notify, setNotify]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [_clients, _workers]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [_clients, _workers, password, props, username]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [password, props, username]",{"range":"1042","text":"1043"},{"range":"1044","text":"1043"},{"range":"1045","text":"1043"},"Update the dependencies array to be: [_clients, filter, text]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [_clients, fetchClients]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [data, filter, text]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [isOpen, password, props, refresh, user.id, user.username]",{"range":"1052","text":"1053"},{"range":"1054","text":"1051"},"Update the dependencies array to be: [isOpen, password, props, user.id, user.username]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [_checkouts, filter, text]",{"range":"1057","text":"1058"},"Update the dependencies array to be: [_checkouts, fetchCheckouts]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [_products, filter, text]",{"range":"1061","text":"1062"},{"range":"1063","text":"1012"},"Update the dependencies array to be: [_services, filter, text]",{"range":"1064","text":"1065"},{"range":"1066","text":"1020"},{"range":"1067","text":"1062"},{"range":"1068","text":"1012"},"Update the dependencies array to be: [_workers, fetchWorkers]",{"range":"1069","text":"1070"},{"range":"1071","text":"1065"},{"range":"1072","text":"1020"},"Update the dependencies array to be: [_finances, fetchPurchases]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [_finances, filter, text]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [_gallery, text]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [_gallery, fetchGallery]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [_filter, _gallery, text]",{"range":"1081","text":"1082"},{"range":"1083","text":"1080"},"Update the dependencies array to be: [password, username]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [clients, detail]",{"range":"1086","text":"1087"},{"range":"1088","text":"1087"},{"range":"1089","text":"1087"},"Update the dependencies array to be: [setConfirm]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [add, password, username]",{"range":"1092","text":"1093"},[4660,4668],"[isOpen, password, username]",[1011,1022],"[_products, fetchProducts]",[1022,1030],"[isOpen, props]",[1496,1504],[1495,1503],[3275,3277],"[password, user.id, user.username]",[1054,1065],"[_services, fetchServices]",[1447,1449],"[password, props, user.id, user.username]",[979,981],"[props, welcome]",[1452,1454],"[props]",[1878,1880],[2297,2299],[2716,2718],[861,867],"[_testimonials, text]",[1122,1124],"[_testimonials, fetchTestimonials]",[638,640],"[filters, setFilter]",[230,238],"[notify, setNotify]",[1443,1445],"[_clients, _workers]",[2856,2876],"[_clients, _workers, password, props, username]",[4310,4312],"[password, props, username]",[5051,5053],[5703,5705],[2180,2186],"[_clients, filter, text]",[2414,2424],"[_clients, fetchClients]",[1076,1082],"[data, filter, text]",[1901,1918],"[isOpen, password, props, refresh, user.id, user.username]",[1022,1028],[1847,1855],"[isOpen, password, props, user.id, user.username]",[1178,1184],"[_checkouts, filter, text]",[1424,1436],"[_checkouts, fetchCheckouts]",[1116,1122],"[_products, filter, text]",[1356,1367],[1151,1157],"[_services, filter, text]",[1393,1404],[1357,1363],[1597,1608],[2522,2532],"[_workers, fetchWorkers]",[1309,1315],[1551,1562],[1616,1627],"[_finances, fetchPurchases]",[3169,3175],"[_finances, filter, text]",[1093,1099],"[_gallery, text]",[1620,1622],"[_gallery, fetchGallery]",[1480,1486],"[_filter, _gallery, text]",[2007,2017],[2466,2468],"[password, username]",[1242,1250],"[clients, detail]",[1255,1263],[1756,1764],[296,298],"[setConfirm]",[5077,5082],"[add, password, username]"]